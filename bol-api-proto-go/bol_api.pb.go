// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: bol-api-proto-go/bol_api.proto

package bol_api_proto_v1beta1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BulkCommissionQuery_BulkCommissionQueryCondition int32

const (
	BulkCommissionQuery_BULK_COMMISSION_QUERY_CONDITION_NEW        BulkCommissionQuery_BulkCommissionQueryCondition = 0
	BulkCommissionQuery_BULK_COMMISSION_QUERY_CONDITION_AS_NEW     BulkCommissionQuery_BulkCommissionQueryCondition = 1
	BulkCommissionQuery_BULK_COMMISSION_QUERY_CONDITION_GOOD       BulkCommissionQuery_BulkCommissionQueryCondition = 2
	BulkCommissionQuery_BULK_COMMISSION_QUERY_CONDITION_REASONABLE BulkCommissionQuery_BulkCommissionQueryCondition = 3
	BulkCommissionQuery_BULK_COMMISSION_QUERY_CONDITION_MODERATE   BulkCommissionQuery_BulkCommissionQueryCondition = 4
)

// Enum value maps for BulkCommissionQuery_BulkCommissionQueryCondition.
var (
	BulkCommissionQuery_BulkCommissionQueryCondition_name = map[int32]string{
		0: "BULK_COMMISSION_QUERY_CONDITION_NEW",
		1: "BULK_COMMISSION_QUERY_CONDITION_AS_NEW",
		2: "BULK_COMMISSION_QUERY_CONDITION_GOOD",
		3: "BULK_COMMISSION_QUERY_CONDITION_REASONABLE",
		4: "BULK_COMMISSION_QUERY_CONDITION_MODERATE",
	}
	BulkCommissionQuery_BulkCommissionQueryCondition_value = map[string]int32{
		"BULK_COMMISSION_QUERY_CONDITION_NEW":        0,
		"BULK_COMMISSION_QUERY_CONDITION_AS_NEW":     1,
		"BULK_COMMISSION_QUERY_CONDITION_GOOD":       2,
		"BULK_COMMISSION_QUERY_CONDITION_REASONABLE": 3,
		"BULK_COMMISSION_QUERY_CONDITION_MODERATE":   4,
	}
)

func (x BulkCommissionQuery_BulkCommissionQueryCondition) Enum() *BulkCommissionQuery_BulkCommissionQueryCondition {
	p := new(BulkCommissionQuery_BulkCommissionQueryCondition)
	*p = x
	return p
}

func (x BulkCommissionQuery_BulkCommissionQueryCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BulkCommissionQuery_BulkCommissionQueryCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[0].Descriptor()
}

func (BulkCommissionQuery_BulkCommissionQueryCondition) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[0]
}

func (x BulkCommissionQuery_BulkCommissionQueryCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BulkCommissionQuery_BulkCommissionQueryCondition.Descriptor instead.
func (BulkCommissionQuery_BulkCommissionQueryCondition) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{3, 0}
}

type Cancellation_CancellationReasonCode int32

const (
	Cancellation_CANCELLATION_REASON_CODE_OUT_OF_STOCK          Cancellation_CancellationReasonCode = 0
	Cancellation_CANCELLATION_REASON_CODE_REQUESTED_BY_CUSTOMER Cancellation_CancellationReasonCode = 1
	Cancellation_CANCELLATION_REASON_CODE_BAD_CONDITION         Cancellation_CancellationReasonCode = 2
	Cancellation_CANCELLATION_REASON_CODE_HIGHER_SHIPCOST       Cancellation_CancellationReasonCode = 3
	Cancellation_CANCELLATION_REASON_CODE_INCORRECT_PRICE       Cancellation_CancellationReasonCode = 4
	Cancellation_CANCELLATION_REASON_CODE_NOT_AVAIL_IN_TIME     Cancellation_CancellationReasonCode = 5
	Cancellation_CANCELLATION_REASON_CODE_NO_BOL_GUARANTEE      Cancellation_CancellationReasonCode = 6
	Cancellation_CANCELLATION_REASON_CODE_ORDERED_TWICE         Cancellation_CancellationReasonCode = 7
	Cancellation_CANCELLATION_REASON_CODE_RETAIN_ITEM           Cancellation_CancellationReasonCode = 8
	Cancellation_CANCELLATION_REASON_CODE_TECH_ISSUE            Cancellation_CancellationReasonCode = 9
	Cancellation_CANCELLATION_REASON_CODE_UNFINDABLE_ITEM       Cancellation_CancellationReasonCode = 10
	Cancellation_CANCELLATION_REASON_CODE_OTHER                 Cancellation_CancellationReasonCode = 11
)

// Enum value maps for Cancellation_CancellationReasonCode.
var (
	Cancellation_CancellationReasonCode_name = map[int32]string{
		0:  "CANCELLATION_REASON_CODE_OUT_OF_STOCK",
		1:  "CANCELLATION_REASON_CODE_REQUESTED_BY_CUSTOMER",
		2:  "CANCELLATION_REASON_CODE_BAD_CONDITION",
		3:  "CANCELLATION_REASON_CODE_HIGHER_SHIPCOST",
		4:  "CANCELLATION_REASON_CODE_INCORRECT_PRICE",
		5:  "CANCELLATION_REASON_CODE_NOT_AVAIL_IN_TIME",
		6:  "CANCELLATION_REASON_CODE_NO_BOL_GUARANTEE",
		7:  "CANCELLATION_REASON_CODE_ORDERED_TWICE",
		8:  "CANCELLATION_REASON_CODE_RETAIN_ITEM",
		9:  "CANCELLATION_REASON_CODE_TECH_ISSUE",
		10: "CANCELLATION_REASON_CODE_UNFINDABLE_ITEM",
		11: "CANCELLATION_REASON_CODE_OTHER",
	}
	Cancellation_CancellationReasonCode_value = map[string]int32{
		"CANCELLATION_REASON_CODE_OUT_OF_STOCK":          0,
		"CANCELLATION_REASON_CODE_REQUESTED_BY_CUSTOMER": 1,
		"CANCELLATION_REASON_CODE_BAD_CONDITION":         2,
		"CANCELLATION_REASON_CODE_HIGHER_SHIPCOST":       3,
		"CANCELLATION_REASON_CODE_INCORRECT_PRICE":       4,
		"CANCELLATION_REASON_CODE_NOT_AVAIL_IN_TIME":     5,
		"CANCELLATION_REASON_CODE_NO_BOL_GUARANTEE":      6,
		"CANCELLATION_REASON_CODE_ORDERED_TWICE":         7,
		"CANCELLATION_REASON_CODE_RETAIN_ITEM":           8,
		"CANCELLATION_REASON_CODE_TECH_ISSUE":            9,
		"CANCELLATION_REASON_CODE_UNFINDABLE_ITEM":       10,
		"CANCELLATION_REASON_CODE_OTHER":                 11,
	}
)

func (x Cancellation_CancellationReasonCode) Enum() *Cancellation_CancellationReasonCode {
	p := new(Cancellation_CancellationReasonCode)
	*p = x
	return p
}

func (x Cancellation_CancellationReasonCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cancellation_CancellationReasonCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[1].Descriptor()
}

func (Cancellation_CancellationReasonCode) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[1]
}

func (x Cancellation_CancellationReasonCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cancellation_CancellationReasonCode.Descriptor instead.
func (Cancellation_CancellationReasonCode) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{9, 0}
}

type ChangeTransportRequest_ChangeTransportRequestTransporterCode int32

const (
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BRIEFPOST       ChangeTransportRequest_ChangeTransportRequestTransporterCode = 0
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_UPS             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 1
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 2
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_EXTRA       ChangeTransportRequest_ChangeTransportRequestTransporterCode = 3
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_BRIEF       ChangeTransportRequest_ChangeTransportRequestTransporterCode = 4
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_EXPRESS     ChangeTransportRequest_ChangeTransportRequestTransporterCode = 5
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DYL             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 6
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DPD_NL          ChangeTransportRequest_ChangeTransportRequestTransporterCode = 7
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DPD_BE          ChangeTransportRequest_ChangeTransportRequestTransporterCode = 8
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BPOST_BE        ChangeTransportRequest_ChangeTransportRequestTransporterCode = 9
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BPOST_BRIEF     ChangeTransportRequest_ChangeTransportRequestTransporterCode = 10
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHLFORYOU       ChangeTransportRequest_ChangeTransportRequestTransporterCode = 11
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_GLS             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 12
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FEDEX_NL        ChangeTransportRequest_ChangeTransportRequestTransporterCode = 13
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FEDEX_BE        ChangeTransportRequest_ChangeTransportRequestTransporterCode = 14
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_OTHER           ChangeTransportRequest_ChangeTransportRequestTransporterCode = 15
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 16
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL_DE          ChangeTransportRequest_ChangeTransportRequestTransporterCode = 17
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL_GLOBAL_MAIL ChangeTransportRequest_ChangeTransportRequestTransporterCode = 18
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TSN             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 19
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FIEGE           ChangeTransportRequest_ChangeTransportRequestTransporterCode = 20
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TRANSMISSION    ChangeTransportRequest_ChangeTransportRequestTransporterCode = 21
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_PARCEL_NL       ChangeTransportRequest_ChangeTransportRequestTransporterCode = 22
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_LOGOIX          ChangeTransportRequest_ChangeTransportRequestTransporterCode = 23
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_PACKS           ChangeTransportRequest_ChangeTransportRequestTransporterCode = 24
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_COURIER         ChangeTransportRequest_ChangeTransportRequestTransporterCode = 25
	ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_RJP             ChangeTransportRequest_ChangeTransportRequestTransporterCode = 26
)

// Enum value maps for ChangeTransportRequest_ChangeTransportRequestTransporterCode.
var (
	ChangeTransportRequest_ChangeTransportRequestTransporterCode_name = map[int32]string{
		0:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BRIEFPOST",
		1:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_UPS",
		2:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT",
		3:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_EXTRA",
		4:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_BRIEF",
		5:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_EXPRESS",
		6:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DYL",
		7:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DPD_NL",
		8:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DPD_BE",
		9:  "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BPOST_BE",
		10: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BPOST_BRIEF",
		11: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHLFORYOU",
		12: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_GLS",
		13: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FEDEX_NL",
		14: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FEDEX_BE",
		15: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_OTHER",
		16: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL",
		17: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL_DE",
		18: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL_GLOBAL_MAIL",
		19: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TSN",
		20: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FIEGE",
		21: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TRANSMISSION",
		22: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_PARCEL_NL",
		23: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_LOGOIX",
		24: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_PACKS",
		25: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_COURIER",
		26: "CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_RJP",
	}
	ChangeTransportRequest_ChangeTransportRequestTransporterCode_value = map[string]int32{
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BRIEFPOST":       0,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_UPS":             1,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT":             2,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_EXTRA":       3,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_BRIEF":       4,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TNT_EXPRESS":     5,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DYL":             6,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DPD_NL":          7,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DPD_BE":          8,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BPOST_BE":        9,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BPOST_BRIEF":     10,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHLFORYOU":       11,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_GLS":             12,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FEDEX_NL":        13,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FEDEX_BE":        14,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_OTHER":           15,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL":             16,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL_DE":          17,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_DHL_GLOBAL_MAIL": 18,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TSN":             19,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_FIEGE":           20,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_TRANSMISSION":    21,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_PARCEL_NL":       22,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_LOGOIX":          23,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_PACKS":           24,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_COURIER":         25,
		"CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_RJP":             26,
	}
)

func (x ChangeTransportRequest_ChangeTransportRequestTransporterCode) Enum() *ChangeTransportRequest_ChangeTransportRequestTransporterCode {
	p := new(ChangeTransportRequest_ChangeTransportRequestTransporterCode)
	*p = x
	return p
}

func (x ChangeTransportRequest_ChangeTransportRequestTransporterCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeTransportRequest_ChangeTransportRequestTransporterCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[2].Descriptor()
}

func (ChangeTransportRequest_ChangeTransportRequestTransporterCode) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[2]
}

func (x ChangeTransportRequest_ChangeTransportRequestTransporterCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeTransportRequest_ChangeTransportRequestTransporterCode.Descriptor instead.
func (ChangeTransportRequest_ChangeTransportRequestTransporterCode) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{10, 0}
}

type Condition_ConditionCategory int32

const (
	Condition_CONDITION_CATEGORY_NEW        Condition_ConditionCategory = 0
	Condition_CONDITION_CATEGORY_SECONDHAND Condition_ConditionCategory = 1
)

// Enum value maps for Condition_ConditionCategory.
var (
	Condition_ConditionCategory_name = map[int32]string{
		0: "CONDITION_CATEGORY_NEW",
		1: "CONDITION_CATEGORY_SECONDHAND",
	}
	Condition_ConditionCategory_value = map[string]int32{
		"CONDITION_CATEGORY_NEW":        0,
		"CONDITION_CATEGORY_SECONDHAND": 1,
	}
)

func (x Condition_ConditionCategory) Enum() *Condition_ConditionCategory {
	p := new(Condition_ConditionCategory)
	*p = x
	return p
}

func (x Condition_ConditionCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition_ConditionCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[3].Descriptor()
}

func (Condition_ConditionCategory) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[3]
}

func (x Condition_ConditionCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition_ConditionCategory.Descriptor instead.
func (Condition_ConditionCategory) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{12, 0}
}

type Condition_ConditionName int32

const (
	Condition_CONDITION_NAME_NEW        Condition_ConditionName = 0
	Condition_CONDITION_NAME_AS_NEW     Condition_ConditionName = 1
	Condition_CONDITION_NAME_GOOD       Condition_ConditionName = 2
	Condition_CONDITION_NAME_REASONABLE Condition_ConditionName = 3
	Condition_CONDITION_NAME_MODERATE   Condition_ConditionName = 4
)

// Enum value maps for Condition_ConditionName.
var (
	Condition_ConditionName_name = map[int32]string{
		0: "CONDITION_NAME_NEW",
		1: "CONDITION_NAME_AS_NEW",
		2: "CONDITION_NAME_GOOD",
		3: "CONDITION_NAME_REASONABLE",
		4: "CONDITION_NAME_MODERATE",
	}
	Condition_ConditionName_value = map[string]int32{
		"CONDITION_NAME_NEW":        0,
		"CONDITION_NAME_AS_NEW":     1,
		"CONDITION_NAME_GOOD":       2,
		"CONDITION_NAME_REASONABLE": 3,
		"CONDITION_NAME_MODERATE":   4,
	}
)

func (x Condition_ConditionName) Enum() *Condition_ConditionName {
	p := new(Condition_ConditionName)
	*p = x
	return p
}

func (x Condition_ConditionName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition_ConditionName) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[4].Descriptor()
}

func (Condition_ConditionName) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[4]
}

func (x Condition_ConditionName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition_ConditionName.Descriptor instead.
func (Condition_ConditionName) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{12, 1}
}

type CreateOfferExportRequest_CreateOfferExportRequestFormat int32

const (
	CreateOfferExportRequest_CREATE_OFFER_EXPORT_REQUEST_FORMAT_CSV CreateOfferExportRequest_CreateOfferExportRequestFormat = 0
)

// Enum value maps for CreateOfferExportRequest_CreateOfferExportRequestFormat.
var (
	CreateOfferExportRequest_CreateOfferExportRequestFormat_name = map[int32]string{
		0: "CREATE_OFFER_EXPORT_REQUEST_FORMAT_CSV",
	}
	CreateOfferExportRequest_CreateOfferExportRequestFormat_value = map[string]int32{
		"CREATE_OFFER_EXPORT_REQUEST_FORMAT_CSV": 0,
	}
)

func (x CreateOfferExportRequest_CreateOfferExportRequestFormat) Enum() *CreateOfferExportRequest_CreateOfferExportRequestFormat {
	p := new(CreateOfferExportRequest_CreateOfferExportRequestFormat)
	*p = x
	return p
}

func (x CreateOfferExportRequest_CreateOfferExportRequestFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateOfferExportRequest_CreateOfferExportRequestFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[5].Descriptor()
}

func (CreateOfferExportRequest_CreateOfferExportRequestFormat) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[5]
}

func (x CreateOfferExportRequest_CreateOfferExportRequestFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateOfferExportRequest_CreateOfferExportRequestFormat.Descriptor instead.
func (CreateOfferExportRequest_CreateOfferExportRequestFormat) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{14, 0}
}

type Fulfilment_FulfilmentDeliveryCode int32

const (
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_23         Fulfilment_FulfilmentDeliveryCode = 0
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_22         Fulfilment_FulfilmentDeliveryCode = 1
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_21         Fulfilment_FulfilmentDeliveryCode = 2
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_20         Fulfilment_FulfilmentDeliveryCode = 3
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_19         Fulfilment_FulfilmentDeliveryCode = 4
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_18         Fulfilment_FulfilmentDeliveryCode = 5
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_17         Fulfilment_FulfilmentDeliveryCode = 6
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_16         Fulfilment_FulfilmentDeliveryCode = 7
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_15         Fulfilment_FulfilmentDeliveryCode = 8
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_14         Fulfilment_FulfilmentDeliveryCode = 9
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_13         Fulfilment_FulfilmentDeliveryCode = 10
	Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_12         Fulfilment_FulfilmentDeliveryCode = 11
	Fulfilment_FULFILMENT_DELIVERY_CODE_1_2D              Fulfilment_FulfilmentDeliveryCode = 12
	Fulfilment_FULFILMENT_DELIVERY_CODE_2_3D              Fulfilment_FulfilmentDeliveryCode = 13
	Fulfilment_FULFILMENT_DELIVERY_CODE_3_5D              Fulfilment_FulfilmentDeliveryCode = 14
	Fulfilment_FULFILMENT_DELIVERY_CODE_4_8D              Fulfilment_FulfilmentDeliveryCode = 15
	Fulfilment_FULFILMENT_DELIVERY_CODE_1_8D              Fulfilment_FulfilmentDeliveryCode = 16
	Fulfilment_FULFILMENT_DELIVERY_CODE_MIJN_LEVERBELOFTE Fulfilment_FulfilmentDeliveryCode = 17
)

// Enum value maps for Fulfilment_FulfilmentDeliveryCode.
var (
	Fulfilment_FulfilmentDeliveryCode_name = map[int32]string{
		0:  "FULFILMENT_DELIVERY_CODE_24UURS_23",
		1:  "FULFILMENT_DELIVERY_CODE_24UURS_22",
		2:  "FULFILMENT_DELIVERY_CODE_24UURS_21",
		3:  "FULFILMENT_DELIVERY_CODE_24UURS_20",
		4:  "FULFILMENT_DELIVERY_CODE_24UURS_19",
		5:  "FULFILMENT_DELIVERY_CODE_24UURS_18",
		6:  "FULFILMENT_DELIVERY_CODE_24UURS_17",
		7:  "FULFILMENT_DELIVERY_CODE_24UURS_16",
		8:  "FULFILMENT_DELIVERY_CODE_24UURS_15",
		9:  "FULFILMENT_DELIVERY_CODE_24UURS_14",
		10: "FULFILMENT_DELIVERY_CODE_24UURS_13",
		11: "FULFILMENT_DELIVERY_CODE_24UURS_12",
		12: "FULFILMENT_DELIVERY_CODE_1_2D",
		13: "FULFILMENT_DELIVERY_CODE_2_3D",
		14: "FULFILMENT_DELIVERY_CODE_3_5D",
		15: "FULFILMENT_DELIVERY_CODE_4_8D",
		16: "FULFILMENT_DELIVERY_CODE_1_8D",
		17: "FULFILMENT_DELIVERY_CODE_MIJN_LEVERBELOFTE",
	}
	Fulfilment_FulfilmentDeliveryCode_value = map[string]int32{
		"FULFILMENT_DELIVERY_CODE_24UURS_23":         0,
		"FULFILMENT_DELIVERY_CODE_24UURS_22":         1,
		"FULFILMENT_DELIVERY_CODE_24UURS_21":         2,
		"FULFILMENT_DELIVERY_CODE_24UURS_20":         3,
		"FULFILMENT_DELIVERY_CODE_24UURS_19":         4,
		"FULFILMENT_DELIVERY_CODE_24UURS_18":         5,
		"FULFILMENT_DELIVERY_CODE_24UURS_17":         6,
		"FULFILMENT_DELIVERY_CODE_24UURS_16":         7,
		"FULFILMENT_DELIVERY_CODE_24UURS_15":         8,
		"FULFILMENT_DELIVERY_CODE_24UURS_14":         9,
		"FULFILMENT_DELIVERY_CODE_24UURS_13":         10,
		"FULFILMENT_DELIVERY_CODE_24UURS_12":         11,
		"FULFILMENT_DELIVERY_CODE_1_2D":              12,
		"FULFILMENT_DELIVERY_CODE_2_3D":              13,
		"FULFILMENT_DELIVERY_CODE_3_5D":              14,
		"FULFILMENT_DELIVERY_CODE_4_8D":              15,
		"FULFILMENT_DELIVERY_CODE_1_8D":              16,
		"FULFILMENT_DELIVERY_CODE_MIJN_LEVERBELOFTE": 17,
	}
)

func (x Fulfilment_FulfilmentDeliveryCode) Enum() *Fulfilment_FulfilmentDeliveryCode {
	p := new(Fulfilment_FulfilmentDeliveryCode)
	*p = x
	return p
}

func (x Fulfilment_FulfilmentDeliveryCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fulfilment_FulfilmentDeliveryCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[6].Descriptor()
}

func (Fulfilment_FulfilmentDeliveryCode) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[6]
}

func (x Fulfilment_FulfilmentDeliveryCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fulfilment_FulfilmentDeliveryCode.Descriptor instead.
func (Fulfilment_FulfilmentDeliveryCode) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{20, 0}
}

type Fulfilment_FulfilmentType int32

const (
	Fulfilment_FULFILMENT_TYPE_FBB Fulfilment_FulfilmentType = 0
	Fulfilment_FULFILMENT_TYPE_FBR Fulfilment_FulfilmentType = 1
)

// Enum value maps for Fulfilment_FulfilmentType.
var (
	Fulfilment_FulfilmentType_name = map[int32]string{
		0: "FULFILMENT_TYPE_FBB",
		1: "FULFILMENT_TYPE_FBR",
	}
	Fulfilment_FulfilmentType_value = map[string]int32{
		"FULFILMENT_TYPE_FBB": 0,
		"FULFILMENT_TYPE_FBR": 1,
	}
)

func (x Fulfilment_FulfilmentType) Enum() *Fulfilment_FulfilmentType {
	p := new(Fulfilment_FulfilmentType)
	*p = x
	return p
}

func (x Fulfilment_FulfilmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fulfilment_FulfilmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[7].Descriptor()
}

func (Fulfilment_FulfilmentType) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[7]
}

func (x Fulfilment_FulfilmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fulfilment_FulfilmentType.Descriptor instead.
func (Fulfilment_FulfilmentType) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{20, 1}
}

type GetCommissionRequest_GetCommissionRequestCondition int32

const (
	GetCommissionRequest_GET_COMMISSION_REQUEST_CONDITION_NEW        GetCommissionRequest_GetCommissionRequestCondition = 0
	GetCommissionRequest_GET_COMMISSION_REQUEST_CONDITION_AS_NEW     GetCommissionRequest_GetCommissionRequestCondition = 1
	GetCommissionRequest_GET_COMMISSION_REQUEST_CONDITION_GOOD       GetCommissionRequest_GetCommissionRequestCondition = 2
	GetCommissionRequest_GET_COMMISSION_REQUEST_CONDITION_REASONABLE GetCommissionRequest_GetCommissionRequestCondition = 3
	GetCommissionRequest_GET_COMMISSION_REQUEST_CONDITION_MODERATE   GetCommissionRequest_GetCommissionRequestCondition = 4
)

// Enum value maps for GetCommissionRequest_GetCommissionRequestCondition.
var (
	GetCommissionRequest_GetCommissionRequestCondition_name = map[int32]string{
		0: "GET_COMMISSION_REQUEST_CONDITION_NEW",
		1: "GET_COMMISSION_REQUEST_CONDITION_AS_NEW",
		2: "GET_COMMISSION_REQUEST_CONDITION_GOOD",
		3: "GET_COMMISSION_REQUEST_CONDITION_REASONABLE",
		4: "GET_COMMISSION_REQUEST_CONDITION_MODERATE",
	}
	GetCommissionRequest_GetCommissionRequestCondition_value = map[string]int32{
		"GET_COMMISSION_REQUEST_CONDITION_NEW":        0,
		"GET_COMMISSION_REQUEST_CONDITION_AS_NEW":     1,
		"GET_COMMISSION_REQUEST_CONDITION_GOOD":       2,
		"GET_COMMISSION_REQUEST_CONDITION_REASONABLE": 3,
		"GET_COMMISSION_REQUEST_CONDITION_MODERATE":   4,
	}
)

func (x GetCommissionRequest_GetCommissionRequestCondition) Enum() *GetCommissionRequest_GetCommissionRequestCondition {
	p := new(GetCommissionRequest_GetCommissionRequestCondition)
	*p = x
	return p
}

func (x GetCommissionRequest_GetCommissionRequestCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCommissionRequest_GetCommissionRequestCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[8].Descriptor()
}

func (GetCommissionRequest_GetCommissionRequestCondition) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[8]
}

func (x GetCommissionRequest_GetCommissionRequestCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCommissionRequest_GetCommissionRequestCondition.Descriptor instead.
func (GetCommissionRequest_GetCommissionRequestCondition) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{21, 0}
}

type GetInboundsRequest_GetInboundsRequestState int32

const (
	GetInboundsRequest_GET_INBOUNDS_REQUEST_STATE_DRAFT         GetInboundsRequest_GetInboundsRequestState = 0
	GetInboundsRequest_GET_INBOUNDS_REQUEST_STATE_PRE_ANNOUNCED GetInboundsRequest_GetInboundsRequestState = 1
	GetInboundsRequest_GET_INBOUNDS_REQUEST_STATE_ARRIVED_AT_WH GetInboundsRequest_GetInboundsRequestState = 2
	GetInboundsRequest_GET_INBOUNDS_REQUEST_STATE_CANCELLED     GetInboundsRequest_GetInboundsRequestState = 3
)

// Enum value maps for GetInboundsRequest_GetInboundsRequestState.
var (
	GetInboundsRequest_GetInboundsRequestState_name = map[int32]string{
		0: "GET_INBOUNDS_REQUEST_STATE_DRAFT",
		1: "GET_INBOUNDS_REQUEST_STATE_PRE_ANNOUNCED",
		2: "GET_INBOUNDS_REQUEST_STATE_ARRIVED_AT_WH",
		3: "GET_INBOUNDS_REQUEST_STATE_CANCELLED",
	}
	GetInboundsRequest_GetInboundsRequestState_value = map[string]int32{
		"GET_INBOUNDS_REQUEST_STATE_DRAFT":         0,
		"GET_INBOUNDS_REQUEST_STATE_PRE_ANNOUNCED": 1,
		"GET_INBOUNDS_REQUEST_STATE_ARRIVED_AT_WH": 2,
		"GET_INBOUNDS_REQUEST_STATE_CANCELLED":     3,
	}
)

func (x GetInboundsRequest_GetInboundsRequestState) Enum() *GetInboundsRequest_GetInboundsRequestState {
	p := new(GetInboundsRequest_GetInboundsRequestState)
	*p = x
	return p
}

func (x GetInboundsRequest_GetInboundsRequestState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInboundsRequest_GetInboundsRequestState) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[9].Descriptor()
}

func (GetInboundsRequest_GetInboundsRequestState) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[9]
}

func (x GetInboundsRequest_GetInboundsRequestState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInboundsRequest_GetInboundsRequestState.Descriptor instead.
func (GetInboundsRequest_GetInboundsRequestState) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{27, 0}
}

type GetInventoryRequest_GetInventoryRequestState int32

const (
	GetInventoryRequest_GET_INVENTORY_REQUEST_STATE_SALEABLE   GetInventoryRequest_GetInventoryRequestState = 0
	GetInventoryRequest_GET_INVENTORY_REQUEST_STATE_UNSALEABLE GetInventoryRequest_GetInventoryRequestState = 1
)

// Enum value maps for GetInventoryRequest_GetInventoryRequestState.
var (
	GetInventoryRequest_GetInventoryRequestState_name = map[int32]string{
		0: "GET_INVENTORY_REQUEST_STATE_SALEABLE",
		1: "GET_INVENTORY_REQUEST_STATE_UNSALEABLE",
	}
	GetInventoryRequest_GetInventoryRequestState_value = map[string]int32{
		"GET_INVENTORY_REQUEST_STATE_SALEABLE":   0,
		"GET_INVENTORY_REQUEST_STATE_UNSALEABLE": 1,
	}
)

func (x GetInventoryRequest_GetInventoryRequestState) Enum() *GetInventoryRequest_GetInventoryRequestState {
	p := new(GetInventoryRequest_GetInventoryRequestState)
	*p = x
	return p
}

func (x GetInventoryRequest_GetInventoryRequestState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInventoryRequest_GetInventoryRequestState) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[10].Descriptor()
}

func (GetInventoryRequest_GetInventoryRequestState) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[10]
}

func (x GetInventoryRequest_GetInventoryRequestState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInventoryRequest_GetInventoryRequestState.Descriptor instead.
func (GetInventoryRequest_GetInventoryRequestState) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{28, 0}
}

type GetInventoryRequest_GetInventoryRequestStock int32

const (
	GetInventoryRequest_GET_INVENTORY_REQUEST_STOCK_SUFFICIENT   GetInventoryRequest_GetInventoryRequestStock = 0
	GetInventoryRequest_GET_INVENTORY_REQUEST_STOCK_INSUFFICIENT GetInventoryRequest_GetInventoryRequestStock = 1
)

// Enum value maps for GetInventoryRequest_GetInventoryRequestStock.
var (
	GetInventoryRequest_GetInventoryRequestStock_name = map[int32]string{
		0: "GET_INVENTORY_REQUEST_STOCK_SUFFICIENT",
		1: "GET_INVENTORY_REQUEST_STOCK_INSUFFICIENT",
	}
	GetInventoryRequest_GetInventoryRequestStock_value = map[string]int32{
		"GET_INVENTORY_REQUEST_STOCK_SUFFICIENT":   0,
		"GET_INVENTORY_REQUEST_STOCK_INSUFFICIENT": 1,
	}
)

func (x GetInventoryRequest_GetInventoryRequestStock) Enum() *GetInventoryRequest_GetInventoryRequestStock {
	p := new(GetInventoryRequest_GetInventoryRequestStock)
	*p = x
	return p
}

func (x GetInventoryRequest_GetInventoryRequestStock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInventoryRequest_GetInventoryRequestStock) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[11].Descriptor()
}

func (GetInventoryRequest_GetInventoryRequestStock) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[11]
}

func (x GetInventoryRequest_GetInventoryRequestStock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInventoryRequest_GetInventoryRequestStock.Descriptor instead.
func (GetInventoryRequest_GetInventoryRequestStock) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{28, 1}
}

type GetOrdersRequest_GetOrdersRequestFulfilmentMethod int32

const (
	GetOrdersRequest_GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBR GetOrdersRequest_GetOrdersRequestFulfilmentMethod = 0
	GetOrdersRequest_GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBB GetOrdersRequest_GetOrdersRequestFulfilmentMethod = 1
)

// Enum value maps for GetOrdersRequest_GetOrdersRequestFulfilmentMethod.
var (
	GetOrdersRequest_GetOrdersRequestFulfilmentMethod_name = map[int32]string{
		0: "GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBR",
		1: "GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBB",
	}
	GetOrdersRequest_GetOrdersRequestFulfilmentMethod_value = map[string]int32{
		"GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBR": 0,
		"GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBB": 1,
	}
)

func (x GetOrdersRequest_GetOrdersRequestFulfilmentMethod) Enum() *GetOrdersRequest_GetOrdersRequestFulfilmentMethod {
	p := new(GetOrdersRequest_GetOrdersRequestFulfilmentMethod)
	*p = x
	return p
}

func (x GetOrdersRequest_GetOrdersRequestFulfilmentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetOrdersRequest_GetOrdersRequestFulfilmentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[12].Descriptor()
}

func (GetOrdersRequest_GetOrdersRequestFulfilmentMethod) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[12]
}

func (x GetOrdersRequest_GetOrdersRequestFulfilmentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetOrdersRequest_GetOrdersRequestFulfilmentMethod.Descriptor instead.
func (GetOrdersRequest_GetOrdersRequestFulfilmentMethod) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{38, 0}
}

type GetPerformanceIndicatorRequest_Name int32

const (
	GetPerformanceIndicatorRequest_NAME_CANCELLATIONS      GetPerformanceIndicatorRequest_Name = 0
	GetPerformanceIndicatorRequest_NAME_FULFILMENT         GetPerformanceIndicatorRequest_Name = 1
	GetPerformanceIndicatorRequest_NAME_PHONE_AVAILABILITY GetPerformanceIndicatorRequest_Name = 2
	GetPerformanceIndicatorRequest_NAME_RESPONSE_TIME      GetPerformanceIndicatorRequest_Name = 3
	GetPerformanceIndicatorRequest_NAME_CASE_ITEM_RATIO    GetPerformanceIndicatorRequest_Name = 4
	GetPerformanceIndicatorRequest_NAME_TRACK_AND_TRACE    GetPerformanceIndicatorRequest_Name = 5
	GetPerformanceIndicatorRequest_NAME_RETURNS            GetPerformanceIndicatorRequest_Name = 6
	GetPerformanceIndicatorRequest_NAME_REVIEWS            GetPerformanceIndicatorRequest_Name = 7
)

// Enum value maps for GetPerformanceIndicatorRequest_Name.
var (
	GetPerformanceIndicatorRequest_Name_name = map[int32]string{
		0: "NAME_CANCELLATIONS",
		1: "NAME_FULFILMENT",
		2: "NAME_PHONE_AVAILABILITY",
		3: "NAME_RESPONSE_TIME",
		4: "NAME_CASE_ITEM_RATIO",
		5: "NAME_TRACK_AND_TRACE",
		6: "NAME_RETURNS",
		7: "NAME_REVIEWS",
	}
	GetPerformanceIndicatorRequest_Name_value = map[string]int32{
		"NAME_CANCELLATIONS":      0,
		"NAME_FULFILMENT":         1,
		"NAME_PHONE_AVAILABILITY": 2,
		"NAME_RESPONSE_TIME":      3,
		"NAME_CASE_ITEM_RATIO":    4,
		"NAME_TRACK_AND_TRACE":    5,
		"NAME_RETURNS":            6,
		"NAME_REVIEWS":            7,
	}
)

func (x GetPerformanceIndicatorRequest_Name) Enum() *GetPerformanceIndicatorRequest_Name {
	p := new(GetPerformanceIndicatorRequest_Name)
	*p = x
	return p
}

func (x GetPerformanceIndicatorRequest_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPerformanceIndicatorRequest_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[13].Descriptor()
}

func (GetPerformanceIndicatorRequest_Name) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[13]
}

func (x GetPerformanceIndicatorRequest_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPerformanceIndicatorRequest_Name.Descriptor instead.
func (GetPerformanceIndicatorRequest_Name) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{41, 0}
}

type GetProcessStatusRequest_GetProcessStatusRequestEventType int32

const (
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CONFIRM_SHIPMENT         GetProcessStatusRequest_GetProcessStatusRequestEventType = 0
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CANCEL_ORDER             GetProcessStatusRequest_GetProcessStatusRequestEventType = 1
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CHANGE_TRANSPORT         GetProcessStatusRequest_GetProcessStatusRequestEventType = 2
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_HANDLE_RETURN_ITEM       GetProcessStatusRequest_GetProcessStatusRequestEventType = 3
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_RETURN_ITEM       GetProcessStatusRequest_GetProcessStatusRequestEventType = 4
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_INBOUND           GetProcessStatusRequest_GetProcessStatusRequestEventType = 5
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_DELETE_OFFER             GetProcessStatusRequest_GetProcessStatusRequestEventType = 6
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_OFFER             GetProcessStatusRequest_GetProcessStatusRequestEventType = 7
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER             GetProcessStatusRequest_GetProcessStatusRequestEventType = 8
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER_STOCK       GetProcessStatusRequest_GetProcessStatusRequestEventType = 9
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER_PRICE       GetProcessStatusRequest_GetProcessStatusRequestEventType = 10
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_OFFER_EXPORT      GetProcessStatusRequest_GetProcessStatusRequestEventType = 11
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UNPUBLISHED_OFFER_REPORT GetProcessStatusRequest_GetProcessStatusRequestEventType = 12
	GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_PRODUCT_CONTENT   GetProcessStatusRequest_GetProcessStatusRequestEventType = 13
)

// Enum value maps for GetProcessStatusRequest_GetProcessStatusRequestEventType.
var (
	GetProcessStatusRequest_GetProcessStatusRequestEventType_name = map[int32]string{
		0:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CONFIRM_SHIPMENT",
		1:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CANCEL_ORDER",
		2:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CHANGE_TRANSPORT",
		3:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_HANDLE_RETURN_ITEM",
		4:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_RETURN_ITEM",
		5:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_INBOUND",
		6:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_DELETE_OFFER",
		7:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_OFFER",
		8:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER",
		9:  "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER_STOCK",
		10: "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER_PRICE",
		11: "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_OFFER_EXPORT",
		12: "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UNPUBLISHED_OFFER_REPORT",
		13: "GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_PRODUCT_CONTENT",
	}
	GetProcessStatusRequest_GetProcessStatusRequestEventType_value = map[string]int32{
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CONFIRM_SHIPMENT":         0,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CANCEL_ORDER":             1,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CHANGE_TRANSPORT":         2,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_HANDLE_RETURN_ITEM":       3,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_RETURN_ITEM":       4,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_INBOUND":           5,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_DELETE_OFFER":             6,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_OFFER":             7,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER":             8,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER_STOCK":       9,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UPDATE_OFFER_PRICE":       10,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_OFFER_EXPORT":      11,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_UNPUBLISHED_OFFER_REPORT": 12,
		"GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CREATE_PRODUCT_CONTENT":   13,
	}
)

func (x GetProcessStatusRequest_GetProcessStatusRequestEventType) Enum() *GetProcessStatusRequest_GetProcessStatusRequestEventType {
	p := new(GetProcessStatusRequest_GetProcessStatusRequestEventType)
	*p = x
	return p
}

func (x GetProcessStatusRequest_GetProcessStatusRequestEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetProcessStatusRequest_GetProcessStatusRequestEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[14].Descriptor()
}

func (GetProcessStatusRequest_GetProcessStatusRequestEventType) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[14]
}

func (x GetProcessStatusRequest_GetProcessStatusRequestEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetProcessStatusRequest_GetProcessStatusRequestEventType.Descriptor instead.
func (GetProcessStatusRequest_GetProcessStatusRequestEventType) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{43, 0}
}

type GetReturnsRequest_GetReturnsRequestFulfilmentMethod int32

const (
	GetReturnsRequest_GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBR GetReturnsRequest_GetReturnsRequestFulfilmentMethod = 0
	GetReturnsRequest_GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBB GetReturnsRequest_GetReturnsRequestFulfilmentMethod = 1
)

// Enum value maps for GetReturnsRequest_GetReturnsRequestFulfilmentMethod.
var (
	GetReturnsRequest_GetReturnsRequestFulfilmentMethod_name = map[int32]string{
		0: "GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBR",
		1: "GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBB",
	}
	GetReturnsRequest_GetReturnsRequestFulfilmentMethod_value = map[string]int32{
		"GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBR": 0,
		"GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBB": 1,
	}
)

func (x GetReturnsRequest_GetReturnsRequestFulfilmentMethod) Enum() *GetReturnsRequest_GetReturnsRequestFulfilmentMethod {
	p := new(GetReturnsRequest_GetReturnsRequestFulfilmentMethod)
	*p = x
	return p
}

func (x GetReturnsRequest_GetReturnsRequestFulfilmentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetReturnsRequest_GetReturnsRequestFulfilmentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[15].Descriptor()
}

func (GetReturnsRequest_GetReturnsRequestFulfilmentMethod) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[15]
}

func (x GetReturnsRequest_GetReturnsRequestFulfilmentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetReturnsRequest_GetReturnsRequestFulfilmentMethod.Descriptor instead.
func (GetReturnsRequest_GetReturnsRequestFulfilmentMethod) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{47, 0}
}

type GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod int32

const (
	GetShipmentsRequest_GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBR GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod = 0
	GetShipmentsRequest_GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBB GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod = 1
)

// Enum value maps for GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod.
var (
	GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod_name = map[int32]string{
		0: "GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBR",
		1: "GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBB",
	}
	GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod_value = map[string]int32{
		"GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBR": 0,
		"GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBB": 1,
	}
)

func (x GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod) Enum() *GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod {
	p := new(GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod)
	*p = x
	return p
}

func (x GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[16].Descriptor()
}

func (GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[16]
}

func (x GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod.Descriptor instead.
func (GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{49, 0}
}

type Inbound_InboundState int32

const (
	Inbound_INBOUND_STATE_DRAFT         Inbound_InboundState = 0
	Inbound_INBOUND_STATE_PRE_ANNOUNCED Inbound_InboundState = 1
	Inbound_INBOUND_STATE_ARRIVED_AT_WH Inbound_InboundState = 2
	Inbound_INBOUND_STATE_CANCELLED     Inbound_InboundState = 3
)

// Enum value maps for Inbound_InboundState.
var (
	Inbound_InboundState_name = map[int32]string{
		0: "INBOUND_STATE_DRAFT",
		1: "INBOUND_STATE_PRE_ANNOUNCED",
		2: "INBOUND_STATE_ARRIVED_AT_WH",
		3: "INBOUND_STATE_CANCELLED",
	}
	Inbound_InboundState_value = map[string]int32{
		"INBOUND_STATE_DRAFT":         0,
		"INBOUND_STATE_PRE_ANNOUNCED": 1,
		"INBOUND_STATE_ARRIVED_AT_WH": 2,
		"INBOUND_STATE_CANCELLED":     3,
	}
)

func (x Inbound_InboundState) Enum() *Inbound_InboundState {
	p := new(Inbound_InboundState)
	*p = x
	return p
}

func (x Inbound_InboundState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Inbound_InboundState) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[17].Descriptor()
}

func (Inbound_InboundState) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[17]
}

func (x Inbound_InboundState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Inbound_InboundState.Descriptor instead.
func (Inbound_InboundState) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{54, 0}
}

type InboundProductRequest_InboundProductRequestState int32

const (
	InboundProductRequest_INBOUND_PRODUCT_REQUEST_STATE_ANNOUNCED   InboundProductRequest_InboundProductRequestState = 0
	InboundProductRequest_INBOUND_PRODUCT_REQUEST_STATE_UNANNOUNCED InboundProductRequest_InboundProductRequestState = 1
	InboundProductRequest_INBOUND_PRODUCT_REQUEST_STATE_UNKNOWN     InboundProductRequest_InboundProductRequestState = 2
)

// Enum value maps for InboundProductRequest_InboundProductRequestState.
var (
	InboundProductRequest_InboundProductRequestState_name = map[int32]string{
		0: "INBOUND_PRODUCT_REQUEST_STATE_ANNOUNCED",
		1: "INBOUND_PRODUCT_REQUEST_STATE_UNANNOUNCED",
		2: "INBOUND_PRODUCT_REQUEST_STATE_UNKNOWN",
	}
	InboundProductRequest_InboundProductRequestState_value = map[string]int32{
		"INBOUND_PRODUCT_REQUEST_STATE_ANNOUNCED":   0,
		"INBOUND_PRODUCT_REQUEST_STATE_UNANNOUNCED": 1,
		"INBOUND_PRODUCT_REQUEST_STATE_UNKNOWN":     2,
	}
)

func (x InboundProductRequest_InboundProductRequestState) Enum() *InboundProductRequest_InboundProductRequestState {
	p := new(InboundProductRequest_InboundProductRequestState)
	*p = x
	return p
}

func (x InboundProductRequest_InboundProductRequestState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InboundProductRequest_InboundProductRequestState) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[18].Descriptor()
}

func (InboundProductRequest_InboundProductRequestState) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[18]
}

func (x InboundProductRequest_InboundProductRequestState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InboundProductRequest_InboundProductRequestState.Descriptor instead.
func (InboundProductRequest_InboundProductRequestState) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{55, 0}
}

type PickUpPoint_PickUpPointCode int32

const (
	PickUpPoint_PICK_UP_POINT_CODE_PUP_AH_NL PickUpPoint_PickUpPointCode = 0
)

// Enum value maps for PickUpPoint_PickUpPointCode.
var (
	PickUpPoint_PickUpPointCode_name = map[int32]string{
		0: "PICK_UP_POINT_CODE_PUP_AH_NL",
	}
	PickUpPoint_PickUpPointCode_value = map[string]int32{
		"PICK_UP_POINT_CODE_PUP_AH_NL": 0,
	}
)

func (x PickUpPoint_PickUpPointCode) Enum() *PickUpPoint_PickUpPointCode {
	p := new(PickUpPoint_PickUpPointCode)
	*p = x
	return p
}

func (x PickUpPoint_PickUpPointCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PickUpPoint_PickUpPointCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[19].Descriptor()
}

func (PickUpPoint_PickUpPointCode) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[19]
}

func (x PickUpPoint_PickUpPointCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PickUpPoint_PickUpPointCode.Descriptor instead.
func (PickUpPoint_PickUpPointCode) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{69, 0}
}

type ProcessStatus_ProcessStatusStatus int32

const (
	ProcessStatus_PROCESS_STATUS_STATUS_PENDING ProcessStatus_ProcessStatusStatus = 0
	ProcessStatus_PROCESS_STATUS_STATUS_SUCCESS ProcessStatus_ProcessStatusStatus = 1
	ProcessStatus_PROCESS_STATUS_STATUS_FAILURE ProcessStatus_ProcessStatusStatus = 2
	ProcessStatus_PROCESS_STATUS_STATUS_TIMEOUT ProcessStatus_ProcessStatusStatus = 3
)

// Enum value maps for ProcessStatus_ProcessStatusStatus.
var (
	ProcessStatus_ProcessStatusStatus_name = map[int32]string{
		0: "PROCESS_STATUS_STATUS_PENDING",
		1: "PROCESS_STATUS_STATUS_SUCCESS",
		2: "PROCESS_STATUS_STATUS_FAILURE",
		3: "PROCESS_STATUS_STATUS_TIMEOUT",
	}
	ProcessStatus_ProcessStatusStatus_value = map[string]int32{
		"PROCESS_STATUS_STATUS_PENDING": 0,
		"PROCESS_STATUS_STATUS_SUCCESS": 1,
		"PROCESS_STATUS_STATUS_FAILURE": 2,
		"PROCESS_STATUS_STATUS_TIMEOUT": 3,
	}
)

func (x ProcessStatus_ProcessStatusStatus) Enum() *ProcessStatus_ProcessStatusStatus {
	p := new(ProcessStatus_ProcessStatusStatus)
	*p = x
	return p
}

func (x ProcessStatus_ProcessStatusStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessStatus_ProcessStatusStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[20].Descriptor()
}

func (ProcessStatus_ProcessStatusStatus) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[20]
}

func (x ProcessStatus_ProcessStatusStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessStatus_ProcessStatusStatus.Descriptor instead.
func (ProcessStatus_ProcessStatusStatus) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{75, 0}
}

type Product_ProductState int32

const (
	Product_PRODUCT_STATE_ANNOUNCED   Product_ProductState = 0
	Product_PRODUCT_STATE_UNANNOUNCED Product_ProductState = 1
	Product_PRODUCT_STATE_UNKNOWN     Product_ProductState = 2
)

// Enum value maps for Product_ProductState.
var (
	Product_ProductState_name = map[int32]string{
		0: "PRODUCT_STATE_ANNOUNCED",
		1: "PRODUCT_STATE_UNANNOUNCED",
		2: "PRODUCT_STATE_UNKNOWN",
	}
	Product_ProductState_value = map[string]int32{
		"PRODUCT_STATE_ANNOUNCED":   0,
		"PRODUCT_STATE_UNANNOUNCED": 1,
		"PRODUCT_STATE_UNKNOWN":     2,
	}
)

func (x Product_ProductState) Enum() *Product_ProductState {
	p := new(Product_ProductState)
	*p = x
	return p
}

func (x Product_ProductState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Product_ProductState) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[21].Descriptor()
}

func (Product_ProductState) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[21]
}

func (x Product_ProductState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Product_ProductState.Descriptor instead.
func (Product_ProductState) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{78, 0}
}

type ProductLabelsRequest_ProductLabelsRequestFormat int32

const (
	ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8159            ProductLabelsRequest_ProductLabelsRequestFormat = 0
	ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8160            ProductLabelsRequest_ProductLabelsRequestFormat = 1
	ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_AVERY_3474             ProductLabelsRequest_ProductLabelsRequestFormat = 2
	ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_DYMO_99012             ProductLabelsRequest_ProductLabelsRequestFormat = 3
	ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_BROTHER_D_K11208_D     ProductLabelsRequest_ProductLabelsRequestFormat = 4
	ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_ZEBRA_Z_PERFORM_1000_T ProductLabelsRequest_ProductLabelsRequestFormat = 5
)

// Enum value maps for ProductLabelsRequest_ProductLabelsRequestFormat.
var (
	ProductLabelsRequest_ProductLabelsRequestFormat_name = map[int32]string{
		0: "PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8159",
		1: "PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8160",
		2: "PRODUCT_LABELS_REQUEST_FORMAT_AVERY_3474",
		3: "PRODUCT_LABELS_REQUEST_FORMAT_DYMO_99012",
		4: "PRODUCT_LABELS_REQUEST_FORMAT_BROTHER_D_K11208_D",
		5: "PRODUCT_LABELS_REQUEST_FORMAT_ZEBRA_Z_PERFORM_1000_T",
	}
	ProductLabelsRequest_ProductLabelsRequestFormat_value = map[string]int32{
		"PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8159":            0,
		"PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8160":            1,
		"PRODUCT_LABELS_REQUEST_FORMAT_AVERY_3474":             2,
		"PRODUCT_LABELS_REQUEST_FORMAT_DYMO_99012":             3,
		"PRODUCT_LABELS_REQUEST_FORMAT_BROTHER_D_K11208_D":     4,
		"PRODUCT_LABELS_REQUEST_FORMAT_ZEBRA_Z_PERFORM_1000_T": 5,
	}
)

func (x ProductLabelsRequest_ProductLabelsRequestFormat) Enum() *ProductLabelsRequest_ProductLabelsRequestFormat {
	p := new(ProductLabelsRequest_ProductLabelsRequestFormat)
	*p = x
	return p
}

func (x ProductLabelsRequest_ProductLabelsRequestFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductLabelsRequest_ProductLabelsRequestFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[22].Descriptor()
}

func (ProductLabelsRequest_ProductLabelsRequestFormat) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[22]
}

func (x ProductLabelsRequest_ProductLabelsRequestFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductLabelsRequest_ProductLabelsRequestFormat.Descriptor instead.
func (ProductLabelsRequest_ProductLabelsRequestFormat) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{80, 0}
}

type ReturnRequest_ReturnRequestHandlingResult int32

const (
	ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_RETURN_RECEIVED                 ReturnRequest_ReturnRequestHandlingResult = 0
	ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_EXCHANGE_PRODUCT                ReturnRequest_ReturnRequestHandlingResult = 1
	ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_RETURN_DOES_NOT_MEET_CONDITIONS ReturnRequest_ReturnRequestHandlingResult = 2
	ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_REPAIR_PRODUCT                  ReturnRequest_ReturnRequestHandlingResult = 3
	ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_CUSTOMER_KEEPS_PRODUCT_PAID     ReturnRequest_ReturnRequestHandlingResult = 4
	ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_STILL_APPROVED                  ReturnRequest_ReturnRequestHandlingResult = 5
)

// Enum value maps for ReturnRequest_ReturnRequestHandlingResult.
var (
	ReturnRequest_ReturnRequestHandlingResult_name = map[int32]string{
		0: "RETURN_REQUEST_HANDLING_RESULT_RETURN_RECEIVED",
		1: "RETURN_REQUEST_HANDLING_RESULT_EXCHANGE_PRODUCT",
		2: "RETURN_REQUEST_HANDLING_RESULT_RETURN_DOES_NOT_MEET_CONDITIONS",
		3: "RETURN_REQUEST_HANDLING_RESULT_REPAIR_PRODUCT",
		4: "RETURN_REQUEST_HANDLING_RESULT_CUSTOMER_KEEPS_PRODUCT_PAID",
		5: "RETURN_REQUEST_HANDLING_RESULT_STILL_APPROVED",
	}
	ReturnRequest_ReturnRequestHandlingResult_value = map[string]int32{
		"RETURN_REQUEST_HANDLING_RESULT_RETURN_RECEIVED":                 0,
		"RETURN_REQUEST_HANDLING_RESULT_EXCHANGE_PRODUCT":                1,
		"RETURN_REQUEST_HANDLING_RESULT_RETURN_DOES_NOT_MEET_CONDITIONS": 2,
		"RETURN_REQUEST_HANDLING_RESULT_REPAIR_PRODUCT":                  3,
		"RETURN_REQUEST_HANDLING_RESULT_CUSTOMER_KEEPS_PRODUCT_PAID":     4,
		"RETURN_REQUEST_HANDLING_RESULT_STILL_APPROVED":                  5,
	}
)

func (x ReturnRequest_ReturnRequestHandlingResult) Enum() *ReturnRequest_ReturnRequestHandlingResult {
	p := new(ReturnRequest_ReturnRequestHandlingResult)
	*p = x
	return p
}

func (x ReturnRequest_ReturnRequestHandlingResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnRequest_ReturnRequestHandlingResult) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[23].Descriptor()
}

func (ReturnRequest_ReturnRequestHandlingResult) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[23]
}

func (x ReturnRequest_ReturnRequestHandlingResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnRequest_ReturnRequestHandlingResult.Descriptor instead.
func (ReturnRequest_ReturnRequestHandlingResult) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{94, 0}
}

type ShipmentItem_ShipmentItemFulfilmentMethod int32

const (
	ShipmentItem_SHIPMENT_ITEM_FULFILMENT_METHOD_FBR ShipmentItem_ShipmentItemFulfilmentMethod = 0
	ShipmentItem_SHIPMENT_ITEM_FULFILMENT_METHOD_FBB ShipmentItem_ShipmentItemFulfilmentMethod = 1
)

// Enum value maps for ShipmentItem_ShipmentItemFulfilmentMethod.
var (
	ShipmentItem_ShipmentItemFulfilmentMethod_name = map[int32]string{
		0: "SHIPMENT_ITEM_FULFILMENT_METHOD_FBR",
		1: "SHIPMENT_ITEM_FULFILMENT_METHOD_FBB",
	}
	ShipmentItem_ShipmentItemFulfilmentMethod_value = map[string]int32{
		"SHIPMENT_ITEM_FULFILMENT_METHOD_FBR": 0,
		"SHIPMENT_ITEM_FULFILMENT_METHOD_FBB": 1,
	}
)

func (x ShipmentItem_ShipmentItemFulfilmentMethod) Enum() *ShipmentItem_ShipmentItemFulfilmentMethod {
	p := new(ShipmentItem_ShipmentItemFulfilmentMethod)
	*p = x
	return p
}

func (x ShipmentItem_ShipmentItemFulfilmentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShipmentItem_ShipmentItemFulfilmentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[24].Descriptor()
}

func (ShipmentItem_ShipmentItemFulfilmentMethod) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[24]
}

func (x ShipmentItem_ShipmentItemFulfilmentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShipmentItem_ShipmentItemFulfilmentMethod.Descriptor instead.
func (ShipmentItem_ShipmentItemFulfilmentMethod) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{99, 0}
}

type ShipmentItem_ShipmentItemOfferCondition int32

const (
	ShipmentItem_SHIPMENT_ITEM_OFFER_CONDITION_NEW        ShipmentItem_ShipmentItemOfferCondition = 0
	ShipmentItem_SHIPMENT_ITEM_OFFER_CONDITION_AS_NEW     ShipmentItem_ShipmentItemOfferCondition = 1
	ShipmentItem_SHIPMENT_ITEM_OFFER_CONDITION_GOOD       ShipmentItem_ShipmentItemOfferCondition = 2
	ShipmentItem_SHIPMENT_ITEM_OFFER_CONDITION_REASONABLE ShipmentItem_ShipmentItemOfferCondition = 3
	ShipmentItem_SHIPMENT_ITEM_OFFER_CONDITION_MODERATE   ShipmentItem_ShipmentItemOfferCondition = 4
)

// Enum value maps for ShipmentItem_ShipmentItemOfferCondition.
var (
	ShipmentItem_ShipmentItemOfferCondition_name = map[int32]string{
		0: "SHIPMENT_ITEM_OFFER_CONDITION_NEW",
		1: "SHIPMENT_ITEM_OFFER_CONDITION_AS_NEW",
		2: "SHIPMENT_ITEM_OFFER_CONDITION_GOOD",
		3: "SHIPMENT_ITEM_OFFER_CONDITION_REASONABLE",
		4: "SHIPMENT_ITEM_OFFER_CONDITION_MODERATE",
	}
	ShipmentItem_ShipmentItemOfferCondition_value = map[string]int32{
		"SHIPMENT_ITEM_OFFER_CONDITION_NEW":        0,
		"SHIPMENT_ITEM_OFFER_CONDITION_AS_NEW":     1,
		"SHIPMENT_ITEM_OFFER_CONDITION_GOOD":       2,
		"SHIPMENT_ITEM_OFFER_CONDITION_REASONABLE": 3,
		"SHIPMENT_ITEM_OFFER_CONDITION_MODERATE":   4,
	}
)

func (x ShipmentItem_ShipmentItemOfferCondition) Enum() *ShipmentItem_ShipmentItemOfferCondition {
	p := new(ShipmentItem_ShipmentItemOfferCondition)
	*p = x
	return p
}

func (x ShipmentItem_ShipmentItemOfferCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShipmentItem_ShipmentItemOfferCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[25].Descriptor()
}

func (ShipmentItem_ShipmentItemOfferCondition) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[25]
}

func (x ShipmentItem_ShipmentItemOfferCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShipmentItem_ShipmentItemOfferCondition.Descriptor instead.
func (ShipmentItem_ShipmentItemOfferCondition) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{99, 1}
}

type StateTransition_StateTransitionState int32

const (
	StateTransition_STATE_TRANSITION_STATE_DRAFT         StateTransition_StateTransitionState = 0
	StateTransition_STATE_TRANSITION_STATE_PRE_ANNOUNCED StateTransition_StateTransitionState = 1
	StateTransition_STATE_TRANSITION_STATE_ARRIVED_AT_WH StateTransition_StateTransitionState = 2
	StateTransition_STATE_TRANSITION_STATE_CANCELLED     StateTransition_StateTransitionState = 3
)

// Enum value maps for StateTransition_StateTransitionState.
var (
	StateTransition_StateTransitionState_name = map[int32]string{
		0: "STATE_TRANSITION_STATE_DRAFT",
		1: "STATE_TRANSITION_STATE_PRE_ANNOUNCED",
		2: "STATE_TRANSITION_STATE_ARRIVED_AT_WH",
		3: "STATE_TRANSITION_STATE_CANCELLED",
	}
	StateTransition_StateTransitionState_value = map[string]int32{
		"STATE_TRANSITION_STATE_DRAFT":         0,
		"STATE_TRANSITION_STATE_PRE_ANNOUNCED": 1,
		"STATE_TRANSITION_STATE_ARRIVED_AT_WH": 2,
		"STATE_TRANSITION_STATE_CANCELLED":     3,
	}
)

func (x StateTransition_StateTransitionState) Enum() *StateTransition_StateTransitionState {
	p := new(StateTransition_StateTransitionState)
	*p = x
	return p
}

func (x StateTransition_StateTransitionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateTransition_StateTransitionState) Descriptor() protoreflect.EnumDescriptor {
	return file_bol_api_proto_go_bol_api_proto_enumTypes[26].Descriptor()
}

func (StateTransition_StateTransitionState) Type() protoreflect.EnumType {
	return &file_bol_api_proto_go_bol_api_proto_enumTypes[26]
}

func (x StateTransition_StateTransitionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateTransition_StateTransitionState.Descriptor instead.
func (StateTransition_StateTransitionState) EnumDescriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{102, 0}
}

type AddTransportInformationByTransportIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The change transport requested by the user.
	Body *ChangeTransportRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The transport id.
	TransportId int64 `protobuf:"varint,2,opt,name=transport_id,json=transportId,proto3" json:"transport_id,omitempty"`
}

func (x *AddTransportInformationByTransportIdRequest) Reset() {
	*x = AddTransportInformationByTransportIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTransportInformationByTransportIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTransportInformationByTransportIdRequest) ProtoMessage() {}

func (x *AddTransportInformationByTransportIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTransportInformationByTransportIdRequest.ProtoReflect.Descriptor instead.
func (*AddTransportInformationByTransportIdRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{0}
}

func (x *AddTransportInformationByTransportIdRequest) GetBody() *ChangeTransportRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *AddTransportInformationByTransportIdRequest) GetTransportId() int64 {
	if x != nil {
		return x.TransportId
	}
	return 0
}

type AdditionalService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An additional service type that the customer selected when purchasing this order item.
	ServiceType string `protobuf:"bytes,1,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
}

func (x *AdditionalService) Reset() {
	*x = AdditionalService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalService) ProtoMessage() {}

func (x *AdditionalService) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalService.ProtoReflect.Descriptor instead.
func (*AdditionalService) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{1}
}

func (x *AdditionalService) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

// The address details where this order needs to be shipped to. This can be the customers' own address, a (company) business address or a Pick Up Point address.
type AddressDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The supplement belonging to the address.
	AddressSupplement string `protobuf:"bytes,1,opt,name=addressSupplement,proto3" json:"addressSupplement,omitempty"`
	// The chamber of commerce number of the account that placed the order.
	ChamberOfCommerceNumber string `protobuf:"bytes,2,opt,name=chamberOfCommerceNumber,proto3" json:"chamberOfCommerceNumber,omitempty"`
	// The name of the city.
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	// The company name.
	Company string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	// The country code.
	CountryCode string `protobuf:"bytes,5,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	// The delivery phone number of the customer. Filled in case the order requires an appointment for delivering the goods.
	DeliveryPhoneNumber string `protobuf:"bytes,6,opt,name=deliveryPhoneNumber,proto3" json:"deliveryPhoneNumber,omitempty"`
	// A scrambled email address that can be used to contact the customer.
	Email string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	// Additional information related to the address that helps in delivering the package.
	ExtraAddressInformation string `protobuf:"bytes,8,opt,name=extraAddressInformation,proto3" json:"extraAddressInformation,omitempty"`
	// The first name of the customer.
	FirstName string `protobuf:"bytes,9,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// The house number.
	HouseNumber string `protobuf:"bytes,10,opt,name=houseNumber,proto3" json:"houseNumber,omitempty"`
	// The extension on the house number.
	HouseNumberExtended string `protobuf:"bytes,11,opt,name=houseNumberExtended,proto3" json:"houseNumberExtended,omitempty"`
	// The order reference specified by the customer when ordering a product.
	OrderReference string `protobuf:"bytes,12,opt,name=orderReference,proto3" json:"orderReference,omitempty"`
	// The name of Pick Up Point location this order needs to be shipped to.
	PickUpPointName string `protobuf:"bytes,13,opt,name=pickUpPointName,proto3" json:"pickUpPointName,omitempty"`
	// The salutation of the customer (01 = MALE, 02 = FEMALE, 03 = UNKNOWN)
	SalutationCode string `protobuf:"bytes,14,opt,name=salutationCode,proto3" json:"salutationCode,omitempty"`
	// The street name.
	StreetName string `protobuf:"bytes,15,opt,name=streetName,proto3" json:"streetName,omitempty"`
	// The surname of the customer.
	SurName string `protobuf:"bytes,16,opt,name=surName,proto3" json:"surName,omitempty"`
	// The VAT number.
	VatNumber string `protobuf:"bytes,17,opt,name=vatNumber,proto3" json:"vatNumber,omitempty"`
	// The ZIP code.
	ZipCode string `protobuf:"bytes,18,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
}

func (x *AddressDetails) Reset() {
	*x = AddressDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDetails) ProtoMessage() {}

func (x *AddressDetails) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDetails.ProtoReflect.Descriptor instead.
func (*AddressDetails) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{2}
}

func (x *AddressDetails) GetAddressSupplement() string {
	if x != nil {
		return x.AddressSupplement
	}
	return ""
}

func (x *AddressDetails) GetChamberOfCommerceNumber() string {
	if x != nil {
		return x.ChamberOfCommerceNumber
	}
	return ""
}

func (x *AddressDetails) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddressDetails) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *AddressDetails) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *AddressDetails) GetDeliveryPhoneNumber() string {
	if x != nil {
		return x.DeliveryPhoneNumber
	}
	return ""
}

func (x *AddressDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddressDetails) GetExtraAddressInformation() string {
	if x != nil {
		return x.ExtraAddressInformation
	}
	return ""
}

func (x *AddressDetails) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddressDetails) GetHouseNumber() string {
	if x != nil {
		return x.HouseNumber
	}
	return ""
}

func (x *AddressDetails) GetHouseNumberExtended() string {
	if x != nil {
		return x.HouseNumberExtended
	}
	return ""
}

func (x *AddressDetails) GetOrderReference() string {
	if x != nil {
		return x.OrderReference
	}
	return ""
}

func (x *AddressDetails) GetPickUpPointName() string {
	if x != nil {
		return x.PickUpPointName
	}
	return ""
}

func (x *AddressDetails) GetSalutationCode() string {
	if x != nil {
		return x.SalutationCode
	}
	return ""
}

func (x *AddressDetails) GetStreetName() string {
	if x != nil {
		return x.StreetName
	}
	return ""
}

func (x *AddressDetails) GetSurName() string {
	if x != nil {
		return x.SurName
	}
	return ""
}

func (x *AddressDetails) GetVatNumber() string {
	if x != nil {
		return x.VatNumber
	}
	return ""
}

func (x *AddressDetails) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

type BulkCommissionQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The condition of the offer.
	Condition BulkCommissionQuery_BulkCommissionQueryCondition `protobuf:"varint,1,opt,name=condition,proto3,enum=bol_api_proto_v1beta1.BulkCommissionQuery_BulkCommissionQueryCondition" json:"condition,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	// The price of the product with a period as a decimal separator. The price should always have two decimals precision.
	Price float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *BulkCommissionQuery) Reset() {
	*x = BulkCommissionQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCommissionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCommissionQuery) ProtoMessage() {}

func (x *BulkCommissionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCommissionQuery.ProtoReflect.Descriptor instead.
func (*BulkCommissionQuery) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{3}
}

func (x *BulkCommissionQuery) GetCondition() BulkCommissionQuery_BulkCommissionQueryCondition {
	if x != nil {
		return x.Condition
	}
	return BulkCommissionQuery_BULK_COMMISSION_QUERY_CONDITION_NEW
}

func (x *BulkCommissionQuery) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *BulkCommissionQuery) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type BulkCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionQueries []*BulkCommissionQuery `protobuf:"bytes,1,rep,name=commissionQueries,proto3" json:"commissionQueries,omitempty"`
}

func (x *BulkCommissionRequest) Reset() {
	*x = BulkCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCommissionRequest) ProtoMessage() {}

func (x *BulkCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCommissionRequest.ProtoReflect.Descriptor instead.
func (*BulkCommissionRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{4}
}

func (x *BulkCommissionRequest) GetCommissionQueries() []*BulkCommissionQuery {
	if x != nil {
		return x.CommissionQueries
	}
	return nil
}

type BulkCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commissions []*Commission `protobuf:"bytes,1,rep,name=commissions,proto3" json:"commissions,omitempty"`
}

func (x *BulkCommissionResponse) Reset() {
	*x = BulkCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCommissionResponse) ProtoMessage() {}

func (x *BulkCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCommissionResponse.ProtoReflect.Descriptor instead.
func (*BulkCommissionResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{5}
}

func (x *BulkCommissionResponse) GetCommissions() []*Commission {
	if x != nil {
		return x.Commissions
	}
	return nil
}

type BulkProcessStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessStatusQueries []*ProcessStatusId `protobuf:"bytes,1,rep,name=processStatusQueries,proto3" json:"processStatusQueries,omitempty"`
}

func (x *BulkProcessStatusRequest) Reset() {
	*x = BulkProcessStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkProcessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkProcessStatusRequest) ProtoMessage() {}

func (x *BulkProcessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkProcessStatusRequest.ProtoReflect.Descriptor instead.
func (*BulkProcessStatusRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{6}
}

func (x *BulkProcessStatusRequest) GetProcessStatusQueries() []*ProcessStatusId {
	if x != nil {
		return x.ProcessStatusQueries
	}
	return nil
}

type BundlePrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The price per single unit in case the customer orders at least the quantity provided. When using more than 1 price, the respective prices must be in decreasing order using 2 decimal precision and dot separated.
	Price float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	// The minimum quantity a customer must order in order to receive discount. The element with value 1 must at least be present. In case of using more elements, the respective quantities must be in increasing order.
	Quantity int32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BundlePrice) Reset() {
	*x = BundlePrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundlePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundlePrice) ProtoMessage() {}

func (x *BundlePrice) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundlePrice.ProtoReflect.Descriptor instead.
func (*BundlePrice) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{7}
}

func (x *BundlePrice) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BundlePrice) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *Cancellation `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The id of the order item to cancel.
	OrderItemId string `protobuf:"bytes,2,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{8}
}

func (x *CancelOrderRequest) GetBody() *Cancellation {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *CancelOrderRequest) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

type Cancellation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The code representing the reason for cancellation of this item.
	ReasonCode Cancellation_CancellationReasonCode `protobuf:"varint,1,opt,name=reasonCode,proto3,enum=bol_api_proto_v1beta1.Cancellation_CancellationReasonCode" json:"reasonCode,omitempty"`
}

func (x *Cancellation) Reset() {
	*x = Cancellation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cancellation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancellation) ProtoMessage() {}

func (x *Cancellation) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cancellation.ProtoReflect.Descriptor instead.
func (*Cancellation) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{9}
}

func (x *Cancellation) GetReasonCode() Cancellation_CancellationReasonCode {
	if x != nil {
		return x.ReasonCode
	}
	return Cancellation_CANCELLATION_REASON_CODE_OUT_OF_STOCK
}

type ChangeTransportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The track and trace code that is associated with this transport.
	TrackAndTrace   string                                                       `protobuf:"bytes,1,opt,name=trackAndTrace,proto3" json:"trackAndTrace,omitempty"`
	TransporterCode ChangeTransportRequest_ChangeTransportRequestTransporterCode `protobuf:"varint,2,opt,name=transporterCode,proto3,enum=bol_api_proto_v1beta1.ChangeTransportRequest_ChangeTransportRequestTransporterCode" json:"transporterCode,omitempty"`
}

func (x *ChangeTransportRequest) Reset() {
	*x = ChangeTransportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTransportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTransportRequest) ProtoMessage() {}

func (x *ChangeTransportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTransportRequest.ProtoReflect.Descriptor instead.
func (*ChangeTransportRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeTransportRequest) GetTrackAndTrace() string {
	if x != nil {
		return x.TrackAndTrace
	}
	return ""
}

func (x *ChangeTransportRequest) GetTransporterCode() ChangeTransportRequest_ChangeTransportRequestTransporterCode {
	if x != nil {
		return x.TransporterCode
	}
	return ChangeTransportRequest_CHANGE_TRANSPORT_REQUEST_TRANSPORTER_CODE_BRIEFPOST
}

type Commission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The condition of the offer.
	Condition string `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	// Fixed fee.
	FixedAmount float64 `protobuf:"fixed64,3,opt,name=fixedAmount,proto3" json:"fixedAmount,omitempty"`
	// A percentage of the offer price. The percentage can vary per product category.
	Percentage float64 `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	// The price for this product with two decimals precision. The price includes VAT.
	Price      float64      `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Reductions []*Reduction `protobuf:"bytes,6,rep,name=reductions,proto3" json:"reductions,omitempty"`
	// Total applicable fee calculated based on the offer price provided.
	TotalCost float64 `protobuf:"fixed64,7,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	// Total applicable fee calculated based on the offer price if you do not meet the maximum price criteria.
	TotalCostWithoutReduction float64 `protobuf:"fixed64,8,opt,name=totalCostWithoutReduction,proto3" json:"totalCostWithoutReduction,omitempty"`
}

func (x *Commission) Reset() {
	*x = Commission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commission) ProtoMessage() {}

func (x *Commission) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commission.ProtoReflect.Descriptor instead.
func (*Commission) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{11}
}

func (x *Commission) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Commission) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *Commission) GetFixedAmount() float64 {
	if x != nil {
		return x.FixedAmount
	}
	return 0
}

func (x *Commission) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *Commission) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Commission) GetReductions() []*Reduction {
	if x != nil {
		return x.Reductions
	}
	return nil
}

func (x *Commission) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *Commission) GetTotalCostWithoutReduction() float64 {
	if x != nil {
		return x.TotalCostWithoutReduction
	}
	return 0
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The category of the condition. If not given NEW or SECONDHAND is derived from NAME.
	Category Condition_ConditionCategory `protobuf:"varint,1,opt,name=category,proto3,enum=bol_api_proto_v1beta1.Condition_ConditionCategory" json:"category,omitempty"`
	// The description of the condition of the product. Only allowed if name is not NEW and may not contain e-mail addresses.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// The condition of the offered product.
	Name Condition_ConditionName `protobuf:"varint,3,opt,name=name,proto3,enum=bol_api_proto_v1beta1.Condition_ConditionName" json:"name,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{12}
}

func (x *Condition) GetCategory() Condition_ConditionCategory {
	if x != nil {
		return x.Category
	}
	return Condition_CONDITION_CATEGORY_NEW
}

func (x *Condition) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Condition) GetName() Condition_ConditionName {
	if x != nil {
		return x.Name
	}
	return Condition_CONDITION_NAME_NEW
}

type CountryCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Countries in which this offer is currently on sale in the webshop.
	CountryCode string `protobuf:"bytes,1,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
}

func (x *CountryCode) Reset() {
	*x = CountryCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryCode) ProtoMessage() {}

func (x *CountryCode) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryCode.ProtoReflect.Descriptor instead.
func (*CountryCode) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{13}
}

func (x *CountryCode) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type CreateOfferExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The file format in which to return the export.
	Format CreateOfferExportRequest_CreateOfferExportRequestFormat `protobuf:"varint,1,opt,name=format,proto3,enum=bol_api_proto_v1beta1.CreateOfferExportRequest_CreateOfferExportRequestFormat" json:"format,omitempty"`
}

func (x *CreateOfferExportRequest) Reset() {
	*x = CreateOfferExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferExportRequest) ProtoMessage() {}

func (x *CreateOfferExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferExportRequest.ProtoReflect.Descriptor instead.
func (*CreateOfferExportRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{14}
}

func (x *CreateOfferExportRequest) GetFormat() CreateOfferExportRequest_CreateOfferExportRequestFormat {
	if x != nil {
		return x.Format
	}
	return CreateOfferExportRequest_CREATE_OFFER_EXPORT_REQUEST_FORMAT_CSV
}

type CreateOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *Condition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	// The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.
	Ean        string      `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	Fulfilment *Fulfilment `protobuf:"bytes,3,opt,name=fulfilment,proto3" json:"fulfilment,omitempty"`
	// Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
	OnHoldByRetailer bool     `protobuf:"varint,4,opt,name=onHoldByRetailer,proto3" json:"onHoldByRetailer,omitempty"`
	Pricing          *Pricing `protobuf:"bytes,5,opt,name=pricing,proto3" json:"pricing,omitempty"`
	// A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
	ReferenceCode string       `protobuf:"bytes,6,opt,name=referenceCode,proto3" json:"referenceCode,omitempty"`
	Stock         *StockCreate `protobuf:"bytes,7,opt,name=stock,proto3" json:"stock,omitempty"`
	// In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
	UnknownProductTitle string `protobuf:"bytes,8,opt,name=unknownProductTitle,proto3" json:"unknownProductTitle,omitempty"`
}

func (x *CreateOfferRequest) Reset() {
	*x = CreateOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferRequest) ProtoMessage() {}

func (x *CreateOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferRequest.ProtoReflect.Descriptor instead.
func (*CreateOfferRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{15}
}

func (x *CreateOfferRequest) GetCondition() *Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *CreateOfferRequest) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *CreateOfferRequest) GetFulfilment() *Fulfilment {
	if x != nil {
		return x.Fulfilment
	}
	return nil
}

func (x *CreateOfferRequest) GetOnHoldByRetailer() bool {
	if x != nil {
		return x.OnHoldByRetailer
	}
	return false
}

func (x *CreateOfferRequest) GetPricing() *Pricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *CreateOfferRequest) GetReferenceCode() string {
	if x != nil {
		return x.ReferenceCode
	}
	return ""
}

func (x *CreateOfferRequest) GetStock() *StockCreate {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *CreateOfferRequest) GetUnknownProductTitle() string {
	if x != nil {
		return x.UnknownProductTitle
	}
	return ""
}

type CustomerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The supplement belonging to the address.
	AddressSupplement string `protobuf:"bytes,1,opt,name=addressSupplement,proto3" json:"addressSupplement,omitempty"`
	// The chamber of commerce number of the account that placed the order.
	ChamberOfCommerceNumber string `protobuf:"bytes,2,opt,name=chamberOfCommerceNumber,proto3" json:"chamberOfCommerceNumber,omitempty"`
	// The name of the city.
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	// The company name.
	Company string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	// The country code.
	CountryCode string `protobuf:"bytes,5,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	// The delivery phone number of the customer. Filled in case the order requires an appointment for delivering the goods.
	DeliveryPhoneNumber string `protobuf:"bytes,6,opt,name=deliveryPhoneNumber,proto3" json:"deliveryPhoneNumber,omitempty"`
	// A scrambled email address that can be used to contact the customer.
	Email string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	// Additional information related to the address that helps in delivering the package.
	ExtraAddressInformation string `protobuf:"bytes,8,opt,name=extraAddressInformation,proto3" json:"extraAddressInformation,omitempty"`
	// The first name of the customer.
	FirstName string `protobuf:"bytes,9,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// The house number.
	HouseNumber string `protobuf:"bytes,10,opt,name=houseNumber,proto3" json:"houseNumber,omitempty"`
	// The extension on the house number.
	HouseNumberExtended string `protobuf:"bytes,11,opt,name=houseNumberExtended,proto3" json:"houseNumberExtended,omitempty"`
	// The order reference specified by the customer when ordering a product.
	OrderReference string `protobuf:"bytes,12,opt,name=orderReference,proto3" json:"orderReference,omitempty"`
	// The name of Pick Up Point location this order needs to be shipped to.
	PickUpPointName string `protobuf:"bytes,13,opt,name=pickUpPointName,proto3" json:"pickUpPointName,omitempty"`
	// The salutation of the customer (01 = MALE, 02 = FEMALE, 03 = UNKNOWN)
	SalutationCode string `protobuf:"bytes,14,opt,name=salutationCode,proto3" json:"salutationCode,omitempty"`
	// The street name.
	StreetName string `protobuf:"bytes,15,opt,name=streetName,proto3" json:"streetName,omitempty"`
	// The surname of the customer.
	Surname string `protobuf:"bytes,16,opt,name=surname,proto3" json:"surname,omitempty"`
	// The VAT number.
	VatNumber string `protobuf:"bytes,17,opt,name=vatNumber,proto3" json:"vatNumber,omitempty"`
	// The ZIP code.
	ZipCode string `protobuf:"bytes,18,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
}

func (x *CustomerDetails) Reset() {
	*x = CustomerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerDetails) ProtoMessage() {}

func (x *CustomerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerDetails.ProtoReflect.Descriptor instead.
func (*CustomerDetails) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{16}
}

func (x *CustomerDetails) GetAddressSupplement() string {
	if x != nil {
		return x.AddressSupplement
	}
	return ""
}

func (x *CustomerDetails) GetChamberOfCommerceNumber() string {
	if x != nil {
		return x.ChamberOfCommerceNumber
	}
	return ""
}

func (x *CustomerDetails) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CustomerDetails) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CustomerDetails) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CustomerDetails) GetDeliveryPhoneNumber() string {
	if x != nil {
		return x.DeliveryPhoneNumber
	}
	return ""
}

func (x *CustomerDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomerDetails) GetExtraAddressInformation() string {
	if x != nil {
		return x.ExtraAddressInformation
	}
	return ""
}

func (x *CustomerDetails) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CustomerDetails) GetHouseNumber() string {
	if x != nil {
		return x.HouseNumber
	}
	return ""
}

func (x *CustomerDetails) GetHouseNumberExtended() string {
	if x != nil {
		return x.HouseNumberExtended
	}
	return ""
}

func (x *CustomerDetails) GetOrderReference() string {
	if x != nil {
		return x.OrderReference
	}
	return ""
}

func (x *CustomerDetails) GetPickUpPointName() string {
	if x != nil {
		return x.PickUpPointName
	}
	return ""
}

func (x *CustomerDetails) GetSalutationCode() string {
	if x != nil {
		return x.SalutationCode
	}
	return ""
}

func (x *CustomerDetails) GetStreetName() string {
	if x != nil {
		return x.StreetName
	}
	return ""
}

func (x *CustomerDetails) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *CustomerDetails) GetVatNumber() string {
	if x != nil {
		return x.VatNumber
	}
	return ""
}

func (x *CustomerDetails) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

type DeleteOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for an offer.
	OfferId string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
}

func (x *DeleteOfferRequest) Reset() {
	*x = DeleteOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOfferRequest) ProtoMessage() {}

func (x *DeleteOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOfferRequest.ProtoReflect.Descriptor instead.
func (*DeleteOfferRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteOfferRequest) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

type DeliveryWindowsForInboundShipments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An available timeslot to be reserved for inbound shipments.
	TimeSlots []*TimeSlot `protobuf:"bytes,1,rep,name=timeSlots,proto3" json:"timeSlots,omitempty"`
}

func (x *DeliveryWindowsForInboundShipments) Reset() {
	*x = DeliveryWindowsForInboundShipments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryWindowsForInboundShipments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryWindowsForInboundShipments) ProtoMessage() {}

func (x *DeliveryWindowsForInboundShipments) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryWindowsForInboundShipments.ProtoReflect.Descriptor instead.
func (*DeliveryWindowsForInboundShipments) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{18}
}

func (x *DeliveryWindowsForInboundShipments) GetTimeSlots() []*TimeSlot {
	if x != nil {
		return x.TimeSlots
	}
	return nil
}

type Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service norm for this indicator.
	Norm *Norm `protobuf:"bytes,1,opt,name=norm,proto3" json:"norm,omitempty"`
	// The period for which the performance is measured.
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	// The score for this measurement. In case there are no scores for an indicator, this element is omitted from the response.
	Score *Score `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Details) Reset() {
	*x = Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Details) ProtoMessage() {}

func (x *Details) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Details.ProtoReflect.Descriptor instead.
func (*Details) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{19}
}

func (x *Details) GetNorm() *Norm {
	if x != nil {
		return x.Norm
	}
	return nil
}

func (x *Details) GetPeriod() *Period {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *Details) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type Fulfilment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The delivery promise that applies to this offer.
	DeliveryCode Fulfilment_FulfilmentDeliveryCode `protobuf:"varint,1,opt,name=deliveryCode,proto3,enum=bol_api_proto_v1beta1.Fulfilment_FulfilmentDeliveryCode" json:"deliveryCode,omitempty"`
	// List of Pick Up Points codes enabled for this offer.
	PickUpPoints []*PickUpPoint `protobuf:"bytes,2,rep,name=pickUpPoints,proto3" json:"pickUpPoints,omitempty"`
	// Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR.
	Type Fulfilment_FulfilmentType `protobuf:"varint,3,opt,name=type,proto3,enum=bol_api_proto_v1beta1.Fulfilment_FulfilmentType" json:"type,omitempty"`
}

func (x *Fulfilment) Reset() {
	*x = Fulfilment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fulfilment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fulfilment) ProtoMessage() {}

func (x *Fulfilment) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fulfilment.ProtoReflect.Descriptor instead.
func (*Fulfilment) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{20}
}

func (x *Fulfilment) GetDeliveryCode() Fulfilment_FulfilmentDeliveryCode {
	if x != nil {
		return x.DeliveryCode
	}
	return Fulfilment_FULFILMENT_DELIVERY_CODE_24UURS_23
}

func (x *Fulfilment) GetPickUpPoints() []*PickUpPoint {
	if x != nil {
		return x.PickUpPoints
	}
	return nil
}

func (x *Fulfilment) GetType() Fulfilment_FulfilmentType {
	if x != nil {
		return x.Type
	}
	return Fulfilment_FULFILMENT_TYPE_FBB
}

type GetCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The condition of the offer.
	Condition GetCommissionRequest_GetCommissionRequestCondition `protobuf:"varint,1,opt,name=condition,proto3,enum=bol_api_proto_v1beta1.GetCommissionRequest_GetCommissionRequestCondition" json:"condition,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	// The price of the product with a period as a decimal separator. The price should always have two decimals precision.
	Price float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *GetCommissionRequest) Reset() {
	*x = GetCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionRequest) ProtoMessage() {}

func (x *GetCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{21}
}

func (x *GetCommissionRequest) GetCondition() GetCommissionRequest_GetCommissionRequestCondition {
	if x != nil {
		return x.Condition
	}
	return GetCommissionRequest_GET_COMMISSION_REQUEST_CONDITION_NEW
}

func (x *GetCommissionRequest) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *GetCommissionRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetCommissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *BulkCommissionRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetCommissionsRequest) Reset() {
	*x = GetCommissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionsRequest) ProtoMessage() {}

func (x *GetCommissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionsRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{22}
}

func (x *GetCommissionsRequest) GetBody() *BulkCommissionRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetDeliveryWindowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The expected delivery date and time for the inbound in ISO 8601 format.
	DeliveryDate string `protobuf:"bytes,1,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	// The number of items that will be sent in the inbound.
	ItemsToSend int32 `protobuf:"varint,2,opt,name=items_to_send,json=itemsToSend,proto3" json:"items_to_send,omitempty"`
}

func (x *GetDeliveryWindowsRequest) Reset() {
	*x = GetDeliveryWindowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeliveryWindowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeliveryWindowsRequest) ProtoMessage() {}

func (x *GetDeliveryWindowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeliveryWindowsRequest.ProtoReflect.Descriptor instead.
func (*GetDeliveryWindowsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{23}
}

func (x *GetDeliveryWindowsRequest) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *GetDeliveryWindowsRequest) GetItemsToSend() int32 {
	if x != nil {
		return x.ItemsToSend
	}
	return 0
}

type GetInboundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique identifier for an inbound shipment.
	InboundId int64 `protobuf:"varint,1,opt,name=inbound_id,json=inboundId,proto3" json:"inbound_id,omitempty"`
}

func (x *GetInboundRequest) Reset() {
	*x = GetInboundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundRequest) ProtoMessage() {}

func (x *GetInboundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundRequest.ProtoReflect.Descriptor instead.
func (*GetInboundRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetInboundRequest) GetInboundId() int64 {
	if x != nil {
		return x.InboundId
	}
	return 0
}

type GetInboundShippingLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique identifier for an inbound shipment.
	InboundId int64 `protobuf:"varint,1,opt,name=inbound_id,json=inboundId,proto3" json:"inbound_id,omitempty"`
}

func (x *GetInboundShippingLabelRequest) Reset() {
	*x = GetInboundShippingLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundShippingLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundShippingLabelRequest) ProtoMessage() {}

func (x *GetInboundShippingLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundShippingLabelRequest.ProtoReflect.Descriptor instead.
func (*GetInboundShippingLabelRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{25}
}

func (x *GetInboundShippingLabelRequest) GetInboundId() int64 {
	if x != nil {
		return x.InboundId
	}
	return 0
}

type GetInboundShippingLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetInboundShippingLabelResponse) Reset() {
	*x = GetInboundShippingLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundShippingLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundShippingLabelResponse) ProtoMessage() {}

func (x *GetInboundShippingLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundShippingLabelResponse.ProtoReflect.Descriptor instead.
func (*GetInboundShippingLabelResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{26}
}

func (x *GetInboundShippingLabelResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetInboundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The BSKU number associated with this product.
	Bsku string `protobuf:"bytes,1,opt,name=bsku,proto3" json:"bsku,omitempty"`
	// The creation end date and time to find the inbound shipment in ISO 8601 format.
	CreationEnd string `protobuf:"bytes,2,opt,name=creation_end,json=creationEnd,proto3" json:"creation_end,omitempty"`
	// The creation start date and time to find the inbound shipment in ISO 8601 format.
	CreationStart string `protobuf:"bytes,3,opt,name=creation_start,json=creationStart,proto3" json:"creation_start,omitempty"`
	// The requested page number with a pagesize of 50
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// A user defined reference to identify the inbound shipment.
	Reference string `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	// The current state of the inbound shipment.
	State GetInboundsRequest_GetInboundsRequestState `protobuf:"varint,6,opt,name=state,proto3,enum=bol_api_proto_v1beta1.GetInboundsRequest_GetInboundsRequestState" json:"state,omitempty"`
}

func (x *GetInboundsRequest) Reset() {
	*x = GetInboundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundsRequest) ProtoMessage() {}

func (x *GetInboundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundsRequest.ProtoReflect.Descriptor instead.
func (*GetInboundsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{27}
}

func (x *GetInboundsRequest) GetBsku() string {
	if x != nil {
		return x.Bsku
	}
	return ""
}

func (x *GetInboundsRequest) GetCreationEnd() string {
	if x != nil {
		return x.CreationEnd
	}
	return ""
}

func (x *GetInboundsRequest) GetCreationStart() string {
	if x != nil {
		return x.CreationStart
	}
	return ""
}

func (x *GetInboundsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetInboundsRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *GetInboundsRequest) GetState() GetInboundsRequest_GetInboundsRequestState {
	if x != nil {
		return x.State
	}
	return GetInboundsRequest_GET_INBOUNDS_REQUEST_STATE_DRAFT
}

type GetInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested page number with a pagesize of 50
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Filter inventory by providing a range of quantity (min-range)-(max-range).
	Quantity []string `protobuf:"bytes,2,rep,name=quantity,proto3" json:"quantity,omitempty"`
	// Filter inventory by EAN or product title.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// Filter inventory by stock type (saleable or unsaleable).
	State GetInventoryRequest_GetInventoryRequestState `protobuf:"varint,4,opt,name=state,proto3,enum=bol_api_proto_v1beta1.GetInventoryRequest_GetInventoryRequestState" json:"state,omitempty"`
	// Filter inventory by stock level.
	Stock GetInventoryRequest_GetInventoryRequestStock `protobuf:"varint,5,opt,name=stock,proto3,enum=bol_api_proto_v1beta1.GetInventoryRequest_GetInventoryRequestStock" json:"stock,omitempty"`
}

func (x *GetInventoryRequest) Reset() {
	*x = GetInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryRequest) ProtoMessage() {}

func (x *GetInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{28}
}

func (x *GetInventoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetInventoryRequest) GetQuantity() []string {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *GetInventoryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetInventoryRequest) GetState() GetInventoryRequest_GetInventoryRequestState {
	if x != nil {
		return x.State
	}
	return GetInventoryRequest_GET_INVENTORY_REQUEST_STATE_SALEABLE
}

func (x *GetInventoryRequest) GetStock() GetInventoryRequest_GetInventoryRequestStock {
	if x != nil {
		return x.Stock
	}
	return GetInventoryRequest_GET_INVENTORY_REQUEST_STOCK_SUFFICIENT
}

type GetInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the invoice
	InvoiceId int64 `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
}

func (x *GetInvoiceRequest) Reset() {
	*x = GetInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoiceRequest) ProtoMessage() {}

func (x *GetInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoiceRequest.ProtoReflect.Descriptor instead.
func (*GetInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{29}
}

func (x *GetInvoiceRequest) GetInvoiceId() int64 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

type GetInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetInvoiceResponse) Reset() {
	*x = GetInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoiceResponse) ProtoMessage() {}

func (x *GetInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoiceResponse.ProtoReflect.Descriptor instead.
func (*GetInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{30}
}

func (x *GetInvoiceResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetInvoiceSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the invoice.
	InvoiceId int64 `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	// The page to get. Each page contains a maximum of 110.000 lines.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetInvoiceSpecificationRequest) Reset() {
	*x = GetInvoiceSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoiceSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoiceSpecificationRequest) ProtoMessage() {}

func (x *GetInvoiceSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoiceSpecificationRequest.ProtoReflect.Descriptor instead.
func (*GetInvoiceSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{31}
}

func (x *GetInvoiceSpecificationRequest) GetInvoiceId() int64 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

func (x *GetInvoiceSpecificationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetInvoiceSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetInvoiceSpecificationResponse) Reset() {
	*x = GetInvoiceSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoiceSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoiceSpecificationResponse) ProtoMessage() {}

func (x *GetInvoiceSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoiceSpecificationResponse.ProtoReflect.Descriptor instead.
func (*GetInvoiceSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{32}
}

func (x *GetInvoiceSpecificationResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetInvoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Period end date in ISO 8601 standard.
	PeriodEnd string `protobuf:"bytes,1,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	// Period start date in ISO 8601 standard.
	PeriodStart string `protobuf:"bytes,2,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
}

func (x *GetInvoicesRequest) Reset() {
	*x = GetInvoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoicesRequest) ProtoMessage() {}

func (x *GetInvoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoicesRequest.ProtoReflect.Descriptor instead.
func (*GetInvoicesRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{33}
}

func (x *GetInvoicesRequest) GetPeriodEnd() string {
	if x != nil {
		return x.PeriodEnd
	}
	return ""
}

func (x *GetInvoicesRequest) GetPeriodStart() string {
	if x != nil {
		return x.PeriodStart
	}
	return ""
}

type GetInvoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetInvoicesResponse) Reset() {
	*x = GetInvoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInvoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoicesResponse) ProtoMessage() {}

func (x *GetInvoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvoicesResponse.ProtoReflect.Descriptor instead.
func (*GetInvoicesResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{34}
}

func (x *GetInvoicesResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetOfferExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for an offer export.
	OfferExportId string `protobuf:"bytes,1,opt,name=offer_export_id,json=offerExportId,proto3" json:"offer_export_id,omitempty"`
}

func (x *GetOfferExportRequest) Reset() {
	*x = GetOfferExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferExportRequest) ProtoMessage() {}

func (x *GetOfferExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferExportRequest.ProtoReflect.Descriptor instead.
func (*GetOfferExportRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{35}
}

func (x *GetOfferExportRequest) GetOfferExportId() string {
	if x != nil {
		return x.OfferExportId
	}
	return ""
}

type GetOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for an offer.
	OfferId string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
}

func (x *GetOfferRequest) Reset() {
	*x = GetOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferRequest) ProtoMessage() {}

func (x *GetOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferRequest.ProtoReflect.Descriptor instead.
func (*GetOfferRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{36}
}

func (x *GetOfferRequest) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the order to get.
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{37}
}

func (x *GetOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).
	FulfilmentMethod GetOrdersRequest_GetOrdersRequestFulfilmentMethod `protobuf:"varint,1,opt,name=fulfilment_method,json=fulfilmentMethod,proto3,enum=bol_api_proto_v1beta1.GetOrdersRequest_GetOrdersRequestFulfilmentMethod" json:"fulfilment_method,omitempty"`
	// The requested page number with a pagesize of 50
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{38}
}

func (x *GetOrdersRequest) GetFulfilmentMethod() GetOrdersRequest_GetOrdersRequestFulfilmentMethod {
	if x != nil {
		return x.FulfilmentMethod
	}
	return GetOrdersRequest_GET_ORDERS_REQUEST_FULFILMENT_METHOD_FBR
}

func (x *GetOrdersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetPackingListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique identifier for an inbound shipment.
	InboundId int64 `protobuf:"varint,1,opt,name=inbound_id,json=inboundId,proto3" json:"inbound_id,omitempty"`
}

func (x *GetPackingListRequest) Reset() {
	*x = GetPackingListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingListRequest) ProtoMessage() {}

func (x *GetPackingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingListRequest.ProtoReflect.Descriptor instead.
func (*GetPackingListRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{39}
}

func (x *GetPackingListRequest) GetInboundId() int64 {
	if x != nil {
		return x.InboundId
	}
	return 0
}

type GetPackingListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetPackingListResponse) Reset() {
	*x = GetPackingListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingListResponse) ProtoMessage() {}

func (x *GetPackingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingListResponse.ProtoReflect.Descriptor instead.
func (*GetPackingListResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{40}
}

func (x *GetPackingListResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetPerformanceIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the performance indicator
	Name []GetPerformanceIndicatorRequest_Name `protobuf:"varint,1,rep,packed,name=name,proto3,enum=bol_api_proto_v1beta1.GetPerformanceIndicatorRequest_Name" json:"name,omitempty"`
	// Week number in the ISO-8601 standard. If you would like to get the relative scores from the current week, please provide the current week number here. Be advised that measurements can change heavily over the course of the week.
	Week string `protobuf:"bytes,2,opt,name=week,proto3" json:"week,omitempty"`
	// Year number in the ISO-8601 standard.
	Year string `protobuf:"bytes,3,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetPerformanceIndicatorRequest) Reset() {
	*x = GetPerformanceIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPerformanceIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerformanceIndicatorRequest) ProtoMessage() {}

func (x *GetPerformanceIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerformanceIndicatorRequest.ProtoReflect.Descriptor instead.
func (*GetPerformanceIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{41}
}

func (x *GetPerformanceIndicatorRequest) GetName() []GetPerformanceIndicatorRequest_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GetPerformanceIndicatorRequest) GetWeek() string {
	if x != nil {
		return x.Week
	}
	return ""
}

func (x *GetPerformanceIndicatorRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

type GetProcessStatusBulkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *BulkProcessStatusRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetProcessStatusBulkRequest) Reset() {
	*x = GetProcessStatusBulkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessStatusBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusBulkRequest) ProtoMessage() {}

func (x *GetProcessStatusBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusBulkRequest.ProtoReflect.Descriptor instead.
func (*GetProcessStatusBulkRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{42}
}

func (x *GetProcessStatusBulkRequest) GetBody() *BulkProcessStatusRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetProcessStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The entity id is not unique so you need to provide an event type. The entity id can either be order item id, transport id, return number or inbound reference.
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The event type can only be used in combination with the entity id.
	EventType GetProcessStatusRequest_GetProcessStatusRequestEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=bol_api_proto_v1beta1.GetProcessStatusRequest_GetProcessStatusRequestEventType" json:"event_type,omitempty"`
	// The requested page number with a pagesize of 50
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetProcessStatusRequest) Reset() {
	*x = GetProcessStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusRequest) ProtoMessage() {}

func (x *GetProcessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessStatusRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{43}
}

func (x *GetProcessStatusRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *GetProcessStatusRequest) GetEventType() GetProcessStatusRequest_GetProcessStatusRequestEventType {
	if x != nil {
		return x.EventType
	}
	return GetProcessStatusRequest_GET_PROCESS_STATUS_REQUEST_EVENT_TYPE_CONFIRM_SHIPMENT
}

func (x *GetProcessStatusRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetProductLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *ProductLabelsRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetProductLabelsRequest) Reset() {
	*x = GetProductLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductLabelsRequest) ProtoMessage() {}

func (x *GetProductLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductLabelsRequest.ProtoReflect.Descriptor instead.
func (*GetProductLabelsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{44}
}

func (x *GetProductLabelsRequest) GetBody() *ProductLabelsRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetProductLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetProductLabelsResponse) Reset() {
	*x = GetProductLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductLabelsResponse) ProtoMessage() {}

func (x *GetProductLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductLabelsResponse.ProtoReflect.Descriptor instead.
func (*GetProductLabelsResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{45}
}

func (x *GetProductLabelsResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The RMA (Return Merchandise Authorization) id that identifies this particular return.
	RmaId int64 `protobuf:"varint,1,opt,name=rma_id,json=rmaId,proto3" json:"rma_id,omitempty"`
}

func (x *GetReturnRequest) Reset() {
	*x = GetReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnRequest) ProtoMessage() {}

func (x *GetReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnRequest.ProtoReflect.Descriptor instead.
func (*GetReturnRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{46}
}

func (x *GetReturnRequest) GetRmaId() int64 {
	if x != nil {
		return x.RmaId
	}
	return 0
}

type GetReturnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).
	FulfilmentMethod GetReturnsRequest_GetReturnsRequestFulfilmentMethod `protobuf:"varint,1,opt,name=fulfilment_method,json=fulfilmentMethod,proto3,enum=bol_api_proto_v1beta1.GetReturnsRequest_GetReturnsRequestFulfilmentMethod" json:"fulfilment_method,omitempty"`
	// The status of the returns you wish to see, shows either handled or unhandled returns.
	Handled bool `protobuf:"varint,2,opt,name=handled,proto3" json:"handled,omitempty"`
	// The requested page number with a pagesize of 50. The requested page number with a pagesize of 50 returns (within one return there can be multiple rma id's).
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetReturnsRequest) Reset() {
	*x = GetReturnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReturnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReturnsRequest) ProtoMessage() {}

func (x *GetReturnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReturnsRequest.ProtoReflect.Descriptor instead.
func (*GetReturnsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{47}
}

func (x *GetReturnsRequest) GetFulfilmentMethod() GetReturnsRequest_GetReturnsRequestFulfilmentMethod {
	if x != nil {
		return x.FulfilmentMethod
	}
	return GetReturnsRequest_GET_RETURNS_REQUEST_FULFILMENT_METHOD_FBR
}

func (x *GetReturnsRequest) GetHandled() bool {
	if x != nil {
		return x.Handled
	}
	return false
}

func (x *GetReturnsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetShipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the shipment.
	ShipmentId int64 `protobuf:"varint,1,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
}

func (x *GetShipmentRequest) Reset() {
	*x = GetShipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentRequest) ProtoMessage() {}

func (x *GetShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentRequest.ProtoReflect.Descriptor instead.
func (*GetShipmentRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{48}
}

func (x *GetShipmentRequest) GetShipmentId() int64 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

type GetShipmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).
	FulfilmentMethod GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod `protobuf:"varint,1,opt,name=fulfilment_method,json=fulfilmentMethod,proto3,enum=bol_api_proto_v1beta1.GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod" json:"fulfilment_method,omitempty"`
	// The id of the order. Only valid without fulfilment-method. The default fulfilment-method is ignored.
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// The page to get with a page size of 50.
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetShipmentsRequest) Reset() {
	*x = GetShipmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentsRequest) ProtoMessage() {}

func (x *GetShipmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipmentsRequest.ProtoReflect.Descriptor instead.
func (*GetShipmentsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{49}
}

func (x *GetShipmentsRequest) GetFulfilmentMethod() GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod {
	if x != nil {
		return x.FulfilmentMethod
	}
	return GetShipmentsRequest_GET_SHIPMENTS_REQUEST_FULFILMENT_METHOD_FBR
}

func (x *GetShipmentsRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetShipmentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetShippingLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transport id.
	TransportId int64 `protobuf:"varint,1,opt,name=transport_id,json=transportId,proto3" json:"transport_id,omitempty"`
}

func (x *GetShippingLabelRequest) Reset() {
	*x = GetShippingLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShippingLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShippingLabelRequest) ProtoMessage() {}

func (x *GetShippingLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShippingLabelRequest.ProtoReflect.Descriptor instead.
func (*GetShippingLabelRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{50}
}

func (x *GetShippingLabelRequest) GetTransportId() int64 {
	if x != nil {
		return x.TransportId
	}
	return 0
}

type GetShippingLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items [][]byte `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetShippingLabelResponse) Reset() {
	*x = GetShippingLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShippingLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShippingLabelResponse) ProtoMessage() {}

func (x *GetShippingLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShippingLabelResponse.ProtoReflect.Descriptor instead.
func (*GetShippingLabelResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{51}
}

func (x *GetShippingLabelResponse) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetShippingLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The order item id of the order to get purchasable shipping labels from.
	OrderItemId string `protobuf:"bytes,1,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
}

func (x *GetShippingLabelsRequest) Reset() {
	*x = GetShippingLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShippingLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShippingLabelsRequest) ProtoMessage() {}

func (x *GetShippingLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShippingLabelsRequest.ProtoReflect.Descriptor instead.
func (*GetShippingLabelsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{52}
}

func (x *GetShippingLabelsRequest) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

type HandleReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The handling result requested by the retailer.
	Body *ReturnRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The RMA (Return Merchandise Authorization) id that identifies this particular return.
	RmaId int64 `protobuf:"varint,2,opt,name=rma_id,json=rmaId,proto3" json:"rma_id,omitempty"`
}

func (x *HandleReturnRequest) Reset() {
	*x = HandleReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleReturnRequest) ProtoMessage() {}

func (x *HandleReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleReturnRequest.ProtoReflect.Descriptor instead.
func (*HandleReturnRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{53}
}

func (x *HandleReturnRequest) GetBody() *ReturnRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HandleReturnRequest) GetRmaId() int64 {
	if x != nil {
		return x.RmaId
	}
	return 0
}

type Inbound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of announced BSKU‘s.
	AnnouncedBSKUs int64 `protobuf:"varint,1,opt,name=announcedBSKUs,proto3" json:"announcedBSKUs,omitempty"`
	// The number of announced items.
	AnnouncedQuantity int64 `protobuf:"varint,2,opt,name=announcedQuantity,proto3" json:"announcedQuantity,omitempty"`
	// The date the inbound shipment was created in ISO 8601 format.
	CreationDate string `protobuf:"bytes,3,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	// Transporter for the inbound shipment.
	FbbTransporter *Transporter `protobuf:"bytes,4,opt,name=fbbTransporter,proto3" json:"fbbTransporter,omitempty"`
	// A unique identifier for an inbound shipment.
	Id int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	// Indicates whether the inbound will be labeled by bol.com or not.
	LabellingService bool `protobuf:"varint,6,opt,name=labellingService,proto3" json:"labellingService,omitempty"`
	// List of products.
	Products []*Product `protobuf:"bytes,7,rep,name=products,proto3" json:"products,omitempty"`
	// The number of received BSKU‘s.
	ReceivedBSKUs int64 `protobuf:"varint,8,opt,name=receivedBSKUs,proto3" json:"receivedBSKUs,omitempty"`
	// The number of received items.
	ReceivedQuantity int64 `protobuf:"varint,9,opt,name=receivedQuantity,proto3" json:"receivedQuantity,omitempty"`
	// A user defined reference to identify the inbound shipment.
	Reference string `protobuf:"bytes,10,opt,name=reference,proto3" json:"reference,omitempty"`
	// The current state of the inbound shipment.
	State Inbound_InboundState `protobuf:"varint,11,opt,name=state,proto3,enum=bol_api_proto_v1beta1.Inbound_InboundState" json:"state,omitempty"`
	// List of state transitions.
	StateTransitions []*StateTransition `protobuf:"bytes,12,rep,name=stateTransitions,proto3" json:"stateTransitions,omitempty"`
	// The chosen timeslot for the inbound shipment.
	TimeSlot *TimeSlot `protobuf:"bytes,13,opt,name=timeSlot,proto3" json:"timeSlot,omitempty"`
}

func (x *Inbound) Reset() {
	*x = Inbound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inbound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inbound) ProtoMessage() {}

func (x *Inbound) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inbound.ProtoReflect.Descriptor instead.
func (*Inbound) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{54}
}

func (x *Inbound) GetAnnouncedBSKUs() int64 {
	if x != nil {
		return x.AnnouncedBSKUs
	}
	return 0
}

func (x *Inbound) GetAnnouncedQuantity() int64 {
	if x != nil {
		return x.AnnouncedQuantity
	}
	return 0
}

func (x *Inbound) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *Inbound) GetFbbTransporter() *Transporter {
	if x != nil {
		return x.FbbTransporter
	}
	return nil
}

func (x *Inbound) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Inbound) GetLabellingService() bool {
	if x != nil {
		return x.LabellingService
	}
	return false
}

func (x *Inbound) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Inbound) GetReceivedBSKUs() int64 {
	if x != nil {
		return x.ReceivedBSKUs
	}
	return 0
}

func (x *Inbound) GetReceivedQuantity() int64 {
	if x != nil {
		return x.ReceivedQuantity
	}
	return 0
}

func (x *Inbound) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Inbound) GetState() Inbound_InboundState {
	if x != nil {
		return x.State
	}
	return Inbound_INBOUND_STATE_DRAFT
}

func (x *Inbound) GetStateTransitions() []*StateTransition {
	if x != nil {
		return x.StateTransitions
	}
	return nil
}

func (x *Inbound) GetTimeSlot() *TimeSlot {
	if x != nil {
		return x.TimeSlot
	}
	return nil
}

type InboundProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of announced items.
	AnnouncedQuantity int32 `protobuf:"varint,1,opt,name=announcedQuantity,proto3" json:"announcedQuantity,omitempty"`
	// Warning: This field is deprecated. Any value given will be overrided with the bsku known by bol.com.
	Bsku string `protobuf:"bytes,2,opt,name=bsku,proto3" json:"bsku,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,3,opt,name=ean,proto3" json:"ean,omitempty"`
	// The number of received items.
	ReceivedQuantity int32 `protobuf:"varint,4,opt,name=receivedQuantity,proto3" json:"receivedQuantity,omitempty"`
	// The current state of the inbound product.
	State InboundProductRequest_InboundProductRequestState `protobuf:"varint,5,opt,name=state,proto3,enum=bol_api_proto_v1beta1.InboundProductRequest_InboundProductRequestState" json:"state,omitempty"`
}

func (x *InboundProductRequest) Reset() {
	*x = InboundProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundProductRequest) ProtoMessage() {}

func (x *InboundProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundProductRequest.ProtoReflect.Descriptor instead.
func (*InboundProductRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{55}
}

func (x *InboundProductRequest) GetAnnouncedQuantity() int32 {
	if x != nil {
		return x.AnnouncedQuantity
	}
	return 0
}

func (x *InboundProductRequest) GetBsku() string {
	if x != nil {
		return x.Bsku
	}
	return ""
}

func (x *InboundProductRequest) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *InboundProductRequest) GetReceivedQuantity() int32 {
	if x != nil {
		return x.ReceivedQuantity
	}
	return 0
}

func (x *InboundProductRequest) GetState() InboundProductRequest_InboundProductRequestState {
	if x != nil {
		return x.State
	}
	return InboundProductRequest_INBOUND_PRODUCT_REQUEST_STATE_ANNOUNCED
}

type InboundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transporter for the inbound shipment.
	FbbTransporter *Transporter `protobuf:"bytes,1,opt,name=fbbTransporter,proto3" json:"fbbTransporter,omitempty"`
	// Indicates whether the inbound will be labeled by bol.com or not.
	LabellingService bool `protobuf:"varint,2,opt,name=labellingService,proto3" json:"labellingService,omitempty"`
	// List of products.
	Products []*InboundProductRequest `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	// A user defined reference to identify the inbound shipment.
	Reference string `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	// The chosen timeslot for the inbound shipment.
	TimeSlot *TimeSlot `protobuf:"bytes,5,opt,name=timeSlot,proto3" json:"timeSlot,omitempty"`
}

func (x *InboundRequest) Reset() {
	*x = InboundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundRequest) ProtoMessage() {}

func (x *InboundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundRequest.ProtoReflect.Descriptor instead.
func (*InboundRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{56}
}

func (x *InboundRequest) GetFbbTransporter() *Transporter {
	if x != nil {
		return x.FbbTransporter
	}
	return nil
}

func (x *InboundRequest) GetLabellingService() bool {
	if x != nil {
		return x.LabellingService
	}
	return false
}

func (x *InboundRequest) GetProducts() []*InboundProductRequest {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *InboundRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *InboundRequest) GetTimeSlot() *TimeSlot {
	if x != nil {
		return x.TimeSlot
	}
	return nil
}

type Inbounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An inbound shipment.
	Inbounds []*Inbound `protobuf:"bytes,1,rep,name=inbounds,proto3" json:"inbounds,omitempty"`
}

func (x *Inbounds) Reset() {
	*x = Inbounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inbounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inbounds) ProtoMessage() {}

func (x *Inbounds) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inbounds.ProtoReflect.Descriptor instead.
func (*Inbounds) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{57}
}

func (x *Inbounds) GetInbounds() []*Inbound {
	if x != nil {
		return x.Inbounds
	}
	return nil
}

type InventoryOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The BSKU number associated with this product.
	Bsku string `protobuf:"bytes,1,opt,name=bsku,proto3" json:"bsku,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	// The stock that is not available for sale anymore (unsaleable)
	NckStock int32 `protobuf:"varint,3,opt,name=nckStock,proto3" json:"nckStock,omitempty"`
	// The stock that is available for sale (saleable).
	Stock int32 `protobuf:"varint,4,opt,name=stock,proto3" json:"stock,omitempty"`
	// The product title.
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *InventoryOffer) Reset() {
	*x = InventoryOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryOffer) ProtoMessage() {}

func (x *InventoryOffer) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryOffer.ProtoReflect.Descriptor instead.
func (*InventoryOffer) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{58}
}

func (x *InventoryOffer) GetBsku() string {
	if x != nil {
		return x.Bsku
	}
	return ""
}

func (x *InventoryOffer) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *InventoryOffer) GetNckStock() int32 {
	if x != nil {
		return x.NckStock
	}
	return 0
}

func (x *InventoryOffer) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *InventoryOffer) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type InventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offers []*InventoryOffer `protobuf:"bytes,1,rep,name=offers,proto3" json:"offers,omitempty"`
}

func (x *InventoryResponse) Reset() {
	*x = InventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryResponse) ProtoMessage() {}

func (x *InventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryResponse.ProtoReflect.Descriptor instead.
func (*InventoryResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{59}
}

func (x *InventoryResponse) GetOffers() []*InventoryOffer {
	if x != nil {
		return x.Offers
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Href string `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty"`
	// HTTP method
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Rel    string `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{60}
}

func (x *Link) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *Link) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Link) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

type Norm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition norm for this indicator.
	Condition string `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	// Service norm for this indicator.
	Value float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Norm) Reset() {
	*x = Norm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Norm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Norm) ProtoMessage() {}

func (x *Norm) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Norm.ProtoReflect.Descriptor instead.
func (*Norm) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{61}
}

func (x *Norm) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Norm) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type NotPublishableReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error code signalling that the offer is invalid.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// Error message describing the reason the offer is invalid.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *NotPublishableReason) Reset() {
	*x = NotPublishableReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotPublishableReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotPublishableReason) ProtoMessage() {}

func (x *NotPublishableReason) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotPublishableReason.ProtoReflect.Descriptor instead.
func (*NotPublishableReason) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{62}
}

func (x *NotPublishableReason) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NotPublishableReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// An order.
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerDetails *OrderCustomerDetails `protobuf:"bytes,1,opt,name=customerDetails,proto3" json:"customerDetails,omitempty"`
	// The date and time in ISO 8601 format when the order was placed.
	DateTimeOrderPlaced string `protobuf:"bytes,2,opt,name=dateTimeOrderPlaced,proto3" json:"dateTimeOrderPlaced,omitempty"`
	// The order id.
	OrderId    string       `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrderItems []*OrderItem `protobuf:"bytes,4,rep,name=orderItems,proto3" json:"orderItems,omitempty"`
	// Indicates whether this order is shipped to a Pick Up Point.
	PickUpPoint bool `protobuf:"varint,5,opt,name=pickUpPoint,proto3" json:"pickUpPoint,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{63}
}

func (x *Order) GetCustomerDetails() *OrderCustomerDetails {
	if x != nil {
		return x.CustomerDetails
	}
	return nil
}

func (x *Order) GetDateTimeOrderPlaced() string {
	if x != nil {
		return x.DateTimeOrderPlaced
	}
	return ""
}

func (x *Order) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Order) GetOrderItems() []*OrderItem {
	if x != nil {
		return x.OrderItems
	}
	return nil
}

func (x *Order) GetPickUpPoint() bool {
	if x != nil {
		return x.PickUpPoint
	}
	return false
}

// Customer details of the order.
type OrderCustomerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingDetails  *AddressDetails `protobuf:"bytes,1,opt,name=billingDetails,proto3" json:"billingDetails,omitempty"`
	ShipmentDetails *AddressDetails `protobuf:"bytes,2,opt,name=shipmentDetails,proto3" json:"shipmentDetails,omitempty"`
}

func (x *OrderCustomerDetails) Reset() {
	*x = OrderCustomerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCustomerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCustomerDetails) ProtoMessage() {}

func (x *OrderCustomerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCustomerDetails.ProtoReflect.Descriptor instead.
func (*OrderCustomerDetails) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{64}
}

func (x *OrderCustomerDetails) GetBillingDetails() *AddressDetails {
	if x != nil {
		return x.BillingDetails
	}
	return nil
}

func (x *OrderCustomerDetails) GetShipmentDetails() *AddressDetails {
	if x != nil {
		return x.ShipmentDetails
	}
	return nil
}

// Order item details from an order.
type OrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdditionalServices []*AdditionalService `protobuf:"bytes,1,rep,name=additionalServices,proto3" json:"additionalServices,omitempty"`
	// Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.
	CancelRequest bool `protobuf:"varint,2,opt,name=cancelRequest,proto3" json:"cancelRequest,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,3,opt,name=ean,proto3" json:"ean,omitempty"`
	// The exact delivery date at which this order must be delivered at the customer's shipping address. This field is only filled when the customer chose an exact date for delivery. This field is empty in case the latestDeliveryDate is filled.
	ExactDeliveryDate string `protobuf:"bytes,4,opt,name=exactDeliveryDate,proto3" json:"exactDeliveryDate,omitempty"`
	// The date this order item will automatically expire and thereby cancelling this order item from the order.
	ExpiryDate string `protobuf:"bytes,5,opt,name=expiryDate,proto3" json:"expiryDate,omitempty"`
	// Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR.
	FulfilmentMethod string `protobuf:"bytes,6,opt,name=fulfilmentMethod,proto3" json:"fulfilmentMethod,omitempty"`
	// The ultimate delivery date at which this order must be delivered at the customer's shipping address. This field is empty in case the exactDeliveryDate is filled.
	LatestDeliveryDate string `protobuf:"bytes,7,opt,name=latestDeliveryDate,proto3" json:"latestDeliveryDate,omitempty"`
	// Condition of the offer.
	OfferCondition string `protobuf:"bytes,8,opt,name=offerCondition,proto3" json:"offerCondition,omitempty"`
	// Unique identifier for an offer.
	OfferId string `protobuf:"bytes,9,opt,name=offerId,proto3" json:"offerId,omitempty"`
	// The total price for this order item id (item price multiplied by the quantity).
	OfferPrice float64 `protobuf:"fixed64,10,opt,name=offerPrice,proto3" json:"offerPrice,omitempty"`
	// Value provided by retailer through Offer API as ‘referenceCode’.
	OfferReference string `protobuf:"bytes,11,opt,name=offerReference,proto3" json:"offerReference,omitempty"`
	// The id for the order item (1 order can have multiple order items).
	OrderItemId string `protobuf:"bytes,12,opt,name=orderItemId,proto3" json:"orderItemId,omitempty"`
	// Amount of ordered products for this order item id.
	Quantity int32 `protobuf:"varint,13,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Title of the product as shown on the webshop.
	Title string `protobuf:"bytes,14,opt,name=title,proto3" json:"title,omitempty"`
	// Fee of the transaction.
	TransactionFee float64 `protobuf:"fixed64,15,opt,name=transactionFee,proto3" json:"transactionFee,omitempty"`
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{65}
}

func (x *OrderItem) GetAdditionalServices() []*AdditionalService {
	if x != nil {
		return x.AdditionalServices
	}
	return nil
}

func (x *OrderItem) GetCancelRequest() bool {
	if x != nil {
		return x.CancelRequest
	}
	return false
}

func (x *OrderItem) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *OrderItem) GetExactDeliveryDate() string {
	if x != nil {
		return x.ExactDeliveryDate
	}
	return ""
}

func (x *OrderItem) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *OrderItem) GetFulfilmentMethod() string {
	if x != nil {
		return x.FulfilmentMethod
	}
	return ""
}

func (x *OrderItem) GetLatestDeliveryDate() string {
	if x != nil {
		return x.LatestDeliveryDate
	}
	return ""
}

func (x *OrderItem) GetOfferCondition() string {
	if x != nil {
		return x.OfferCondition
	}
	return ""
}

func (x *OrderItem) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *OrderItem) GetOfferPrice() float64 {
	if x != nil {
		return x.OfferPrice
	}
	return 0
}

func (x *OrderItem) GetOfferReference() string {
	if x != nil {
		return x.OfferReference
	}
	return ""
}

func (x *OrderItem) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

func (x *OrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderItem) GetTransactionFee() float64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

type PerformanceIndicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Details of the indicator.
	Details *Details `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	// Indicator name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Interpretation of the data that applies to this measurement.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PerformanceIndicator) Reset() {
	*x = PerformanceIndicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceIndicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceIndicator) ProtoMessage() {}

func (x *PerformanceIndicator) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceIndicator.ProtoReflect.Descriptor instead.
func (*PerformanceIndicator) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{66}
}

func (x *PerformanceIndicator) GetDetails() *Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *PerformanceIndicator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerformanceIndicator) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PerformanceIndicators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerformanceIndicators []*PerformanceIndicator `protobuf:"bytes,1,rep,name=performanceIndicators,proto3" json:"performanceIndicators,omitempty"`
}

func (x *PerformanceIndicators) Reset() {
	*x = PerformanceIndicators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceIndicators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceIndicators) ProtoMessage() {}

func (x *PerformanceIndicators) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceIndicators.ProtoReflect.Descriptor instead.
func (*PerformanceIndicators) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{67}
}

func (x *PerformanceIndicators) GetPerformanceIndicators() []*PerformanceIndicator {
	if x != nil {
		return x.PerformanceIndicators
	}
	return nil
}

type Period struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Week number in the ISO-8601 standard.
	Week string `protobuf:"bytes,1,opt,name=week,proto3" json:"week,omitempty"`
	// Year number in the ISO-8601 standard.
	Year string `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *Period) Reset() {
	*x = Period{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Period) ProtoMessage() {}

func (x *Period) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Period.ProtoReflect.Descriptor instead.
func (*Period) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{68}
}

func (x *Period) GetWeek() string {
	if x != nil {
		return x.Week
	}
	return ""
}

func (x *Period) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

type PickUpPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The code of the pickup point location in case you want to ship items to pickup points.
	Code PickUpPoint_PickUpPointCode `protobuf:"varint,1,opt,name=code,proto3,enum=bol_api_proto_v1beta1.PickUpPoint_PickUpPointCode" json:"code,omitempty"`
}

func (x *PickUpPoint) Reset() {
	*x = PickUpPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickUpPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickUpPoint) ProtoMessage() {}

func (x *PickUpPoint) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickUpPoint.ProtoReflect.Descriptor instead.
func (*PickUpPoint) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{69}
}

func (x *PickUpPoint) GetCode() PickUpPoint_PickUpPointCode {
	if x != nil {
		return x.Code
	}
	return PickUpPoint_PICK_UP_POINT_CODE_PUP_AH_NL
}

type PostInboundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *InboundRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PostInboundRequest) Reset() {
	*x = PostInboundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostInboundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostInboundRequest) ProtoMessage() {}

func (x *PostInboundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostInboundRequest.ProtoReflect.Descriptor instead.
func (*PostInboundRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{70}
}

func (x *PostInboundRequest) GetBody() *InboundRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

type PostOfferExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *CreateOfferExportRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PostOfferExportRequest) Reset() {
	*x = PostOfferExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOfferExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOfferExportRequest) ProtoMessage() {}

func (x *PostOfferExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOfferExportRequest.ProtoReflect.Descriptor instead.
func (*PostOfferExportRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{71}
}

func (x *PostOfferExportRequest) GetBody() *CreateOfferExportRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

type PostOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *CreateOfferRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PostOfferRequest) Reset() {
	*x = PostOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOfferRequest) ProtoMessage() {}

func (x *PostOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOfferRequest.ProtoReflect.Descriptor instead.
func (*PostOfferRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{72}
}

func (x *PostOfferRequest) GetBody() *CreateOfferRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

type Pricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A set of prices (containing a quantity and selling price) that apply to this offer.
	BundlePrices []*BundlePrice `protobuf:"bytes,1,rep,name=bundlePrices,proto3" json:"bundlePrices,omitempty"`
}

func (x *Pricing) Reset() {
	*x = Pricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pricing) ProtoMessage() {}

func (x *Pricing) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pricing.ProtoReflect.Descriptor instead.
func (*Pricing) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{73}
}

func (x *Pricing) GetBundlePrices() []*BundlePrice {
	if x != nil {
		return x.BundlePrices
	}
	return nil
}

// Describes a problem that occurred interacting with the API.
type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Detailed error message describing in additional detail what caused the service to return this problem.
	Detail string `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	// Host identifier describing the server instance that reported the problem.
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// Full URI path of the resource that reported the problem.
	Instance string `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	// HTTP status returned from the endpoint causing the problem.
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	// Title describing the nature of the problem.
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Type URI for this problem. Fixed value: https://api.bol.com/problems.
	Type       string       `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Violations []*Violation `protobuf:"bytes,7,rep,name=violations,proto3" json:"violations,omitempty"`
}

func (x *Problem) Reset() {
	*x = Problem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{74}
}

func (x *Problem) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *Problem) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Problem) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *Problem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Problem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Problem) GetViolations() []*Violation {
	if x != nil {
		return x.Violations
	}
	return nil
}

type ProcessStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time of creation of the response.
	CreateTimestamp string `protobuf:"bytes,1,opt,name=createTimestamp,proto3" json:"createTimestamp,omitempty"`
	// Describes the action that is being processed.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The id of the object being processed. E.g. in case of a shipment process id, you will receive the id of the order item being processed.
	EntityId string `protobuf:"bytes,3,opt,name=entityId,proto3" json:"entityId,omitempty"`
	// Shows error message if applicable.
	ErrorMessage string `protobuf:"bytes,4,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	// Name of the requested action that is being processed.
	EventType string `protobuf:"bytes,5,opt,name=eventType,proto3" json:"eventType,omitempty"`
	// The process status id.
	Id int64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	// Lists available actions applicable to this endpoint.
	Links []*Link `protobuf:"bytes,7,rep,name=links,proto3" json:"links,omitempty"`
	// Status of the action being processed.
	Status ProcessStatus_ProcessStatusStatus `protobuf:"varint,8,opt,name=status,proto3,enum=bol_api_proto_v1beta1.ProcessStatus_ProcessStatusStatus" json:"status,omitempty"`
}

func (x *ProcessStatus) Reset() {
	*x = ProcessStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatus) ProtoMessage() {}

func (x *ProcessStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatus.ProtoReflect.Descriptor instead.
func (*ProcessStatus) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{75}
}

func (x *ProcessStatus) GetCreateTimestamp() string {
	if x != nil {
		return x.CreateTimestamp
	}
	return ""
}

func (x *ProcessStatus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProcessStatus) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ProcessStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProcessStatus) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ProcessStatus) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcessStatus) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ProcessStatus) GetStatus() ProcessStatus_ProcessStatusStatus {
	if x != nil {
		return x.Status
	}
	return ProcessStatus_PROCESS_STATUS_STATUS_PENDING
}

type ProcessStatusId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The process status id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProcessStatusId) Reset() {
	*x = ProcessStatusId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatusId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatusId) ProtoMessage() {}

func (x *ProcessStatusId) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatusId.ProtoReflect.Descriptor instead.
func (*ProcessStatusId) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{76}
}

func (x *ProcessStatusId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProcessStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessStatuses []*ProcessStatus `protobuf:"bytes,1,rep,name=processStatuses,proto3" json:"processStatuses,omitempty"`
}

func (x *ProcessStatusResponse) Reset() {
	*x = ProcessStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStatusResponse) ProtoMessage() {}

func (x *ProcessStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStatusResponse.ProtoReflect.Descriptor instead.
func (*ProcessStatusResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{77}
}

func (x *ProcessStatusResponse) GetProcessStatuses() []*ProcessStatus {
	if x != nil {
		return x.ProcessStatuses
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of announced items.
	AnnouncedQuantity int32 `protobuf:"varint,1,opt,name=announcedQuantity,proto3" json:"announcedQuantity,omitempty"`
	// The BSKU number associated with this product.
	Bsku string `protobuf:"bytes,2,opt,name=bsku,proto3" json:"bsku,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,3,opt,name=ean,proto3" json:"ean,omitempty"`
	// The number of received items.
	ReceivedQuantity int32 `protobuf:"varint,4,opt,name=receivedQuantity,proto3" json:"receivedQuantity,omitempty"`
	// The current state of the inbound product.
	State Product_ProductState `protobuf:"varint,5,opt,name=state,proto3,enum=bol_api_proto_v1beta1.Product_ProductState" json:"state,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{78}
}

func (x *Product) GetAnnouncedQuantity() int32 {
	if x != nil {
		return x.AnnouncedQuantity
	}
	return 0
}

func (x *Product) GetBsku() string {
	if x != nil {
		return x.Bsku
	}
	return ""
}

func (x *Product) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *Product) GetReceivedQuantity() int32 {
	if x != nil {
		return x.ReceivedQuantity
	}
	return 0
}

func (x *Product) GetState() Product_ProductState {
	if x != nil {
		return x.State
	}
	return Product_PRODUCT_STATE_ANNOUNCED
}

type ProductLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,1,opt,name=ean,proto3" json:"ean,omitempty"`
	// Number of products to generate labels for.
	Quantity int32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ProductLabel) Reset() {
	*x = ProductLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLabel) ProtoMessage() {}

func (x *ProductLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLabel.ProtoReflect.Descriptor instead.
func (*ProductLabel) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{79}
}

func (x *ProductLabel) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *ProductLabel) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// The product labels to retrieve.
type ProductLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The printer format to create labels for, defaults to AVERY_J8159 if not provided.
	Format        ProductLabelsRequest_ProductLabelsRequestFormat `protobuf:"varint,1,opt,name=format,proto3,enum=bol_api_proto_v1beta1.ProductLabelsRequest_ProductLabelsRequestFormat" json:"format,omitempty"`
	ProductLabels []*ProductLabel                                 `protobuf:"bytes,2,rep,name=productLabels,proto3" json:"productLabels,omitempty"`
}

func (x *ProductLabelsRequest) Reset() {
	*x = ProductLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLabelsRequest) ProtoMessage() {}

func (x *ProductLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLabelsRequest.ProtoReflect.Descriptor instead.
func (*ProductLabelsRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{80}
}

func (x *ProductLabelsRequest) GetFormat() ProductLabelsRequest_ProductLabelsRequestFormat {
	if x != nil {
		return x.Format
	}
	return ProductLabelsRequest_PRODUCT_LABELS_REQUEST_FORMAT_AVERY_J8159
}

func (x *ProductLabelsRequest) GetProductLabels() []*ProductLabel {
	if x != nil {
		return x.ProductLabels
	}
	return nil
}

type PurchasableShippingLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The discount of the item that has been sold.
	Discount float64 `protobuf:"fixed64,1,opt,name=discount,proto3" json:"discount,omitempty"`
	// The type of the label, representing the way an item is being transported.
	LabelType string `protobuf:"bytes,2,opt,name=labelType,proto3" json:"labelType,omitempty"`
	// The dimensions of a package.
	MaxDimensions string `protobuf:"bytes,3,opt,name=maxDimensions,proto3" json:"maxDimensions,omitempty"`
	// The weight of a package.
	MaxWeight string `protobuf:"bytes,4,opt,name=maxWeight,proto3" json:"maxWeight,omitempty"`
	// The price that is charged to the partner for the shipping label, including VAT.
	PurchasePrice float64 `protobuf:"fixed64,5,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	// The price the item has been sold for.
	RetailerPrice float64 `protobuf:"fixed64,6,opt,name=retailerPrice,proto3" json:"retailerPrice,omitempty"`
	// A unique code referring to the used shipping label for this shipment.
	ShippingLabelCode string `protobuf:"bytes,7,opt,name=shippingLabelCode,proto3" json:"shippingLabelCode,omitempty"`
	// A code representing the transporter which is being used for transportation.
	TransporterCode string `protobuf:"bytes,8,opt,name=transporterCode,proto3" json:"transporterCode,omitempty"`
}

func (x *PurchasableShippingLabel) Reset() {
	*x = PurchasableShippingLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasableShippingLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasableShippingLabel) ProtoMessage() {}

func (x *PurchasableShippingLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasableShippingLabel.ProtoReflect.Descriptor instead.
func (*PurchasableShippingLabel) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{81}
}

func (x *PurchasableShippingLabel) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *PurchasableShippingLabel) GetLabelType() string {
	if x != nil {
		return x.LabelType
	}
	return ""
}

func (x *PurchasableShippingLabel) GetMaxDimensions() string {
	if x != nil {
		return x.MaxDimensions
	}
	return ""
}

func (x *PurchasableShippingLabel) GetMaxWeight() string {
	if x != nil {
		return x.MaxWeight
	}
	return ""
}

func (x *PurchasableShippingLabel) GetPurchasePrice() float64 {
	if x != nil {
		return x.PurchasePrice
	}
	return 0
}

func (x *PurchasableShippingLabel) GetRetailerPrice() float64 {
	if x != nil {
		return x.RetailerPrice
	}
	return 0
}

func (x *PurchasableShippingLabel) GetShippingLabelCode() string {
	if x != nil {
		return x.ShippingLabelCode
	}
	return ""
}

func (x *PurchasableShippingLabel) GetTransporterCode() string {
	if x != nil {
		return x.TransporterCode
	}
	return ""
}

type PurchasableShippingLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchasableShippingLabels []*PurchasableShippingLabel `protobuf:"bytes,1,rep,name=purchasableShippingLabels,proto3" json:"purchasableShippingLabels,omitempty"`
}

func (x *PurchasableShippingLabelsResponse) Reset() {
	*x = PurchasableShippingLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasableShippingLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasableShippingLabelsResponse) ProtoMessage() {}

func (x *PurchasableShippingLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasableShippingLabelsResponse.ProtoReflect.Descriptor instead.
func (*PurchasableShippingLabelsResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{82}
}

func (x *PurchasableShippingLabelsResponse) GetPurchasableShippingLabels() []*PurchasableShippingLabel {
	if x != nil {
		return x.PurchasableShippingLabels
	}
	return nil
}

type PutOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *UpdateOfferRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Unique identifier for an offer.
	OfferId string `protobuf:"bytes,2,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
}

func (x *PutOfferRequest) Reset() {
	*x = PutOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOfferRequest) ProtoMessage() {}

func (x *PutOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOfferRequest.ProtoReflect.Descriptor instead.
func (*PutOfferRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{83}
}

func (x *PutOfferRequest) GetBody() *UpdateOfferRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *PutOfferRequest) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

// An order.
type ReducedOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time in ISO 8601 format when the order was placed.
	DateTimeOrderPlaced string `protobuf:"bytes,1,opt,name=dateTimeOrderPlaced,proto3" json:"dateTimeOrderPlaced,omitempty"`
	// The order id.
	OrderId    string              `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	OrderItems []*ReducedOrderItem `protobuf:"bytes,3,rep,name=orderItems,proto3" json:"orderItems,omitempty"`
}

func (x *ReducedOrder) Reset() {
	*x = ReducedOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedOrder) ProtoMessage() {}

func (x *ReducedOrder) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedOrder.ProtoReflect.Descriptor instead.
func (*ReducedOrder) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{84}
}

func (x *ReducedOrder) GetDateTimeOrderPlaced() string {
	if x != nil {
		return x.DateTimeOrderPlaced
	}
	return ""
}

func (x *ReducedOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReducedOrder) GetOrderItems() []*ReducedOrderItem {
	if x != nil {
		return x.OrderItems
	}
	return nil
}

// An order item.
type ReducedOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.
	CancelRequest bool `protobuf:"varint,1,opt,name=cancelRequest,proto3" json:"cancelRequest,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	// The id for the order item (1 order can have multiple order items).
	OrderItemId string `protobuf:"bytes,3,opt,name=orderItemId,proto3" json:"orderItemId,omitempty"`
	// Amount of ordered products for this order item id.
	Quantity int32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReducedOrderItem) Reset() {
	*x = ReducedOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedOrderItem) ProtoMessage() {}

func (x *ReducedOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedOrderItem.ProtoReflect.Descriptor instead.
func (*ReducedOrderItem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{85}
}

func (x *ReducedOrderItem) GetCancelRequest() bool {
	if x != nil {
		return x.CancelRequest
	}
	return false
}

func (x *ReducedOrderItem) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *ReducedOrderItem) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

func (x *ReducedOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Container for many orders.
type ReducedOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*ReducedOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ReducedOrders) Reset() {
	*x = ReducedOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedOrders) ProtoMessage() {}

func (x *ReducedOrders) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedOrders.ProtoReflect.Descriptor instead.
func (*ReducedOrders) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{86}
}

func (x *ReducedOrders) GetOrders() []*ReducedOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ReducedReturnItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,1,opt,name=ean,proto3" json:"ean,omitempty"`
	// Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR.
	FulfilmentMethod string `protobuf:"bytes,2,opt,name=fulfilmentMethod,proto3" json:"fulfilmentMethod,omitempty"`
	// Indicates if this return item has been handled (by the retailer).
	Handled bool `protobuf:"varint,3,opt,name=handled,proto3" json:"handled,omitempty"`
	// The handling result requested by the retailer.
	HandlingResult string `protobuf:"bytes,4,opt,name=handlingResult,proto3" json:"handlingResult,omitempty"`
	// The id of the customer order this return item is in.
	OrderId string `protobuf:"bytes,5,opt,name=orderId,proto3" json:"orderId,omitempty"`
	// The date and time in ISO 8601 format when the return was processed.
	ProcessingDateTime string `protobuf:"bytes,6,opt,name=processingDateTime,proto3" json:"processingDateTime,omitempty"`
	// The processing result of the return.
	ProcessingResult string `protobuf:"bytes,7,opt,name=processingResult,proto3" json:"processingResult,omitempty"`
	// The quantity that is returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order
	Quantity int32 `protobuf:"varint,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// The date and time in ISO 8601 format when this return was registered.
	RegistrationDateTime string `protobuf:"bytes,9,opt,name=registrationDateTime,proto3" json:"registrationDateTime,omitempty"`
	// The reason why the customer returned this product.
	ReturnReason string `protobuf:"bytes,10,opt,name=returnReason,proto3" json:"returnReason,omitempty"`
	// Additional details from the customer as to why this item was returned.
	ReturnReasonComments string `protobuf:"bytes,11,opt,name=returnReasonComments,proto3" json:"returnReasonComments,omitempty"`
	// The RMA (Return Merchandise Authorization) id that identifies this particular return.
	RmaId int64 `protobuf:"varint,12,opt,name=rmaId,proto3" json:"rmaId,omitempty"`
}

func (x *ReducedReturnItem) Reset() {
	*x = ReducedReturnItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedReturnItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedReturnItem) ProtoMessage() {}

func (x *ReducedReturnItem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedReturnItem.ProtoReflect.Descriptor instead.
func (*ReducedReturnItem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{87}
}

func (x *ReducedReturnItem) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *ReducedReturnItem) GetFulfilmentMethod() string {
	if x != nil {
		return x.FulfilmentMethod
	}
	return ""
}

func (x *ReducedReturnItem) GetHandled() bool {
	if x != nil {
		return x.Handled
	}
	return false
}

func (x *ReducedReturnItem) GetHandlingResult() string {
	if x != nil {
		return x.HandlingResult
	}
	return ""
}

func (x *ReducedReturnItem) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReducedReturnItem) GetProcessingDateTime() string {
	if x != nil {
		return x.ProcessingDateTime
	}
	return ""
}

func (x *ReducedReturnItem) GetProcessingResult() string {
	if x != nil {
		return x.ProcessingResult
	}
	return ""
}

func (x *ReducedReturnItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ReducedReturnItem) GetRegistrationDateTime() string {
	if x != nil {
		return x.RegistrationDateTime
	}
	return ""
}

func (x *ReducedReturnItem) GetReturnReason() string {
	if x != nil {
		return x.ReturnReason
	}
	return ""
}

func (x *ReducedReturnItem) GetReturnReasonComments() string {
	if x != nil {
		return x.ReturnReasonComments
	}
	return ""
}

func (x *ReducedReturnItem) GetRmaId() int64 {
	if x != nil {
		return x.RmaId
	}
	return 0
}

type ReducedShipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time in ISO 8601 format when the order item was shipped.
	ShipmentDate string `protobuf:"bytes,1,opt,name=shipmentDate,proto3" json:"shipmentDate,omitempty"`
	// A unique identifier for this shipment.
	ShipmentId    int64                  `protobuf:"varint,2,opt,name=shipmentId,proto3" json:"shipmentId,omitempty"`
	ShipmentItems []*ReducedShipmentItem `protobuf:"bytes,3,rep,name=shipmentItems,proto3" json:"shipmentItems,omitempty"`
	// Reference supplied by the user when this item was shipped.
	ShipmentReference string            `protobuf:"bytes,4,opt,name=shipmentReference,proto3" json:"shipmentReference,omitempty"`
	Transport         *ReducedTransport `protobuf:"bytes,5,opt,name=transport,proto3" json:"transport,omitempty"`
}

func (x *ReducedShipment) Reset() {
	*x = ReducedShipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedShipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedShipment) ProtoMessage() {}

func (x *ReducedShipment) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedShipment.ProtoReflect.Descriptor instead.
func (*ReducedShipment) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{88}
}

func (x *ReducedShipment) GetShipmentDate() string {
	if x != nil {
		return x.ShipmentDate
	}
	return ""
}

func (x *ReducedShipment) GetShipmentId() int64 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *ReducedShipment) GetShipmentItems() []*ReducedShipmentItem {
	if x != nil {
		return x.ShipmentItems
	}
	return nil
}

func (x *ReducedShipment) GetShipmentReference() string {
	if x != nil {
		return x.ShipmentReference
	}
	return ""
}

func (x *ReducedShipment) GetTransport() *ReducedTransport {
	if x != nil {
		return x.Transport
	}
	return nil
}

type ReducedShipmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique identifier for the order this shipment is related to.
	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	// A unique identifier for the item of the order that was shipped in this shipment.
	OrderItemId string `protobuf:"bytes,2,opt,name=orderItemId,proto3" json:"orderItemId,omitempty"`
}

func (x *ReducedShipmentItem) Reset() {
	*x = ReducedShipmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedShipmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedShipmentItem) ProtoMessage() {}

func (x *ReducedShipmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedShipmentItem.ProtoReflect.Descriptor instead.
func (*ReducedShipmentItem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{89}
}

func (x *ReducedShipmentItem) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReducedShipmentItem) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

type ReducedTransport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transport id.
	TransportId int64 `protobuf:"varint,1,opt,name=transportId,proto3" json:"transportId,omitempty"`
}

func (x *ReducedTransport) Reset() {
	*x = ReducedTransport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReducedTransport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReducedTransport) ProtoMessage() {}

func (x *ReducedTransport) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReducedTransport.ProtoReflect.Descriptor instead.
func (*ReducedTransport) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{90}
}

func (x *ReducedTransport) GetTransportId() int64 {
	if x != nil {
		return x.TransportId
	}
	return 0
}

type Reduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reduction to the commission if the maximum price criteria is met.
	CostReduction float64 `protobuf:"fixed64,1,opt,name=costReduction,proto3" json:"costReduction,omitempty"`
	// The end date from which the commission reduction is not valid anymore.
	EndDate string `protobuf:"bytes,2,opt,name=endDate,proto3" json:"endDate,omitempty"`
	// Maximum offer price that can be used to benefit from a commission reduction.
	MaximumPrice float64 `protobuf:"fixed64,3,opt,name=maximumPrice,proto3" json:"maximumPrice,omitempty"`
	// The start date from which the commission reduction is valid.
	StartDate string `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
}

func (x *Reduction) Reset() {
	*x = Reduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reduction) ProtoMessage() {}

func (x *Reduction) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reduction.ProtoReflect.Descriptor instead.
func (*Reduction) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{91}
}

func (x *Reduction) GetCostReduction() float64 {
	if x != nil {
		return x.CostReduction
	}
	return 0
}

func (x *Reduction) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Reduction) GetMaximumPrice() float64 {
	if x != nil {
		return x.MaximumPrice
	}
	return 0
}

func (x *Reduction) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

type RetailerOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *Condition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	// The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.
	Ean                   string                  `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	Fulfilment            *Fulfilment             `protobuf:"bytes,3,opt,name=fulfilment,proto3" json:"fulfilment,omitempty"`
	NotPublishableReasons []*NotPublishableReason `protobuf:"bytes,4,rep,name=notPublishableReasons,proto3" json:"notPublishableReasons,omitempty"`
	// Unique identifier for an offer.
	OfferId string `protobuf:"bytes,5,opt,name=offerId,proto3" json:"offerId,omitempty"`
	// Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
	OnHoldByRetailer bool     `protobuf:"varint,6,opt,name=onHoldByRetailer,proto3" json:"onHoldByRetailer,omitempty"`
	Pricing          *Pricing `protobuf:"bytes,7,opt,name=pricing,proto3" json:"pricing,omitempty"`
	// A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
	ReferenceCode string `protobuf:"bytes,8,opt,name=referenceCode,proto3" json:"referenceCode,omitempty"`
	Stock         *Stock `protobuf:"bytes,9,opt,name=stock,proto3" json:"stock,omitempty"`
	Store         *Store `protobuf:"bytes,10,opt,name=store,proto3" json:"store,omitempty"`
	// In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
	UnknownProductTitle string `protobuf:"bytes,11,opt,name=unknownProductTitle,proto3" json:"unknownProductTitle,omitempty"`
}

func (x *RetailerOffer) Reset() {
	*x = RetailerOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetailerOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetailerOffer) ProtoMessage() {}

func (x *RetailerOffer) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetailerOffer.ProtoReflect.Descriptor instead.
func (*RetailerOffer) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{92}
}

func (x *RetailerOffer) GetCondition() *Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *RetailerOffer) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *RetailerOffer) GetFulfilment() *Fulfilment {
	if x != nil {
		return x.Fulfilment
	}
	return nil
}

func (x *RetailerOffer) GetNotPublishableReasons() []*NotPublishableReason {
	if x != nil {
		return x.NotPublishableReasons
	}
	return nil
}

func (x *RetailerOffer) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *RetailerOffer) GetOnHoldByRetailer() bool {
	if x != nil {
		return x.OnHoldByRetailer
	}
	return false
}

func (x *RetailerOffer) GetPricing() *Pricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *RetailerOffer) GetReferenceCode() string {
	if x != nil {
		return x.ReferenceCode
	}
	return ""
}

func (x *RetailerOffer) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *RetailerOffer) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *RetailerOffer) GetUnknownProductTitle() string {
	if x != nil {
		return x.UnknownProductTitle
	}
	return ""
}

type ReturnItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerDetails *CustomerDetails `protobuf:"bytes,1,opt,name=customerDetails,proto3" json:"customerDetails,omitempty"`
	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,2,opt,name=ean,proto3" json:"ean,omitempty"`
	// Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR.
	FulfilmentMethod string `protobuf:"bytes,3,opt,name=fulfilmentMethod,proto3" json:"fulfilmentMethod,omitempty"`
	// Indicates if this return item has been handled (by the retailer).
	Handled bool `protobuf:"varint,4,opt,name=handled,proto3" json:"handled,omitempty"`
	// The handling result requested by the retailer.
	HandlingResult string `protobuf:"bytes,5,opt,name=handlingResult,proto3" json:"handlingResult,omitempty"`
	// The id of the customer order this return item is in.
	OrderId string `protobuf:"bytes,6,opt,name=orderId,proto3" json:"orderId,omitempty"`
	// The date and time in ISO 8601 format when the return was processed.
	ProcessingDateTime string `protobuf:"bytes,7,opt,name=processingDateTime,proto3" json:"processingDateTime,omitempty"`
	// The processing result of the return.
	ProcessingResult string `protobuf:"bytes,8,opt,name=processingResult,proto3" json:"processingResult,omitempty"`
	// The quantity that is returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order
	Quantity int32 `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// The date and time in ISO 8601 format when this return was registered.
	RegistrationDateTime string `protobuf:"bytes,10,opt,name=registrationDateTime,proto3" json:"registrationDateTime,omitempty"`
	// The reason why the customer returned this product.
	ReturnReason string `protobuf:"bytes,11,opt,name=returnReason,proto3" json:"returnReason,omitempty"`
	// Additional details from the customer as to why this item was returned.
	ReturnReasonComments string `protobuf:"bytes,12,opt,name=returnReasonComments,proto3" json:"returnReasonComments,omitempty"`
	// The RMA (Return Merchandise Authorization) id that identifies this particular return.
	RmaId int64 `protobuf:"varint,13,opt,name=rmaId,proto3" json:"rmaId,omitempty"`
	// The product title.
	Title string `protobuf:"bytes,14,opt,name=title,proto3" json:"title,omitempty"`
	// The track and trace code that is associated with this transport.
	TrackAndTrace string `protobuf:"bytes,15,opt,name=trackAndTrace,proto3" json:"trackAndTrace,omitempty"`
}

func (x *ReturnItem) Reset() {
	*x = ReturnItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnItem) ProtoMessage() {}

func (x *ReturnItem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnItem.ProtoReflect.Descriptor instead.
func (*ReturnItem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{93}
}

func (x *ReturnItem) GetCustomerDetails() *CustomerDetails {
	if x != nil {
		return x.CustomerDetails
	}
	return nil
}

func (x *ReturnItem) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *ReturnItem) GetFulfilmentMethod() string {
	if x != nil {
		return x.FulfilmentMethod
	}
	return ""
}

func (x *ReturnItem) GetHandled() bool {
	if x != nil {
		return x.Handled
	}
	return false
}

func (x *ReturnItem) GetHandlingResult() string {
	if x != nil {
		return x.HandlingResult
	}
	return ""
}

func (x *ReturnItem) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReturnItem) GetProcessingDateTime() string {
	if x != nil {
		return x.ProcessingDateTime
	}
	return ""
}

func (x *ReturnItem) GetProcessingResult() string {
	if x != nil {
		return x.ProcessingResult
	}
	return ""
}

func (x *ReturnItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ReturnItem) GetRegistrationDateTime() string {
	if x != nil {
		return x.RegistrationDateTime
	}
	return ""
}

func (x *ReturnItem) GetReturnReason() string {
	if x != nil {
		return x.ReturnReason
	}
	return ""
}

func (x *ReturnItem) GetReturnReasonComments() string {
	if x != nil {
		return x.ReturnReasonComments
	}
	return ""
}

func (x *ReturnItem) GetRmaId() int64 {
	if x != nil {
		return x.RmaId
	}
	return 0
}

func (x *ReturnItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReturnItem) GetTrackAndTrace() string {
	if x != nil {
		return x.TrackAndTrace
	}
	return ""
}

type ReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandlingResult   ReturnRequest_ReturnRequestHandlingResult `protobuf:"varint,1,opt,name=handlingResult,proto3,enum=bol_api_proto_v1beta1.ReturnRequest_ReturnRequestHandlingResult" json:"handlingResult,omitempty"`
	QuantityReturned int32                                     `protobuf:"varint,2,opt,name=quantityReturned,proto3" json:"quantityReturned,omitempty"`
}

func (x *ReturnRequest) Reset() {
	*x = ReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnRequest) ProtoMessage() {}

func (x *ReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnRequest.ProtoReflect.Descriptor instead.
func (*ReturnRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{94}
}

func (x *ReturnRequest) GetHandlingResult() ReturnRequest_ReturnRequestHandlingResult {
	if x != nil {
		return x.HandlingResult
	}
	return ReturnRequest_RETURN_REQUEST_HANDLING_RESULT_RETURN_RECEIVED
}

func (x *ReturnRequest) GetQuantityReturned() int32 {
	if x != nil {
		return x.QuantityReturned
	}
	return 0
}

type ReturnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Returns []*ReducedReturnItem `protobuf:"bytes,1,rep,name=returns,proto3" json:"returns,omitempty"`
}

func (x *ReturnsResponse) Reset() {
	*x = ReturnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnsResponse) ProtoMessage() {}

func (x *ReturnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnsResponse.ProtoReflect.Descriptor instead.
func (*ReturnsResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{95}
}

func (x *ReturnsResponse) GetReturns() []*ReducedReturnItem {
	if x != nil {
		return x.Returns
	}
	return nil
}

// The score for this measurement. In case there are no scores for an indicator, this element is omitted from the response.
type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates whether the score conforms to the bol.com service norm or not.
	Conforms bool `protobuf:"varint,1,opt,name=conforms,proto3" json:"conforms,omitempty"`
	// The lower part of the fraction (below the line). This usually is the larger number compared to the the numerator.
	Denominator int32 `protobuf:"varint,2,opt,name=denominator,proto3" json:"denominator,omitempty"`
	// The difference between the score and the bol.com service norm.
	DistanceToNorm float32 `protobuf:"fixed32,3,opt,name=distanceToNorm,proto3" json:"distanceToNorm,omitempty"`
	// The top part of the fraction (above the line). This usually is the smaller number compared to the denominator.
	Numerator int32 `protobuf:"varint,4,opt,name=numerator,proto3" json:"numerator,omitempty"`
	// The score for this measurement (denominator divided by the numerator).
	Value float32 `protobuf:"fixed32,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{96}
}

func (x *Score) GetConforms() bool {
	if x != nil {
		return x.Conforms
	}
	return false
}

func (x *Score) GetDenominator() int32 {
	if x != nil {
		return x.Denominator
	}
	return 0
}

func (x *Score) GetDistanceToNorm() float32 {
	if x != nil {
		return x.DistanceToNorm
	}
	return 0
}

func (x *Score) GetNumerator() int32 {
	if x != nil {
		return x.Numerator
	}
	return 0
}

func (x *Score) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ShipOrderItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *ShipmentRequest `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The order item being confirmed.
	OrderItemId string `protobuf:"bytes,2,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
}

func (x *ShipOrderItemRequest) Reset() {
	*x = ShipOrderItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipOrderItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipOrderItemRequest) ProtoMessage() {}

func (x *ShipOrderItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipOrderItemRequest.ProtoReflect.Descriptor instead.
func (*ShipOrderItemRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{97}
}

func (x *ShipOrderItemRequest) GetBody() *ShipmentRequest {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ShipOrderItemRequest) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

type Shipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillingDetails  *CustomerDetails `protobuf:"bytes,1,opt,name=billingDetails,proto3" json:"billingDetails,omitempty"`
	CustomerDetails *CustomerDetails `protobuf:"bytes,2,opt,name=customerDetails,proto3" json:"customerDetails,omitempty"`
	// Indicates whether this order is shipped to a Pick Up Point.
	PickUpPoint bool `protobuf:"varint,3,opt,name=pickUpPoint,proto3" json:"pickUpPoint,omitempty"`
	// The date and time in ISO 8601 format when the order item was shipped.
	ShipmentDate string `protobuf:"bytes,4,opt,name=shipmentDate,proto3" json:"shipmentDate,omitempty"`
	// A unique identifier for this shipment.
	ShipmentId    int64           `protobuf:"varint,5,opt,name=shipmentId,proto3" json:"shipmentId,omitempty"`
	ShipmentItems []*ShipmentItem `protobuf:"bytes,6,rep,name=shipmentItems,proto3" json:"shipmentItems,omitempty"`
	// Reference supplied by the user when this item was shipped.
	ShipmentReference string     `protobuf:"bytes,7,opt,name=shipmentReference,proto3" json:"shipmentReference,omitempty"`
	Transport         *Transport `protobuf:"bytes,8,opt,name=transport,proto3" json:"transport,omitempty"`
}

func (x *Shipment) Reset() {
	*x = Shipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipment) ProtoMessage() {}

func (x *Shipment) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipment.ProtoReflect.Descriptor instead.
func (*Shipment) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{98}
}

func (x *Shipment) GetBillingDetails() *CustomerDetails {
	if x != nil {
		return x.BillingDetails
	}
	return nil
}

func (x *Shipment) GetCustomerDetails() *CustomerDetails {
	if x != nil {
		return x.CustomerDetails
	}
	return nil
}

func (x *Shipment) GetPickUpPoint() bool {
	if x != nil {
		return x.PickUpPoint
	}
	return false
}

func (x *Shipment) GetShipmentDate() string {
	if x != nil {
		return x.ShipmentDate
	}
	return ""
}

func (x *Shipment) GetShipmentId() int64 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *Shipment) GetShipmentItems() []*ShipmentItem {
	if x != nil {
		return x.ShipmentItems
	}
	return nil
}

func (x *Shipment) GetShipmentReference() string {
	if x != nil {
		return x.ShipmentReference
	}
	return ""
}

func (x *Shipment) GetTransport() *Transport {
	if x != nil {
		return x.Transport
	}
	return nil
}

type ShipmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The EAN number associated with this product.
	Ean string `protobuf:"bytes,1,opt,name=ean,proto3" json:"ean,omitempty"`
	// Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR.
	FulfilmentMethod ShipmentItem_ShipmentItemFulfilmentMethod `protobuf:"varint,2,opt,name=fulfilmentMethod,proto3,enum=bol_api_proto_v1beta1.ShipmentItem_ShipmentItemFulfilmentMethod" json:"fulfilmentMethod,omitempty"`
	// The date and time in ISO 8601 format when the order was promised to be delivered.
	LatestDeliveryDate string `protobuf:"bytes,3,opt,name=latestDeliveryDate,proto3" json:"latestDeliveryDate,omitempty"`
	// Condition of the offer.
	OfferCondition ShipmentItem_ShipmentItemOfferCondition `protobuf:"varint,4,opt,name=offerCondition,proto3,enum=bol_api_proto_v1beta1.ShipmentItem_ShipmentItemOfferCondition" json:"offerCondition,omitempty"`
	// The total price for this order item id (item price multiplied by the quantity).
	OfferPrice float64 `protobuf:"fixed64,5,opt,name=offerPrice,proto3" json:"offerPrice,omitempty"`
	// The reference provided by the retailer through the offer API (referred to as ‘referenceCode’).
	OfferReference string `protobuf:"bytes,6,opt,name=offerReference,proto3" json:"offerReference,omitempty"`
	// The date and time in ISO 8601 format when the order was placed.
	OrderDate string `protobuf:"bytes,7,opt,name=orderDate,proto3" json:"orderDate,omitempty"`
	// A unique identifier for the order this shipment is related to.
	OrderId string `protobuf:"bytes,8,opt,name=orderId,proto3" json:"orderId,omitempty"`
	// A unique identifier for the item of the order that was shipped in this shipment.
	OrderItemId string `protobuf:"bytes,9,opt,name=orderItemId,proto3" json:"orderItemId,omitempty"`
	// Amount of ordered products for this order item id.
	Quantity int32 `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// The product title.
	Title string `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ShipmentItem) Reset() {
	*x = ShipmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentItem) ProtoMessage() {}

func (x *ShipmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentItem.ProtoReflect.Descriptor instead.
func (*ShipmentItem) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{99}
}

func (x *ShipmentItem) GetEan() string {
	if x != nil {
		return x.Ean
	}
	return ""
}

func (x *ShipmentItem) GetFulfilmentMethod() ShipmentItem_ShipmentItemFulfilmentMethod {
	if x != nil {
		return x.FulfilmentMethod
	}
	return ShipmentItem_SHIPMENT_ITEM_FULFILMENT_METHOD_FBR
}

func (x *ShipmentItem) GetLatestDeliveryDate() string {
	if x != nil {
		return x.LatestDeliveryDate
	}
	return ""
}

func (x *ShipmentItem) GetOfferCondition() ShipmentItem_ShipmentItemOfferCondition {
	if x != nil {
		return x.OfferCondition
	}
	return ShipmentItem_SHIPMENT_ITEM_OFFER_CONDITION_NEW
}

func (x *ShipmentItem) GetOfferPrice() float64 {
	if x != nil {
		return x.OfferPrice
	}
	return 0
}

func (x *ShipmentItem) GetOfferReference() string {
	if x != nil {
		return x.OfferReference
	}
	return ""
}

func (x *ShipmentItem) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *ShipmentItem) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ShipmentItem) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

func (x *ShipmentItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ShipmentItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ShipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used for administration purposes.
	ShipmentReference string `protobuf:"bytes,1,opt,name=shipmentReference,proto3" json:"shipmentReference,omitempty"`
	// Specifies shipping label to be used for this shipment. Can be retrieved through the shipping label endpoint.
	ShippingLabelCode string                `protobuf:"bytes,2,opt,name=shippingLabelCode,proto3" json:"shippingLabelCode,omitempty"`
	Transport         *TransportInstruction `protobuf:"bytes,3,opt,name=transport,proto3" json:"transport,omitempty"`
}

func (x *ShipmentRequest) Reset() {
	*x = ShipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentRequest) ProtoMessage() {}

func (x *ShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentRequest.ProtoReflect.Descriptor instead.
func (*ShipmentRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{100}
}

func (x *ShipmentRequest) GetShipmentReference() string {
	if x != nil {
		return x.ShipmentReference
	}
	return ""
}

func (x *ShipmentRequest) GetShippingLabelCode() string {
	if x != nil {
		return x.ShippingLabelCode
	}
	return ""
}

func (x *ShipmentRequest) GetTransport() *TransportInstruction {
	if x != nil {
		return x.Transport
	}
	return nil
}

type ShipmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipments []*ReducedShipment `protobuf:"bytes,1,rep,name=shipments,proto3" json:"shipments,omitempty"`
}

func (x *ShipmentResponse) Reset() {
	*x = ShipmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentResponse) ProtoMessage() {}

func (x *ShipmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentResponse.ProtoReflect.Descriptor instead.
func (*ShipmentResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{101}
}

func (x *ShipmentResponse) GetShipments() []*ReducedShipment {
	if x != nil {
		return x.Shipments
	}
	return nil
}

type StateTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The state that was transitioned into.
	State StateTransition_StateTransitionState `protobuf:"varint,1,opt,name=state,proto3,enum=bol_api_proto_v1beta1.StateTransition_StateTransitionState" json:"state,omitempty"`
	// The transition date and time in ISO 8601 format.
	StateDate string `protobuf:"bytes,2,opt,name=stateDate,proto3" json:"stateDate,omitempty"`
}

func (x *StateTransition) Reset() {
	*x = StateTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateTransition) ProtoMessage() {}

func (x *StateTransition) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateTransition.ProtoReflect.Descriptor instead.
func (*StateTransition) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{102}
}

func (x *StateTransition) GetState() StateTransition_StateTransitionState {
	if x != nil {
		return x.State
	}
	return StateTransition_STATE_TRANSITION_STATE_DRAFT
}

func (x *StateTransition) GetStateDate() string {
	if x != nil {
		return x.StateDate
	}
	return ""
}

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of stock available for the specified product present in the retailers warehouse. Note: this should not be the FBB stock! Defaults to 0.
	Amount int32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The amount of items in stock minus handled order and minus open orders. As compared to the stock you sent us. When this reaches zero, your offer will not be for sale on the shop.
	CorrectedStock int32 `protobuf:"varint,2,opt,name=correctedStock,proto3" json:"correctedStock,omitempty"`
	// Configures whether the retailer manages the stock levels or that bol.com should calculate the corrected stock based on actual open orders. In case the configuration is set to 'false', all open orders are used to calculate the corrected stock. In case the configuration is set to 'true', only orders that are placed after the last offer update are taken into account.
	ManagedByRetailer bool `protobuf:"varint,3,opt,name=managedByRetailer,proto3" json:"managedByRetailer,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{103}
}

func (x *Stock) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Stock) GetCorrectedStock() int32 {
	if x != nil {
		return x.CorrectedStock
	}
	return 0
}

func (x *Stock) GetManagedByRetailer() bool {
	if x != nil {
		return x.ManagedByRetailer
	}
	return false
}

type StockCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of stock available for the specified product present in the retailers warehouse. Note: this should not be the FBB stock! Defaults to 0.
	Amount int32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Configures whether the retailer manages the stock levels or that bol.com should calculate the corrected stock based on actual open orders. In case the configuration is set to 'false', all open orders are used to calculate the corrected stock. In case the configuration is set to 'true', only orders that are placed after the last offer update are taken into account.
	ManagedByRetailer bool `protobuf:"varint,2,opt,name=managedByRetailer,proto3" json:"managedByRetailer,omitempty"`
}

func (x *StockCreate) Reset() {
	*x = StockCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockCreate) ProtoMessage() {}

func (x *StockCreate) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockCreate.ProtoReflect.Descriptor instead.
func (*StockCreate) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{104}
}

func (x *StockCreate) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StockCreate) GetManagedByRetailer() bool {
	if x != nil {
		return x.ManagedByRetailer
	}
	return false
}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The product title for the product associated with this offer.
	ProductTitle string         `protobuf:"bytes,1,opt,name=productTitle,proto3" json:"productTitle,omitempty"`
	Visible      []*CountryCode `protobuf:"bytes,2,rep,name=visible,proto3" json:"visible,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{105}
}

func (x *Store) GetProductTitle() string {
	if x != nil {
		return x.ProductTitle
	}
	return ""
}

func (x *Store) GetVisible() []*CountryCode {
	if x != nil {
		return x.Visible
	}
	return nil
}

type TimeSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timeslot end date and time in ISO 8601 format.
	End string `protobuf:"bytes,1,opt,name=end,proto3" json:"end,omitempty"`
	// The timeslot start date and time in ISO 8601 format.
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{106}
}

func (x *TimeSlot) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *TimeSlot) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type Transport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique code referring to the used shipping label for this shipment.
	ShippingLabelCode string `protobuf:"bytes,1,opt,name=shippingLabelCode,proto3" json:"shippingLabelCode,omitempty"`
	// Warning: This field is deprecated. See API release notes for more information.
	ShippingLabelId int64 `protobuf:"varint,2,opt,name=shippingLabelId,proto3" json:"shippingLabelId,omitempty"`
	// The track and trace code that is associated with this transport.
	TrackAndTrace string `protobuf:"bytes,3,opt,name=trackAndTrace,proto3" json:"trackAndTrace,omitempty"`
	// The transport id.
	TransportId int64 `protobuf:"varint,4,opt,name=transportId,proto3" json:"transportId,omitempty"`
	// Specify the transporter that will carry out the shipment.
	TransporterCode string `protobuf:"bytes,5,opt,name=transporterCode,proto3" json:"transporterCode,omitempty"`
}

func (x *Transport) Reset() {
	*x = Transport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transport) ProtoMessage() {}

func (x *Transport) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transport.ProtoReflect.Descriptor instead.
func (*Transport) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{107}
}

func (x *Transport) GetShippingLabelCode() string {
	if x != nil {
		return x.ShippingLabelCode
	}
	return ""
}

func (x *Transport) GetShippingLabelId() int64 {
	if x != nil {
		return x.ShippingLabelId
	}
	return 0
}

func (x *Transport) GetTrackAndTrace() string {
	if x != nil {
		return x.TrackAndTrace
	}
	return ""
}

func (x *Transport) GetTransportId() int64 {
	if x != nil {
		return x.TransportId
	}
	return 0
}

func (x *Transport) GetTransporterCode() string {
	if x != nil {
		return x.TransporterCode
	}
	return ""
}

type TransportInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The track and trace code that is associated with this transport.
	TrackAndTrace string `protobuf:"bytes,1,opt,name=trackAndTrace,proto3" json:"trackAndTrace,omitempty"`
	// Specify the transporter that will carry out the shipment.
	TransporterCode string `protobuf:"bytes,2,opt,name=transporterCode,proto3" json:"transporterCode,omitempty"`
}

func (x *TransportInstruction) Reset() {
	*x = TransportInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportInstruction) ProtoMessage() {}

func (x *TransportInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportInstruction.ProtoReflect.Descriptor instead.
func (*TransportInstruction) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{108}
}

func (x *TransportInstruction) GetTrackAndTrace() string {
	if x != nil {
		return x.TrackAndTrace
	}
	return ""
}

func (x *TransportInstruction) GetTransporterCode() string {
	if x != nil {
		return x.TransporterCode
	}
	return ""
}

type Transporter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transporter code.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// The transporter name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Transporter) Reset() {
	*x = Transporter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transporter) ProtoMessage() {}

func (x *Transporter) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transporter.ProtoReflect.Descriptor instead.
func (*Transporter) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{109}
}

func (x *Transporter) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Transporter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TransportersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FbbTransporters []*Transporter `protobuf:"bytes,1,rep,name=fbbTransporters,proto3" json:"fbbTransporters,omitempty"`
}

func (x *TransportersResponse) Reset() {
	*x = TransportersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportersResponse) ProtoMessage() {}

func (x *TransportersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportersResponse.ProtoReflect.Descriptor instead.
func (*TransportersResponse) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{110}
}

func (x *TransportersResponse) GetFbbTransporters() []*Transporter {
	if x != nil {
		return x.FbbTransporters
	}
	return nil
}

type UpdateOfferPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pricing *Pricing `protobuf:"bytes,1,opt,name=pricing,proto3" json:"pricing,omitempty"`
}

func (x *UpdateOfferPriceRequest) Reset() {
	*x = UpdateOfferPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOfferPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfferPriceRequest) ProtoMessage() {}

func (x *UpdateOfferPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfferPriceRequest.ProtoReflect.Descriptor instead.
func (*UpdateOfferPriceRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{111}
}

func (x *UpdateOfferPriceRequest) GetPricing() *Pricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

type UpdateOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fulfilment *Fulfilment `protobuf:"bytes,1,opt,name=fulfilment,proto3" json:"fulfilment,omitempty"`
	// Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
	OnHoldByRetailer bool `protobuf:"varint,2,opt,name=onHoldByRetailer,proto3" json:"onHoldByRetailer,omitempty"`
	// A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
	ReferenceCode string `protobuf:"bytes,3,opt,name=referenceCode,proto3" json:"referenceCode,omitempty"`
	// In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
	UnknownProductTitle string `protobuf:"bytes,4,opt,name=unknownProductTitle,proto3" json:"unknownProductTitle,omitempty"`
}

func (x *UpdateOfferRequest) Reset() {
	*x = UpdateOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfferRequest) ProtoMessage() {}

func (x *UpdateOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfferRequest.ProtoReflect.Descriptor instead.
func (*UpdateOfferRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{112}
}

func (x *UpdateOfferRequest) GetFulfilment() *Fulfilment {
	if x != nil {
		return x.Fulfilment
	}
	return nil
}

func (x *UpdateOfferRequest) GetOnHoldByRetailer() bool {
	if x != nil {
		return x.OnHoldByRetailer
	}
	return false
}

func (x *UpdateOfferRequest) GetReferenceCode() string {
	if x != nil {
		return x.ReferenceCode
	}
	return ""
}

func (x *UpdateOfferRequest) GetUnknownProductTitle() string {
	if x != nil {
		return x.UnknownProductTitle
	}
	return ""
}

type UpdateOfferStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of stock available for the specified product present in the retailers warehouse. Note: this should not be the FBB stock! Defaults to 0.
	Amount int32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Configures whether the retailer manages the stock levels or that bol.com should calculate the corrected stock based on actual open orders. In case the configuration is set to 'false', all open orders are used to calculate the corrected stock. In case the configuration is set to 'true', only orders that are placed after the last offer update are taken into account.
	ManagedByRetailer bool `protobuf:"varint,2,opt,name=managedByRetailer,proto3" json:"managedByRetailer,omitempty"`
}

func (x *UpdateOfferStockRequest) Reset() {
	*x = UpdateOfferStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOfferStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfferStockRequest) ProtoMessage() {}

func (x *UpdateOfferStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfferStockRequest.ProtoReflect.Descriptor instead.
func (*UpdateOfferStockRequest) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateOfferStockRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpdateOfferStockRequest) GetManagedByRetailer() bool {
	if x != nil {
		return x.ManagedByRetailer
	}
	return false
}

// Describes a violation that occurred interacting with the API.
type Violation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes the origin of the error, for instance a field or query parameter validation error.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Detailed description of the validation error that caused the problem.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Violation) Reset() {
	*x = Violation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Violation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Violation) ProtoMessage() {}

func (x *Violation) ProtoReflect() protoreflect.Message {
	mi := &file_bol_api_proto_go_bol_api_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Violation.ProtoReflect.Descriptor instead.
func (*Violation) Descriptor() ([]byte, []int) {
	return file_bol_api_proto_go_bol_api_proto_rawDescGZIP(), []int{114}
}

func (x *Violation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Violation) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_bol_api_proto_go_bol_api_proto protoreflect.FileDescriptor

var file_bol_api_proto_go_bol_api_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x2b, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa8, 0x05, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x68, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x13, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b,
	0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6c, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa2, 0x03, 0x0a,
	0x13, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x65, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x1c, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x23, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x2a, 0x0a,
	0x26, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x42, 0x55, 0x4c,
	0x4b, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x4f, 0x4f,
	0x44, 0x10, 0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x03, 0x12, 0x2c, 0x0a, 0x28, 0x42, 0x55, 0x4c, 0x4b, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10,
	0x04, 0x22, 0x71, 0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x75,
	0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x16, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x76, 0x0a, 0x18, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5a, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x64, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x0b, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x71, 0x0a, 0x12,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x9c, 0x05, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5a, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xaf, 0x04, 0x0a,
	0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b,
	0x10, 0x00, 0x12, 0x32, 0x0a, 0x2e, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x45, 0x52, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48,
	0x49, 0x47, 0x48, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x49, 0x50, 0x43, 0x4f, 0x53, 0x54, 0x10, 0x03,
	0x12, 0x2c, 0x0a, 0x28, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x43,
	0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x04, 0x12, 0x2e,
	0x0a, 0x2a, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x2d,
	0x0a, 0x29, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x42, 0x4f,
	0x4c, 0x5f, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x45, 0x10, 0x06, 0x12, 0x2a, 0x0a,
	0x26, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45,
	0x44, 0x5f, 0x54, 0x57, 0x49, 0x43, 0x45, 0x10, 0x07, 0x12, 0x28, 0x0a, 0x24, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x41, 0x49, 0x4e, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x10, 0x08, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x54, 0x45, 0x43, 0x48, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x09, 0x12, 0x2c, 0x0a, 0x28,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x46, 0x49, 0x4e, 0x44, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x0a, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0b, 0x22, 0xb0,
	0x0d, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12,
	0x7d, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xf0,
	0x0b, 0x0a, 0x25, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x33, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x50, 0x4f, 0x53, 0x54, 0x10,
	0x00, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x50, 0x53, 0x10, 0x01, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x54, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x37, 0x0a, 0x33, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x10, 0x03,
	0x12, 0x37, 0x0a, 0x33, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4e,
	0x54, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x10, 0x04, 0x12, 0x39, 0x0a, 0x35, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x05, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x44, 0x59, 0x4c, 0x10, 0x06, 0x12, 0x34, 0x0a, 0x30, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x50, 0x44, 0x5f, 0x4e, 0x4c, 0x10, 0x07, 0x12, 0x34, 0x0a,
	0x30, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x50, 0x44, 0x5f, 0x42,
	0x45, 0x10, 0x08, 0x12, 0x36, 0x0a, 0x32, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x42, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x42, 0x45, 0x10, 0x09, 0x12, 0x39, 0x0a, 0x35, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x42,
	0x52, 0x49, 0x45, 0x46, 0x10, 0x0a, 0x12, 0x37, 0x0a, 0x33, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x44, 0x48, 0x4c, 0x46, 0x4f, 0x52, 0x59, 0x4f, 0x55, 0x10, 0x0b, 0x12,
	0x31, 0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x4c, 0x53,
	0x10, 0x0c, 0x12, 0x36, 0x0a, 0x32, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x46, 0x45, 0x44, 0x45, 0x58, 0x5f, 0x4e, 0x4c, 0x10, 0x0d, 0x12, 0x36, 0x0a, 0x32, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x45, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x45,
	0x10, 0x0e, 0x12, 0x33, 0x0a, 0x2f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0f, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x48, 0x4c, 0x10, 0x10, 0x12, 0x34, 0x0a, 0x30, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x48, 0x4c, 0x5f, 0x44, 0x45, 0x10, 0x11,
	0x12, 0x3d, 0x0a, 0x39, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x48,
	0x4c, 0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x12, 0x12,
	0x31, 0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x53, 0x4e,
	0x10, 0x13, 0x12, 0x33, 0x0a, 0x2f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x46, 0x49, 0x45, 0x47, 0x45, 0x10, 0x14, 0x12, 0x3a, 0x0a, 0x36, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x10, 0x15, 0x12, 0x37, 0x0a, 0x33, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x43, 0x45, 0x4c, 0x5f, 0x4e, 0x4c, 0x10, 0x16, 0x12, 0x34, 0x0a, 0x30,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f,
	0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x49, 0x58,
	0x10, 0x17, 0x12, 0x33, 0x0a, 0x2f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x53, 0x10, 0x18, 0x12, 0x35, 0x0a, 0x31, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x10, 0x19, 0x12, 0x31,
	0x0a, 0x2d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x4a, 0x50, 0x10,
	0x1a, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x19, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x42,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x52, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x45,
	0x57, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x48, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x41, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x47, 0x4f,
	0x4f, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x04,
	0x22, 0x2f, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0xd0, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x4c, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x43,
	0x53, 0x56, 0x10, 0x00, 0x22, 0xa1, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x41, 0x0a,
	0x0a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x6e, 0x48, 0x6f,
	0x6c, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xa9, 0x05, 0x0a, 0x0f, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x68,
	0x61, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x68, 0x61,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x17,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x55,
	0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x61,
	0x6c, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6c, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x6e, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x72,
	0x6d, 0x52, 0x04, 0x6e, 0x6f, 0x72, 0x6d, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x32,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x96, 0x08, 0x0a, 0x0a, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x5c, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x46, 0x0a, 0x0c, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x69,
	0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x6b, 0x55,
	0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd7, 0x05,
	0x0a, 0x16, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55, 0x55, 0x52, 0x53, 0x5f, 0x32, 0x33, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55,
	0x55, 0x52, 0x53, 0x5f, 0x32, 0x32, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55, 0x55, 0x52, 0x53, 0x5f, 0x32, 0x31, 0x10, 0x02,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55,
	0x55, 0x52, 0x53, 0x5f, 0x32, 0x30, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55, 0x55, 0x52, 0x53, 0x5f, 0x31, 0x39, 0x10, 0x04,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55,
	0x55, 0x52, 0x53, 0x5f, 0x31, 0x38, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55, 0x55, 0x52, 0x53, 0x5f, 0x31, 0x37, 0x10, 0x06,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55,
	0x55, 0x52, 0x53, 0x5f, 0x31, 0x36, 0x10, 0x07, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55, 0x55, 0x52, 0x53, 0x5f, 0x31, 0x35, 0x10, 0x08,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55,
	0x55, 0x52, 0x53, 0x5f, 0x31, 0x34, 0x10, 0x09, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55, 0x55, 0x52, 0x53, 0x5f, 0x31, 0x33, 0x10, 0x0a,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x34, 0x55,
	0x55, 0x52, 0x53, 0x5f, 0x31, 0x32, 0x10, 0x0b, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x55, 0x4c, 0x46,
	0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x31, 0x5f, 0x32, 0x44, 0x10, 0x0c, 0x12, 0x21, 0x0a, 0x1d, 0x46,
	0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x33, 0x44, 0x10, 0x0d, 0x12, 0x21,
	0x0a, 0x1d, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x33, 0x5f, 0x35, 0x44, 0x10,
	0x0e, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x34, 0x5f,
	0x38, 0x44, 0x10, 0x0f, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x31, 0x5f, 0x38, 0x44, 0x10, 0x10, 0x12, 0x2e, 0x0a, 0x2a, 0x46, 0x55, 0x4c, 0x46, 0x49,
	0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x49, 0x4a, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x42, 0x45,
	0x4c, 0x4f, 0x46, 0x54, 0x45, 0x10, 0x11, 0x22, 0x42, 0x0a, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x55, 0x4c,
	0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x42, 0x42,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x42, 0x52, 0x10, 0x01, 0x22, 0xab, 0x03, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x24, 0x47, 0x45, 0x54, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x57, 0x10,
	0x00, 0x12, 0x2b, 0x0a, 0x27, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x29,
	0x0a, 0x25, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x2f, 0x0a, 0x2b, 0x47, 0x45, 0x54,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x2d, 0x0a, 0x29, 0x47, 0x45,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x04, 0x22, 0x59, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x3f,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22,
	0x37, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc5, 0x03, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x73, 0x6b, 0x75, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x57, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x47, 0x45,
	0x54, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x41, 0x4e, 0x4e,
	0x4f, 0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x47, 0x45, 0x54, 0x5f,
	0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x41,
	0x54, 0x5f, 0x57, 0x48, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x22, 0xf9, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x59,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x22, 0x70, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x24, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x41, 0x4c, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x47, 0x45,
	0x54, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x41, 0x4c, 0x45,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x74, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x26, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x43,
	0x4b, 0x5f, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x2c,
	0x0a, 0x28, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x5f, 0x49, 0x4e,
	0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x22, 0x32, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x53, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x37, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x3f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d, 0x02, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x75, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x2c, 0x0a, 0x28, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x46, 0x42, 0x52, 0x10, 0x00, 0x12, 0x2c,
	0x0a, 0x28, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x46, 0x42, 0x42, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xdb, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22,
	0xc0, 0x01, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x43, 0x4b, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x05, 0x12, 0x10,
	0x0a, 0x0c, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x53, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x53,
	0x10, 0x07, 0x22, 0x62, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xae, 0x08, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x6e, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0xf1, 0x06, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x36, 0x47, 0x45, 0x54, 0x5f,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x00, 0x12, 0x36, 0x0a, 0x32, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x3a, 0x0a, 0x36,
	0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x12, 0x3c, 0x0a, 0x38, 0x47, 0x45, 0x54, 0x5f,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f,
	0x49, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x12, 0x3c, 0x0a, 0x38, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0x04, 0x12, 0x38, 0x0a, 0x34, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x36,
	0x0a, 0x32, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4f,
	0x46, 0x46, 0x45, 0x52, 0x10, 0x06, 0x12, 0x36, 0x0a, 0x32, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x10, 0x07, 0x12, 0x36,
	0x0a, 0x32, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x46, 0x46, 0x45, 0x52, 0x10, 0x08, 0x12, 0x3c, 0x0a, 0x38, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x4f,
	0x43, 0x4b, 0x10, 0x09, 0x12, 0x3c, 0x0a, 0x38, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45,
	0x10, 0x0a, 0x12, 0x3d, 0x0a, 0x39, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x0b, 0x12, 0x42, 0x0a, 0x3e, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x50, 0x55, 0x42,
	0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x0c, 0x12, 0x40, 0x0a, 0x3c, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x0d, 0x22, 0x5a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x6d, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6d, 0x61, 0x49, 0x64,
	0x22, 0xbe, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x2d, 0x0a, 0x29, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52,
	0x4e, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49,
	0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x46, 0x42, 0x52,
	0x10, 0x00, 0x12, 0x2d, 0x0a, 0x29, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e,
	0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x46, 0x42, 0x42, 0x10,
	0x01, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xcb, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x7b, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x2f, 0x0a, 0x2b, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x48, 0x49, 0x50,
	0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x55,
	0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x46, 0x42, 0x52, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x48, 0x49,
	0x50, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46,
	0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x46, 0x42, 0x42, 0x10, 0x01, 0x22, 0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x6d, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6d, 0x61, 0x49, 0x64, 0x22, 0x94,
	0x06, 0x0a, 0x07, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x42, 0x53, 0x4b, 0x55, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x42, 0x53, 0x4b,
	0x55, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x66, 0x62, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x52, 0x0e, 0x66, 0x62, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x42, 0x53, 0x4b, 0x55, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x42, 0x53, 0x4b, 0x55, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x86, 0x01, 0x0a,
	0x0c, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44,
	0x52, 0x41, 0x46, 0x54, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x41, 0x4e, 0x4e, 0x4f,
	0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x49, 0x56, 0x45, 0x44,
	0x5f, 0x41, 0x54, 0x5f, 0x57, 0x48, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x9c, 0x03, 0x0a, 0x15, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x73, 0x6b,
	0x75, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x5d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa3,
	0x01, 0x0a, 0x1a, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a,
	0x27, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2d, 0x0a, 0x29, 0x49, 0x4e,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x4e,
	0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x49, 0x4e, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x02, 0x22, 0xad, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x66, 0x62, 0x62, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x52, 0x0e, 0x66, 0x62, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x48, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x6f, 0x74, 0x22, 0x46, 0x0a, 0x08, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x08, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x7e, 0x0a, 0x0e,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x73,
	0x6b, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x0a, 0x11,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x22, 0x44, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x65, 0x6c, 0x22, 0x3a, 0x0a, 0x04, 0x4e, 0x6f, 0x72, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x8e, 0x02, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0xb6, 0x01, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xcd, 0x04, 0x0a, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x58, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x12,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78,
	0x61, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x61, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x22, 0x78, 0x0a, 0x14, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x7a, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x61, 0x0a,
	0x15, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x15, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x22, 0x30, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65,
	0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x50, 0x69,
	0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x1c, 0x50, 0x49, 0x43, 0x4b, 0x5f, 0x55, 0x50, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x50, 0x55, 0x50, 0x5f, 0x41, 0x48, 0x5f, 0x4e, 0x4c, 0x10, 0x00, 0x22,
	0x4f, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x5d, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22,
	0x51, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x51, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a,
	0x0c, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x76,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf2, 0x03,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x50, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12,
	0x21, 0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x10, 0x03, 0x22, 0x21, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0xb3,
	0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x73, 0x6b, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x73, 0x6b, 0x75, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x65, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x4e,
	0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x02, 0x22, 0x3c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x8a, 0x04, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xc6, 0x02, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x29, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x41, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4a, 0x38, 0x31,
	0x35, 0x39, 0x10, 0x00, 0x12, 0x2d, 0x0a, 0x29, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f,
	0x4c, 0x41, 0x42, 0x45, 0x4c, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x41, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4a, 0x38, 0x31, 0x36,
	0x30, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4c,
	0x41, 0x42, 0x45, 0x4c, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x41, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x33, 0x34, 0x37, 0x34, 0x10,
	0x02, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4c, 0x41, 0x42,
	0x45, 0x4c, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x44, 0x59, 0x4d, 0x4f, 0x5f, 0x39, 0x39, 0x30, 0x31, 0x32, 0x10, 0x03, 0x12,
	0x34, 0x0a, 0x30, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c,
	0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x42, 0x52, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x44, 0x5f, 0x4b, 0x31, 0x31, 0x32, 0x30,
	0x38, 0x5f, 0x44, 0x10, 0x04, 0x12, 0x38, 0x0a, 0x34, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x5a, 0x45, 0x42, 0x52, 0x41, 0x5f, 0x5a, 0x5f, 0x50,
	0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x5f, 0x54, 0x10, 0x05, 0x22,
	0xbc, 0x02, 0x0a, 0x18, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x61, 0x78, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x21, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x19, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x19, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x22, 0x6b, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xa3, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x47, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22,
	0xc7, 0x03, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6d, 0x61, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x72, 0x6d, 0x61, 0x49, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x0f, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x50, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x10, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x22, 0xc7, 0x04, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x42,
	0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x6f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xce, 0x04, 0x0a, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32,
	0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6d,
	0x61, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6d, 0x61, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x41,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x22, 0x98, 0x04, 0x0a,
	0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68,
	0x0a, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x22, 0xf0, 0x02, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x2e, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x49, 0x4e, 0x47, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x2f, 0x52, 0x45, 0x54, 0x55,
	0x52, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c,
	0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x01, 0x12, 0x42, 0x0a,
	0x3e, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x48, 0x41, 0x4e, 0x44, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x4d, 0x45, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10,
	0x02, 0x12, 0x31, 0x0a, 0x2d, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x10, 0x03, 0x12, 0x3e, 0x0a, 0x3a, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x49, 0x4e, 0x47, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f,
	0x4b, 0x45, 0x45, 0x50, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x41,
	0x49, 0x44, 0x10, 0x04, 0x12, 0x31, 0x0a, 0x2d, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x49, 0x4e, 0x47, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x54, 0x49, 0x4c, 0x4c, 0x5f, 0x41, 0x50, 0x50,
	0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x05, 0x22, 0x55, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x6f, 0x4e, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4e, 0x6f, 0x72, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x76, 0x0a, 0x14, 0x53, 0x68, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xcb, 0x03, 0x0a, 0x08, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x69, 0x63,
	0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x49, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xde, 0x06, 0x0a, 0x0c, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x61, 0x6e, 0x12, 0x6c, 0x0a, 0x10, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x70, 0x0a, 0x1c, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x46, 0x42, 0x52, 0x10, 0x00, 0x12, 0x27,
	0x0a, 0x23, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f,
	0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x46, 0x42, 0x42, 0x10, 0x01, 0x22, 0xef, 0x01, 0x0a, 0x1a, 0x53, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x28, 0x0a,
	0x24, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4f,
	0x46, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x48, 0x49, 0x50, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12,
	0x2c, 0x0a, 0x28, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x4f, 0x46, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x2a, 0x0a,
	0x26, 0x53, 0x48, 0x49, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4f,
	0x46, 0x46, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x04, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x58, 0x0a, 0x10, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb7,
	0x02, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x00, 0x12, 0x28,
	0x0a, 0x24, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x41, 0x4e, 0x4e,
	0x4f, 0x55, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x5f, 0x57, 0x48,
	0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x75, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x52, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x22,
	0x53, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x3c, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22,
	0x32, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x14, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x66, 0x62, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52,
	0x0f, 0x66, 0x62, 0x62, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x53, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x70,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x67, 0x22, 0xdb, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x6f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x6e, 0x48, 0x6f, 0x6c,
	0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x79, 0x52, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x09, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0xb0, 0x1e,
	0x0a, 0x09, 0x56, 0x33, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x24,
	0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x42, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x6f, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x30, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x46,
	0x6f, 0x72, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x62, 0x62, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x28, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x35, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x29,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x27,
	0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12,
	0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x80, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x12,
	0x32, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x27, 0x2e, 0x62, 0x6f, 0x6c,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x6f, 0x6c, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x2e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2f, 0x2e, 0x62, 0x6f,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x62,
	0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x2a, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x29, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x27, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x08, 0x50, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x62, 0x6f, 0x6c,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d,
	0x53, 0x68, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x2e,
	0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x2e, 0x62, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bol_api_proto_go_bol_api_proto_rawDescOnce sync.Once
	file_bol_api_proto_go_bol_api_proto_rawDescData = file_bol_api_proto_go_bol_api_proto_rawDesc
)

func file_bol_api_proto_go_bol_api_proto_rawDescGZIP() []byte {
	file_bol_api_proto_go_bol_api_proto_rawDescOnce.Do(func() {
		file_bol_api_proto_go_bol_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_bol_api_proto_go_bol_api_proto_rawDescData)
	})
	return file_bol_api_proto_go_bol_api_proto_rawDescData
}

var file_bol_api_proto_go_bol_api_proto_enumTypes = make([]protoimpl.EnumInfo, 27)
var file_bol_api_proto_go_bol_api_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_bol_api_proto_go_bol_api_proto_goTypes = []interface{}{
	(BulkCommissionQuery_BulkCommissionQueryCondition)(0),             // 0: bol_api_proto_v1beta1.BulkCommissionQuery.BulkCommissionQueryCondition
	(Cancellation_CancellationReasonCode)(0),                          // 1: bol_api_proto_v1beta1.Cancellation.CancellationReasonCode
	(ChangeTransportRequest_ChangeTransportRequestTransporterCode)(0), // 2: bol_api_proto_v1beta1.ChangeTransportRequest.ChangeTransportRequestTransporterCode
	(Condition_ConditionCategory)(0),                                  // 3: bol_api_proto_v1beta1.Condition.ConditionCategory
	(Condition_ConditionName)(0),                                      // 4: bol_api_proto_v1beta1.Condition.ConditionName
	(CreateOfferExportRequest_CreateOfferExportRequestFormat)(0),      // 5: bol_api_proto_v1beta1.CreateOfferExportRequest.CreateOfferExportRequestFormat
	(Fulfilment_FulfilmentDeliveryCode)(0),                            // 6: bol_api_proto_v1beta1.Fulfilment.FulfilmentDeliveryCode
	(Fulfilment_FulfilmentType)(0),                                    // 7: bol_api_proto_v1beta1.Fulfilment.FulfilmentType
	(GetCommissionRequest_GetCommissionRequestCondition)(0),           // 8: bol_api_proto_v1beta1.GetCommissionRequest.GetCommissionRequestCondition
	(GetInboundsRequest_GetInboundsRequestState)(0),                   // 9: bol_api_proto_v1beta1.GetInboundsRequest.GetInboundsRequestState
	(GetInventoryRequest_GetInventoryRequestState)(0),                 // 10: bol_api_proto_v1beta1.GetInventoryRequest.GetInventoryRequestState
	(GetInventoryRequest_GetInventoryRequestStock)(0),                 // 11: bol_api_proto_v1beta1.GetInventoryRequest.GetInventoryRequestStock
	(GetOrdersRequest_GetOrdersRequestFulfilmentMethod)(0),            // 12: bol_api_proto_v1beta1.GetOrdersRequest.GetOrdersRequestFulfilmentMethod
	(GetPerformanceIndicatorRequest_Name)(0),                          // 13: bol_api_proto_v1beta1.GetPerformanceIndicatorRequest.Name
	(GetProcessStatusRequest_GetProcessStatusRequestEventType)(0),     // 14: bol_api_proto_v1beta1.GetProcessStatusRequest.GetProcessStatusRequestEventType
	(GetReturnsRequest_GetReturnsRequestFulfilmentMethod)(0),          // 15: bol_api_proto_v1beta1.GetReturnsRequest.GetReturnsRequestFulfilmentMethod
	(GetShipmentsRequest_GetShipmentsRequestFulfilmentMethod)(0),      // 16: bol_api_proto_v1beta1.GetShipmentsRequest.GetShipmentsRequestFulfilmentMethod
	(Inbound_InboundState)(0),                                         // 17: bol_api_proto_v1beta1.Inbound.InboundState
	(InboundProductRequest_InboundProductRequestState)(0),             // 18: bol_api_proto_v1beta1.InboundProductRequest.InboundProductRequestState
	(PickUpPoint_PickUpPointCode)(0),                                  // 19: bol_api_proto_v1beta1.PickUpPoint.PickUpPointCode
	(ProcessStatus_ProcessStatusStatus)(0),                            // 20: bol_api_proto_v1beta1.ProcessStatus.ProcessStatusStatus
	(Product_ProductState)(0),                                         // 21: bol_api_proto_v1beta1.Product.ProductState
	(ProductLabelsRequest_ProductLabelsRequestFormat)(0),              // 22: bol_api_proto_v1beta1.ProductLabelsRequest.ProductLabelsRequestFormat
	(ReturnRequest_ReturnRequestHandlingResult)(0),                    // 23: bol_api_proto_v1beta1.ReturnRequest.ReturnRequestHandlingResult
	(ShipmentItem_ShipmentItemFulfilmentMethod)(0),                    // 24: bol_api_proto_v1beta1.ShipmentItem.ShipmentItemFulfilmentMethod
	(ShipmentItem_ShipmentItemOfferCondition)(0),                      // 25: bol_api_proto_v1beta1.ShipmentItem.ShipmentItemOfferCondition
	(StateTransition_StateTransitionState)(0),                         // 26: bol_api_proto_v1beta1.StateTransition.StateTransitionState
	(*AddTransportInformationByTransportIdRequest)(nil),               // 27: bol_api_proto_v1beta1.AddTransportInformationByTransportIdRequest
	(*AdditionalService)(nil),                                         // 28: bol_api_proto_v1beta1.AdditionalService
	(*AddressDetails)(nil),                                            // 29: bol_api_proto_v1beta1.AddressDetails
	(*BulkCommissionQuery)(nil),                                       // 30: bol_api_proto_v1beta1.BulkCommissionQuery
	(*BulkCommissionRequest)(nil),                                     // 31: bol_api_proto_v1beta1.BulkCommissionRequest
	(*BulkCommissionResponse)(nil),                                    // 32: bol_api_proto_v1beta1.BulkCommissionResponse
	(*BulkProcessStatusRequest)(nil),                                  // 33: bol_api_proto_v1beta1.BulkProcessStatusRequest
	(*BundlePrice)(nil),                                               // 34: bol_api_proto_v1beta1.BundlePrice
	(*CancelOrderRequest)(nil),                                        // 35: bol_api_proto_v1beta1.CancelOrderRequest
	(*Cancellation)(nil),                                              // 36: bol_api_proto_v1beta1.Cancellation
	(*ChangeTransportRequest)(nil),                                    // 37: bol_api_proto_v1beta1.ChangeTransportRequest
	(*Commission)(nil),                                                // 38: bol_api_proto_v1beta1.Commission
	(*Condition)(nil),                                                 // 39: bol_api_proto_v1beta1.Condition
	(*CountryCode)(nil),                                               // 40: bol_api_proto_v1beta1.CountryCode
	(*CreateOfferExportRequest)(nil),                                  // 41: bol_api_proto_v1beta1.CreateOfferExportRequest
	(*CreateOfferRequest)(nil),                                        // 42: bol_api_proto_v1beta1.CreateOfferRequest
	(*CustomerDetails)(nil),                                           // 43: bol_api_proto_v1beta1.CustomerDetails
	(*DeleteOfferRequest)(nil),                                        // 44: bol_api_proto_v1beta1.DeleteOfferRequest
	(*DeliveryWindowsForInboundShipments)(nil),                        // 45: bol_api_proto_v1beta1.DeliveryWindowsForInboundShipments
	(*Details)(nil),                                                   // 46: bol_api_proto_v1beta1.Details
	(*Fulfilment)(nil),                                                // 47: bol_api_proto_v1beta1.Fulfilment
	(*GetCommissionRequest)(nil),                                      // 48: bol_api_proto_v1beta1.GetCommissionRequest
	(*GetCommissionsRequest)(nil),                                     // 49: bol_api_proto_v1beta1.GetCommissionsRequest
	(*GetDeliveryWindowsRequest)(nil),                                 // 50: bol_api_proto_v1beta1.GetDeliveryWindowsRequest
	(*GetInboundRequest)(nil),                                         // 51: bol_api_proto_v1beta1.GetInboundRequest
	(*GetInboundShippingLabelRequest)(nil),                            // 52: bol_api_proto_v1beta1.GetInboundShippingLabelRequest
	(*GetInboundShippingLabelResponse)(nil),                           // 53: bol_api_proto_v1beta1.GetInboundShippingLabelResponse
	(*GetInboundsRequest)(nil),                                        // 54: bol_api_proto_v1beta1.GetInboundsRequest
	(*GetInventoryRequest)(nil),                                       // 55: bol_api_proto_v1beta1.GetInventoryRequest
	(*GetInvoiceRequest)(nil),                                         // 56: bol_api_proto_v1beta1.GetInvoiceRequest
	(*GetInvoiceResponse)(nil),                                        // 57: bol_api_proto_v1beta1.GetInvoiceResponse
	(*GetInvoiceSpecificationRequest)(nil),                            // 58: bol_api_proto_v1beta1.GetInvoiceSpecificationRequest
	(*GetInvoiceSpecificationResponse)(nil),                           // 59: bol_api_proto_v1beta1.GetInvoiceSpecificationResponse
	(*GetInvoicesRequest)(nil),                                        // 60: bol_api_proto_v1beta1.GetInvoicesRequest
	(*GetInvoicesResponse)(nil),                                       // 61: bol_api_proto_v1beta1.GetInvoicesResponse
	(*GetOfferExportRequest)(nil),                                     // 62: bol_api_proto_v1beta1.GetOfferExportRequest
	(*GetOfferRequest)(nil),                                           // 63: bol_api_proto_v1beta1.GetOfferRequest
	(*GetOrderRequest)(nil),                                           // 64: bol_api_proto_v1beta1.GetOrderRequest
	(*GetOrdersRequest)(nil),                                          // 65: bol_api_proto_v1beta1.GetOrdersRequest
	(*GetPackingListRequest)(nil),                                     // 66: bol_api_proto_v1beta1.GetPackingListRequest
	(*GetPackingListResponse)(nil),                                    // 67: bol_api_proto_v1beta1.GetPackingListResponse
	(*GetPerformanceIndicatorRequest)(nil),                            // 68: bol_api_proto_v1beta1.GetPerformanceIndicatorRequest
	(*GetProcessStatusBulkRequest)(nil),                               // 69: bol_api_proto_v1beta1.GetProcessStatusBulkRequest
	(*GetProcessStatusRequest)(nil),                                   // 70: bol_api_proto_v1beta1.GetProcessStatusRequest
	(*GetProductLabelsRequest)(nil),                                   // 71: bol_api_proto_v1beta1.GetProductLabelsRequest
	(*GetProductLabelsResponse)(nil),                                  // 72: bol_api_proto_v1beta1.GetProductLabelsResponse
	(*GetReturnRequest)(nil),                                          // 73: bol_api_proto_v1beta1.GetReturnRequest
	(*GetReturnsRequest)(nil),                                         // 74: bol_api_proto_v1beta1.GetReturnsRequest
	(*GetShipmentRequest)(nil),                                        // 75: bol_api_proto_v1beta1.GetShipmentRequest
	(*GetShipmentsRequest)(nil),                                       // 76: bol_api_proto_v1beta1.GetShipmentsRequest
	(*GetShippingLabelRequest)(nil),                                   // 77: bol_api_proto_v1beta1.GetShippingLabelRequest
	(*GetShippingLabelResponse)(nil),                                  // 78: bol_api_proto_v1beta1.GetShippingLabelResponse
	(*GetShippingLabelsRequest)(nil),                                  // 79: bol_api_proto_v1beta1.GetShippingLabelsRequest
	(*HandleReturnRequest)(nil),                                       // 80: bol_api_proto_v1beta1.HandleReturnRequest
	(*Inbound)(nil),                                                   // 81: bol_api_proto_v1beta1.Inbound
	(*InboundProductRequest)(nil),                                     // 82: bol_api_proto_v1beta1.InboundProductRequest
	(*InboundRequest)(nil),                                            // 83: bol_api_proto_v1beta1.InboundRequest
	(*Inbounds)(nil),                                                  // 84: bol_api_proto_v1beta1.Inbounds
	(*InventoryOffer)(nil),                                            // 85: bol_api_proto_v1beta1.InventoryOffer
	(*InventoryResponse)(nil),                                         // 86: bol_api_proto_v1beta1.InventoryResponse
	(*Link)(nil),                                                      // 87: bol_api_proto_v1beta1.Link
	(*Norm)(nil),                                                      // 88: bol_api_proto_v1beta1.Norm
	(*NotPublishableReason)(nil),                                      // 89: bol_api_proto_v1beta1.NotPublishableReason
	(*Order)(nil),                                                     // 90: bol_api_proto_v1beta1.Order
	(*OrderCustomerDetails)(nil),                                      // 91: bol_api_proto_v1beta1.OrderCustomerDetails
	(*OrderItem)(nil),                                                 // 92: bol_api_proto_v1beta1.OrderItem
	(*PerformanceIndicator)(nil),                                      // 93: bol_api_proto_v1beta1.PerformanceIndicator
	(*PerformanceIndicators)(nil),                                     // 94: bol_api_proto_v1beta1.PerformanceIndicators
	(*Period)(nil),                                                    // 95: bol_api_proto_v1beta1.Period
	(*PickUpPoint)(nil),                                               // 96: bol_api_proto_v1beta1.PickUpPoint
	(*PostInboundRequest)(nil),                                        // 97: bol_api_proto_v1beta1.PostInboundRequest
	(*PostOfferExportRequest)(nil),                                    // 98: bol_api_proto_v1beta1.PostOfferExportRequest
	(*PostOfferRequest)(nil),                                          // 99: bol_api_proto_v1beta1.PostOfferRequest
	(*Pricing)(nil),                                                   // 100: bol_api_proto_v1beta1.Pricing
	(*Problem)(nil),                                                   // 101: bol_api_proto_v1beta1.Problem
	(*ProcessStatus)(nil),                                             // 102: bol_api_proto_v1beta1.ProcessStatus
	(*ProcessStatusId)(nil),                                           // 103: bol_api_proto_v1beta1.ProcessStatusId
	(*ProcessStatusResponse)(nil),                                     // 104: bol_api_proto_v1beta1.ProcessStatusResponse
	(*Product)(nil),                                                   // 105: bol_api_proto_v1beta1.Product
	(*ProductLabel)(nil),                                              // 106: bol_api_proto_v1beta1.ProductLabel
	(*ProductLabelsRequest)(nil),                                      // 107: bol_api_proto_v1beta1.ProductLabelsRequest
	(*PurchasableShippingLabel)(nil),                                  // 108: bol_api_proto_v1beta1.PurchasableShippingLabel
	(*PurchasableShippingLabelsResponse)(nil),                         // 109: bol_api_proto_v1beta1.PurchasableShippingLabelsResponse
	(*PutOfferRequest)(nil),                                           // 110: bol_api_proto_v1beta1.PutOfferRequest
	(*ReducedOrder)(nil),                                              // 111: bol_api_proto_v1beta1.ReducedOrder
	(*ReducedOrderItem)(nil),                                          // 112: bol_api_proto_v1beta1.ReducedOrderItem
	(*ReducedOrders)(nil),                                             // 113: bol_api_proto_v1beta1.ReducedOrders
	(*ReducedReturnItem)(nil),                                         // 114: bol_api_proto_v1beta1.ReducedReturnItem
	(*ReducedShipment)(nil),                                           // 115: bol_api_proto_v1beta1.ReducedShipment
	(*ReducedShipmentItem)(nil),                                       // 116: bol_api_proto_v1beta1.ReducedShipmentItem
	(*ReducedTransport)(nil),                                          // 117: bol_api_proto_v1beta1.ReducedTransport
	(*Reduction)(nil),                                                 // 118: bol_api_proto_v1beta1.Reduction
	(*RetailerOffer)(nil),                                             // 119: bol_api_proto_v1beta1.RetailerOffer
	(*ReturnItem)(nil),                                                // 120: bol_api_proto_v1beta1.ReturnItem
	(*ReturnRequest)(nil),                                             // 121: bol_api_proto_v1beta1.ReturnRequest
	(*ReturnsResponse)(nil),                                           // 122: bol_api_proto_v1beta1.ReturnsResponse
	(*Score)(nil),                                                     // 123: bol_api_proto_v1beta1.Score
	(*ShipOrderItemRequest)(nil),                                      // 124: bol_api_proto_v1beta1.ShipOrderItemRequest
	(*Shipment)(nil),                                                  // 125: bol_api_proto_v1beta1.Shipment
	(*ShipmentItem)(nil),                                              // 126: bol_api_proto_v1beta1.ShipmentItem
	(*ShipmentRequest)(nil),                                           // 127: bol_api_proto_v1beta1.ShipmentRequest
	(*ShipmentResponse)(nil),                                          // 128: bol_api_proto_v1beta1.ShipmentResponse
	(*StateTransition)(nil),                                           // 129: bol_api_proto_v1beta1.StateTransition
	(*Stock)(nil),                                                     // 130: bol_api_proto_v1beta1.Stock
	(*StockCreate)(nil),                                               // 131: bol_api_proto_v1beta1.StockCreate
	(*Store)(nil),                                                     // 132: bol_api_proto_v1beta1.Store
	(*TimeSlot)(nil),                                                  // 133: bol_api_proto_v1beta1.TimeSlot
	(*Transport)(nil),                                                 // 134: bol_api_proto_v1beta1.Transport
	(*TransportInstruction)(nil),                                      // 135: bol_api_proto_v1beta1.TransportInstruction
	(*Transporter)(nil),                                               // 136: bol_api_proto_v1beta1.Transporter
	(*TransportersResponse)(nil),                                      // 137: bol_api_proto_v1beta1.TransportersResponse
	(*UpdateOfferPriceRequest)(nil),                                   // 138: bol_api_proto_v1beta1.UpdateOfferPriceRequest
	(*UpdateOfferRequest)(nil),                                        // 139: bol_api_proto_v1beta1.UpdateOfferRequest
	(*UpdateOfferStockRequest)(nil),                                   // 140: bol_api_proto_v1beta1.UpdateOfferStockRequest
	(*Violation)(nil),                                                 // 141: bol_api_proto_v1beta1.Violation
	(*empty.Empty)(nil),                                               // 142: google.protobuf.Empty
}
var file_bol_api_proto_go_bol_api_proto_depIdxs = []int32{
	37,  // 0: bol_api_proto_v1beta1.AddTransportInformationByTransportIdRequest.body:type_name -> bol_api_proto_v1beta1.ChangeTransportRequest
	0,   // 1: bol_api_proto_v1beta1.BulkCommissionQuery.condition:type_name -> bol_api_proto_v1beta1.BulkCommissionQuery.BulkCommissionQueryCondition
	30,  // 2: bol_api_proto_v1beta1.BulkCommissionRequest.commissionQueries:type_name -> bol_api_proto_v1beta1.BulkCommissionQuery
	38,  // 3: bol_api_proto_v1beta1.BulkCommissionResponse.commissions:type_name -> bol_api_proto_v1beta1.Commission
	103, // 4: bol_api_proto_v1beta1.BulkProcessStatusRequest.processStatusQueries:type_name -> bol_api_proto_v1beta1.ProcessStatusId
	36,  // 5: bol_api_proto_v1beta1.CancelOrderRequest.body:type_name -> bol_api_proto_v1beta1.Cancellation
	1,   // 6: bol_api_proto_v1beta1.Cancellation.reasonCode:type_name -> bol_api_proto_v1beta1.Cancellation.CancellationReasonCode
	2,   // 7: bol_api_proto_v1beta1.ChangeTransportRequest.transporterCode:type_name -> bol_api_proto_v1beta1.ChangeTransportRequest.ChangeTransportRequestTransporterCode
	118, // 8: bol_api_proto_v1beta1.Commission.reductions:type_name -> bol_api_proto_v1beta1.Reduction
	3,   // 9: bol_api_proto_v1beta1.Condition.category:type_name -> bol_api_proto_v1beta1.Condition.ConditionCategory
	4,   // 10: bol_api_proto_v1beta1.Condition.name:type_name -> bol_api_proto_v1beta1.Condition.ConditionName
	5,   // 11: bol_api_proto_v1beta1.CreateOfferExportRequest.format:type_name -> bol_api_proto_v1beta1.CreateOfferExportRequest.CreateOfferExportRequestFormat
	39,  // 12: bol_api_proto_v1beta1.CreateOfferRequest.condition:type_name -> bol_api_proto_v1beta1.Condition
	47,  // 13: bol_api_proto_v1beta1.CreateOfferRequest.fulfilment:type_name -> bol_api_proto_v1beta1.Fulfilment
	100, // 14: bol_api_proto_v1beta1.CreateOfferRequest.pricing:type_name -> bol_api_proto_v1beta1.Pricing
	131, // 15: bol_api_proto_v1beta1.CreateOfferRequest.stock:type_name -> bol_api_proto_v1beta1.StockCreate
	133, // 16: bol_api_proto_v1beta1.DeliveryWindowsForInboundShipments.timeSlots:type_name -> bol_api_proto_v1beta1.TimeSlot
	88,  // 17: bol_api_proto_v1beta1.Details.norm:type_name -> bol_api_proto_v1beta1.Norm
	95,  // 18: bol_api_proto_v1beta1.Details.period:type_name -> bol_api_proto_v1beta1.Period
	123, // 19: bol_api_proto_v1beta1.Details.score:type_name -> bol_api_proto_v1beta1.Score
	6,   // 20: bol_api_proto_v1beta1.Fulfilment.deliveryCode:type_name -> bol_api_proto_v1beta1.Fulfilment.FulfilmentDeliveryCode
	96,  // 21: bol_api_proto_v1beta1.Fulfilment.pickUpPoints:type_name -> bol_api_proto_v1beta1.PickUpPoint
	7,   // 22: bol_api_proto_v1beta1.Fulfilment.type:type_name -> bol_api_proto_v1beta1.Fulfilment.FulfilmentType
	8,   // 23: bol_api_proto_v1beta1.GetCommissionRequest.condition:type_name -> bol_api_proto_v1beta1.GetCommissionRequest.GetCommissionRequestCondition
	31,  // 24: bol_api_proto_v1beta1.GetCommissionsRequest.body:type_name -> bol_api_proto_v1beta1.BulkCommissionRequest
	9,   // 25: bol_api_proto_v1beta1.GetInboundsRequest.state:type_name -> bol_api_proto_v1beta1.GetInboundsRequest.GetInboundsRequestState
	10,  // 26: bol_api_proto_v1beta1.GetInventoryRequest.state:type_name -> bol_api_proto_v1beta1.GetInventoryRequest.GetInventoryRequestState
	11,  // 27: bol_api_proto_v1beta1.GetInventoryRequest.stock:type_name -> bol_api_proto_v1beta1.GetInventoryRequest.GetInventoryRequestStock
	12,  // 28: bol_api_proto_v1beta1.GetOrdersRequest.fulfilment_method:type_name -> bol_api_proto_v1beta1.GetOrdersRequest.GetOrdersRequestFulfilmentMethod
	13,  // 29: bol_api_proto_v1beta1.GetPerformanceIndicatorRequest.name:type_name -> bol_api_proto_v1beta1.GetPerformanceIndicatorRequest.Name
	33,  // 30: bol_api_proto_v1beta1.GetProcessStatusBulkRequest.body:type_name -> bol_api_proto_v1beta1.BulkProcessStatusRequest
	14,  // 31: bol_api_proto_v1beta1.GetProcessStatusRequest.event_type:type_name -> bol_api_proto_v1beta1.GetProcessStatusRequest.GetProcessStatusRequestEventType
	107, // 32: bol_api_proto_v1beta1.GetProductLabelsRequest.body:type_name -> bol_api_proto_v1beta1.ProductLabelsRequest
	15,  // 33: bol_api_proto_v1beta1.GetReturnsRequest.fulfilment_method:type_name -> bol_api_proto_v1beta1.GetReturnsRequest.GetReturnsRequestFulfilmentMethod
	16,  // 34: bol_api_proto_v1beta1.GetShipmentsRequest.fulfilment_method:type_name -> bol_api_proto_v1beta1.GetShipmentsRequest.GetShipmentsRequestFulfilmentMethod
	121, // 35: bol_api_proto_v1beta1.HandleReturnRequest.body:type_name -> bol_api_proto_v1beta1.ReturnRequest
	136, // 36: bol_api_proto_v1beta1.Inbound.fbbTransporter:type_name -> bol_api_proto_v1beta1.Transporter
	105, // 37: bol_api_proto_v1beta1.Inbound.products:type_name -> bol_api_proto_v1beta1.Product
	17,  // 38: bol_api_proto_v1beta1.Inbound.state:type_name -> bol_api_proto_v1beta1.Inbound.InboundState
	129, // 39: bol_api_proto_v1beta1.Inbound.stateTransitions:type_name -> bol_api_proto_v1beta1.StateTransition
	133, // 40: bol_api_proto_v1beta1.Inbound.timeSlot:type_name -> bol_api_proto_v1beta1.TimeSlot
	18,  // 41: bol_api_proto_v1beta1.InboundProductRequest.state:type_name -> bol_api_proto_v1beta1.InboundProductRequest.InboundProductRequestState
	136, // 42: bol_api_proto_v1beta1.InboundRequest.fbbTransporter:type_name -> bol_api_proto_v1beta1.Transporter
	82,  // 43: bol_api_proto_v1beta1.InboundRequest.products:type_name -> bol_api_proto_v1beta1.InboundProductRequest
	133, // 44: bol_api_proto_v1beta1.InboundRequest.timeSlot:type_name -> bol_api_proto_v1beta1.TimeSlot
	81,  // 45: bol_api_proto_v1beta1.Inbounds.inbounds:type_name -> bol_api_proto_v1beta1.Inbound
	85,  // 46: bol_api_proto_v1beta1.InventoryResponse.offers:type_name -> bol_api_proto_v1beta1.InventoryOffer
	91,  // 47: bol_api_proto_v1beta1.Order.customerDetails:type_name -> bol_api_proto_v1beta1.OrderCustomerDetails
	92,  // 48: bol_api_proto_v1beta1.Order.orderItems:type_name -> bol_api_proto_v1beta1.OrderItem
	29,  // 49: bol_api_proto_v1beta1.OrderCustomerDetails.billingDetails:type_name -> bol_api_proto_v1beta1.AddressDetails
	29,  // 50: bol_api_proto_v1beta1.OrderCustomerDetails.shipmentDetails:type_name -> bol_api_proto_v1beta1.AddressDetails
	28,  // 51: bol_api_proto_v1beta1.OrderItem.additionalServices:type_name -> bol_api_proto_v1beta1.AdditionalService
	46,  // 52: bol_api_proto_v1beta1.PerformanceIndicator.details:type_name -> bol_api_proto_v1beta1.Details
	93,  // 53: bol_api_proto_v1beta1.PerformanceIndicators.performanceIndicators:type_name -> bol_api_proto_v1beta1.PerformanceIndicator
	19,  // 54: bol_api_proto_v1beta1.PickUpPoint.code:type_name -> bol_api_proto_v1beta1.PickUpPoint.PickUpPointCode
	83,  // 55: bol_api_proto_v1beta1.PostInboundRequest.body:type_name -> bol_api_proto_v1beta1.InboundRequest
	41,  // 56: bol_api_proto_v1beta1.PostOfferExportRequest.body:type_name -> bol_api_proto_v1beta1.CreateOfferExportRequest
	42,  // 57: bol_api_proto_v1beta1.PostOfferRequest.body:type_name -> bol_api_proto_v1beta1.CreateOfferRequest
	34,  // 58: bol_api_proto_v1beta1.Pricing.bundlePrices:type_name -> bol_api_proto_v1beta1.BundlePrice
	141, // 59: bol_api_proto_v1beta1.Problem.violations:type_name -> bol_api_proto_v1beta1.Violation
	87,  // 60: bol_api_proto_v1beta1.ProcessStatus.links:type_name -> bol_api_proto_v1beta1.Link
	20,  // 61: bol_api_proto_v1beta1.ProcessStatus.status:type_name -> bol_api_proto_v1beta1.ProcessStatus.ProcessStatusStatus
	102, // 62: bol_api_proto_v1beta1.ProcessStatusResponse.processStatuses:type_name -> bol_api_proto_v1beta1.ProcessStatus
	21,  // 63: bol_api_proto_v1beta1.Product.state:type_name -> bol_api_proto_v1beta1.Product.ProductState
	22,  // 64: bol_api_proto_v1beta1.ProductLabelsRequest.format:type_name -> bol_api_proto_v1beta1.ProductLabelsRequest.ProductLabelsRequestFormat
	106, // 65: bol_api_proto_v1beta1.ProductLabelsRequest.productLabels:type_name -> bol_api_proto_v1beta1.ProductLabel
	108, // 66: bol_api_proto_v1beta1.PurchasableShippingLabelsResponse.purchasableShippingLabels:type_name -> bol_api_proto_v1beta1.PurchasableShippingLabel
	139, // 67: bol_api_proto_v1beta1.PutOfferRequest.body:type_name -> bol_api_proto_v1beta1.UpdateOfferRequest
	112, // 68: bol_api_proto_v1beta1.ReducedOrder.orderItems:type_name -> bol_api_proto_v1beta1.ReducedOrderItem
	111, // 69: bol_api_proto_v1beta1.ReducedOrders.orders:type_name -> bol_api_proto_v1beta1.ReducedOrder
	116, // 70: bol_api_proto_v1beta1.ReducedShipment.shipmentItems:type_name -> bol_api_proto_v1beta1.ReducedShipmentItem
	117, // 71: bol_api_proto_v1beta1.ReducedShipment.transport:type_name -> bol_api_proto_v1beta1.ReducedTransport
	39,  // 72: bol_api_proto_v1beta1.RetailerOffer.condition:type_name -> bol_api_proto_v1beta1.Condition
	47,  // 73: bol_api_proto_v1beta1.RetailerOffer.fulfilment:type_name -> bol_api_proto_v1beta1.Fulfilment
	89,  // 74: bol_api_proto_v1beta1.RetailerOffer.notPublishableReasons:type_name -> bol_api_proto_v1beta1.NotPublishableReason
	100, // 75: bol_api_proto_v1beta1.RetailerOffer.pricing:type_name -> bol_api_proto_v1beta1.Pricing
	130, // 76: bol_api_proto_v1beta1.RetailerOffer.stock:type_name -> bol_api_proto_v1beta1.Stock
	132, // 77: bol_api_proto_v1beta1.RetailerOffer.store:type_name -> bol_api_proto_v1beta1.Store
	43,  // 78: bol_api_proto_v1beta1.ReturnItem.customerDetails:type_name -> bol_api_proto_v1beta1.CustomerDetails
	23,  // 79: bol_api_proto_v1beta1.ReturnRequest.handlingResult:type_name -> bol_api_proto_v1beta1.ReturnRequest.ReturnRequestHandlingResult
	114, // 80: bol_api_proto_v1beta1.ReturnsResponse.returns:type_name -> bol_api_proto_v1beta1.ReducedReturnItem
	127, // 81: bol_api_proto_v1beta1.ShipOrderItemRequest.body:type_name -> bol_api_proto_v1beta1.ShipmentRequest
	43,  // 82: bol_api_proto_v1beta1.Shipment.billingDetails:type_name -> bol_api_proto_v1beta1.CustomerDetails
	43,  // 83: bol_api_proto_v1beta1.Shipment.customerDetails:type_name -> bol_api_proto_v1beta1.CustomerDetails
	126, // 84: bol_api_proto_v1beta1.Shipment.shipmentItems:type_name -> bol_api_proto_v1beta1.ShipmentItem
	134, // 85: bol_api_proto_v1beta1.Shipment.transport:type_name -> bol_api_proto_v1beta1.Transport
	24,  // 86: bol_api_proto_v1beta1.ShipmentItem.fulfilmentMethod:type_name -> bol_api_proto_v1beta1.ShipmentItem.ShipmentItemFulfilmentMethod
	25,  // 87: bol_api_proto_v1beta1.ShipmentItem.offerCondition:type_name -> bol_api_proto_v1beta1.ShipmentItem.ShipmentItemOfferCondition
	135, // 88: bol_api_proto_v1beta1.ShipmentRequest.transport:type_name -> bol_api_proto_v1beta1.TransportInstruction
	115, // 89: bol_api_proto_v1beta1.ShipmentResponse.shipments:type_name -> bol_api_proto_v1beta1.ReducedShipment
	26,  // 90: bol_api_proto_v1beta1.StateTransition.state:type_name -> bol_api_proto_v1beta1.StateTransition.StateTransitionState
	40,  // 91: bol_api_proto_v1beta1.Store.visible:type_name -> bol_api_proto_v1beta1.CountryCode
	136, // 92: bol_api_proto_v1beta1.TransportersResponse.fbbTransporters:type_name -> bol_api_proto_v1beta1.Transporter
	100, // 93: bol_api_proto_v1beta1.UpdateOfferPriceRequest.pricing:type_name -> bol_api_proto_v1beta1.Pricing
	47,  // 94: bol_api_proto_v1beta1.UpdateOfferRequest.fulfilment:type_name -> bol_api_proto_v1beta1.Fulfilment
	27,  // 95: bol_api_proto_v1beta1.V3Service.AddTransportInformationByTransportId:input_type -> bol_api_proto_v1beta1.AddTransportInformationByTransportIdRequest
	35,  // 96: bol_api_proto_v1beta1.V3Service.CancelOrder:input_type -> bol_api_proto_v1beta1.CancelOrderRequest
	44,  // 97: bol_api_proto_v1beta1.V3Service.DeleteOffer:input_type -> bol_api_proto_v1beta1.DeleteOfferRequest
	48,  // 98: bol_api_proto_v1beta1.V3Service.GetCommission:input_type -> bol_api_proto_v1beta1.GetCommissionRequest
	49,  // 99: bol_api_proto_v1beta1.V3Service.GetCommissions:input_type -> bol_api_proto_v1beta1.GetCommissionsRequest
	50,  // 100: bol_api_proto_v1beta1.V3Service.GetDeliveryWindows:input_type -> bol_api_proto_v1beta1.GetDeliveryWindowsRequest
	142, // 101: bol_api_proto_v1beta1.V3Service.GetFbbTransporters:input_type -> google.protobuf.Empty
	51,  // 102: bol_api_proto_v1beta1.V3Service.GetInbound:input_type -> bol_api_proto_v1beta1.GetInboundRequest
	52,  // 103: bol_api_proto_v1beta1.V3Service.GetInboundShippingLabel:input_type -> bol_api_proto_v1beta1.GetInboundShippingLabelRequest
	54,  // 104: bol_api_proto_v1beta1.V3Service.GetInbounds:input_type -> bol_api_proto_v1beta1.GetInboundsRequest
	55,  // 105: bol_api_proto_v1beta1.V3Service.GetInventory:input_type -> bol_api_proto_v1beta1.GetInventoryRequest
	56,  // 106: bol_api_proto_v1beta1.V3Service.GetInvoice:input_type -> bol_api_proto_v1beta1.GetInvoiceRequest
	58,  // 107: bol_api_proto_v1beta1.V3Service.GetInvoiceSpecification:input_type -> bol_api_proto_v1beta1.GetInvoiceSpecificationRequest
	60,  // 108: bol_api_proto_v1beta1.V3Service.GetInvoices:input_type -> bol_api_proto_v1beta1.GetInvoicesRequest
	63,  // 109: bol_api_proto_v1beta1.V3Service.GetOffer:input_type -> bol_api_proto_v1beta1.GetOfferRequest
	62,  // 110: bol_api_proto_v1beta1.V3Service.GetOfferExport:input_type -> bol_api_proto_v1beta1.GetOfferExportRequest
	64,  // 111: bol_api_proto_v1beta1.V3Service.GetOrder:input_type -> bol_api_proto_v1beta1.GetOrderRequest
	65,  // 112: bol_api_proto_v1beta1.V3Service.GetOrders:input_type -> bol_api_proto_v1beta1.GetOrdersRequest
	66,  // 113: bol_api_proto_v1beta1.V3Service.GetPackingList:input_type -> bol_api_proto_v1beta1.GetPackingListRequest
	68,  // 114: bol_api_proto_v1beta1.V3Service.GetPerformanceIndicator:input_type -> bol_api_proto_v1beta1.GetPerformanceIndicatorRequest
	70,  // 115: bol_api_proto_v1beta1.V3Service.GetProcessStatus:input_type -> bol_api_proto_v1beta1.GetProcessStatusRequest
	69,  // 116: bol_api_proto_v1beta1.V3Service.GetProcessStatusBulk:input_type -> bol_api_proto_v1beta1.GetProcessStatusBulkRequest
	71,  // 117: bol_api_proto_v1beta1.V3Service.GetProductLabels:input_type -> bol_api_proto_v1beta1.GetProductLabelsRequest
	142, // 118: bol_api_proto_v1beta1.V3Service.GetReductions:input_type -> google.protobuf.Empty
	73,  // 119: bol_api_proto_v1beta1.V3Service.GetReturn:input_type -> bol_api_proto_v1beta1.GetReturnRequest
	74,  // 120: bol_api_proto_v1beta1.V3Service.GetReturns:input_type -> bol_api_proto_v1beta1.GetReturnsRequest
	75,  // 121: bol_api_proto_v1beta1.V3Service.GetShipment:input_type -> bol_api_proto_v1beta1.GetShipmentRequest
	76,  // 122: bol_api_proto_v1beta1.V3Service.GetShipments:input_type -> bol_api_proto_v1beta1.GetShipmentsRequest
	77,  // 123: bol_api_proto_v1beta1.V3Service.GetShippingLabel:input_type -> bol_api_proto_v1beta1.GetShippingLabelRequest
	79,  // 124: bol_api_proto_v1beta1.V3Service.GetShippingLabels:input_type -> bol_api_proto_v1beta1.GetShippingLabelsRequest
	80,  // 125: bol_api_proto_v1beta1.V3Service.HandleReturn:input_type -> bol_api_proto_v1beta1.HandleReturnRequest
	97,  // 126: bol_api_proto_v1beta1.V3Service.PostInbound:input_type -> bol_api_proto_v1beta1.PostInboundRequest
	99,  // 127: bol_api_proto_v1beta1.V3Service.PostOffer:input_type -> bol_api_proto_v1beta1.PostOfferRequest
	98,  // 128: bol_api_proto_v1beta1.V3Service.PostOfferExport:input_type -> bol_api_proto_v1beta1.PostOfferExportRequest
	110, // 129: bol_api_proto_v1beta1.V3Service.PutOffer:input_type -> bol_api_proto_v1beta1.PutOfferRequest
	124, // 130: bol_api_proto_v1beta1.V3Service.ShipOrderItem:input_type -> bol_api_proto_v1beta1.ShipOrderItemRequest
	138, // 131: bol_api_proto_v1beta1.V3Service.UpdateOfferPrice:input_type -> bol_api_proto_v1beta1.UpdateOfferPriceRequest
	140, // 132: bol_api_proto_v1beta1.V3Service.UpdateOfferStock:input_type -> bol_api_proto_v1beta1.UpdateOfferStockRequest
	142, // 133: bol_api_proto_v1beta1.V3Service.AddTransportInformationByTransportId:output_type -> google.protobuf.Empty
	142, // 134: bol_api_proto_v1beta1.V3Service.CancelOrder:output_type -> google.protobuf.Empty
	142, // 135: bol_api_proto_v1beta1.V3Service.DeleteOffer:output_type -> google.protobuf.Empty
	38,  // 136: bol_api_proto_v1beta1.V3Service.GetCommission:output_type -> bol_api_proto_v1beta1.Commission
	32,  // 137: bol_api_proto_v1beta1.V3Service.GetCommissions:output_type -> bol_api_proto_v1beta1.BulkCommissionResponse
	45,  // 138: bol_api_proto_v1beta1.V3Service.GetDeliveryWindows:output_type -> bol_api_proto_v1beta1.DeliveryWindowsForInboundShipments
	137, // 139: bol_api_proto_v1beta1.V3Service.GetFbbTransporters:output_type -> bol_api_proto_v1beta1.TransportersResponse
	81,  // 140: bol_api_proto_v1beta1.V3Service.GetInbound:output_type -> bol_api_proto_v1beta1.Inbound
	53,  // 141: bol_api_proto_v1beta1.V3Service.GetInboundShippingLabel:output_type -> bol_api_proto_v1beta1.GetInboundShippingLabelResponse
	84,  // 142: bol_api_proto_v1beta1.V3Service.GetInbounds:output_type -> bol_api_proto_v1beta1.Inbounds
	86,  // 143: bol_api_proto_v1beta1.V3Service.GetInventory:output_type -> bol_api_proto_v1beta1.InventoryResponse
	57,  // 144: bol_api_proto_v1beta1.V3Service.GetInvoice:output_type -> bol_api_proto_v1beta1.GetInvoiceResponse
	59,  // 145: bol_api_proto_v1beta1.V3Service.GetInvoiceSpecification:output_type -> bol_api_proto_v1beta1.GetInvoiceSpecificationResponse
	61,  // 146: bol_api_proto_v1beta1.V3Service.GetInvoices:output_type -> bol_api_proto_v1beta1.GetInvoicesResponse
	119, // 147: bol_api_proto_v1beta1.V3Service.GetOffer:output_type -> bol_api_proto_v1beta1.RetailerOffer
	142, // 148: bol_api_proto_v1beta1.V3Service.GetOfferExport:output_type -> google.protobuf.Empty
	90,  // 149: bol_api_proto_v1beta1.V3Service.GetOrder:output_type -> bol_api_proto_v1beta1.Order
	113, // 150: bol_api_proto_v1beta1.V3Service.GetOrders:output_type -> bol_api_proto_v1beta1.ReducedOrders
	67,  // 151: bol_api_proto_v1beta1.V3Service.GetPackingList:output_type -> bol_api_proto_v1beta1.GetPackingListResponse
	94,  // 152: bol_api_proto_v1beta1.V3Service.GetPerformanceIndicator:output_type -> bol_api_proto_v1beta1.PerformanceIndicators
	104, // 153: bol_api_proto_v1beta1.V3Service.GetProcessStatus:output_type -> bol_api_proto_v1beta1.ProcessStatusResponse
	104, // 154: bol_api_proto_v1beta1.V3Service.GetProcessStatusBulk:output_type -> bol_api_proto_v1beta1.ProcessStatusResponse
	72,  // 155: bol_api_proto_v1beta1.V3Service.GetProductLabels:output_type -> bol_api_proto_v1beta1.GetProductLabelsResponse
	142, // 156: bol_api_proto_v1beta1.V3Service.GetReductions:output_type -> google.protobuf.Empty
	120, // 157: bol_api_proto_v1beta1.V3Service.GetReturn:output_type -> bol_api_proto_v1beta1.ReturnItem
	122, // 158: bol_api_proto_v1beta1.V3Service.GetReturns:output_type -> bol_api_proto_v1beta1.ReturnsResponse
	125, // 159: bol_api_proto_v1beta1.V3Service.GetShipment:output_type -> bol_api_proto_v1beta1.Shipment
	128, // 160: bol_api_proto_v1beta1.V3Service.GetShipments:output_type -> bol_api_proto_v1beta1.ShipmentResponse
	78,  // 161: bol_api_proto_v1beta1.V3Service.GetShippingLabel:output_type -> bol_api_proto_v1beta1.GetShippingLabelResponse
	109, // 162: bol_api_proto_v1beta1.V3Service.GetShippingLabels:output_type -> bol_api_proto_v1beta1.PurchasableShippingLabelsResponse
	142, // 163: bol_api_proto_v1beta1.V3Service.HandleReturn:output_type -> google.protobuf.Empty
	142, // 164: bol_api_proto_v1beta1.V3Service.PostInbound:output_type -> google.protobuf.Empty
	142, // 165: bol_api_proto_v1beta1.V3Service.PostOffer:output_type -> google.protobuf.Empty
	142, // 166: bol_api_proto_v1beta1.V3Service.PostOfferExport:output_type -> google.protobuf.Empty
	142, // 167: bol_api_proto_v1beta1.V3Service.PutOffer:output_type -> google.protobuf.Empty
	142, // 168: bol_api_proto_v1beta1.V3Service.ShipOrderItem:output_type -> google.protobuf.Empty
	142, // 169: bol_api_proto_v1beta1.V3Service.UpdateOfferPrice:output_type -> google.protobuf.Empty
	142, // 170: bol_api_proto_v1beta1.V3Service.UpdateOfferStock:output_type -> google.protobuf.Empty
	133, // [133:171] is the sub-list for method output_type
	95,  // [95:133] is the sub-list for method input_type
	95,  // [95:95] is the sub-list for extension type_name
	95,  // [95:95] is the sub-list for extension extendee
	0,   // [0:95] is the sub-list for field type_name
}

func init() { file_bol_api_proto_go_bol_api_proto_init() }
func file_bol_api_proto_go_bol_api_proto_init() {
	if File_bol_api_proto_go_bol_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bol_api_proto_go_bol_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTransportInformationByTransportIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCommissionQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkProcessStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundlePrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cancellation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTransportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryWindowsForInboundShipments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fulfilment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeliveryWindowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundShippingLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundShippingLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoiceSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoiceSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInvoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPerformanceIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessStatusBulkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReturnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShippingLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShippingLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShippingLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inbound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inbounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Norm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotPublishableReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCustomerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceIndicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceIndicators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Period); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickUpPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostInboundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostOfferExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Problem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatusId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchasableShippingLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchasableShippingLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedReturnItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedShipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedShipmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReducedTransport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetailerOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipOrderItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transporter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOfferPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOfferStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bol_api_proto_go_bol_api_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Violation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bol_api_proto_go_bol_api_proto_rawDesc,
			NumEnums:      27,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bol_api_proto_go_bol_api_proto_goTypes,
		DependencyIndexes: file_bol_api_proto_go_bol_api_proto_depIdxs,
		EnumInfos:         file_bol_api_proto_go_bol_api_proto_enumTypes,
		MessageInfos:      file_bol_api_proto_go_bol_api_proto_msgTypes,
	}.Build()
	File_bol_api_proto_go_bol_api_proto = out.File
	file_bol_api_proto_go_bol_api_proto_rawDesc = nil
	file_bol_api_proto_go_bol_api_proto_goTypes = nil
	file_bol_api_proto_go_bol_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// V3ServiceClient is the client API for V3Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type V3ServiceClient interface {
	// Add transport information by transport id
	//
	// Add information to an existing transport. The transport id is part of the shipment. You can retrieve the transport id through the GET shipment list request.
	AddTransportInformationByTransportId(ctx context.Context, in *AddTransportInformationByTransportIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Cancel an order item by order item id
	//
	// This endpoint can be used to either confirm a cancellation request by the customer or to cancel an order you yourself are unable to fulfil.
	CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete offer by id
	//
	// Delete an offer by id.
	DeleteOffer(ctx context.Context, in *DeleteOfferRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get all commissions and reductions by EAN per single EAN
	//
	// Commissions can be filtered by condition, which defaults to NEW. If price is provided, the exact commission amount will also be calculated.
	GetCommission(ctx context.Context, in *GetCommissionRequest, opts ...grpc.CallOption) (*Commission, error)
	// Get all commissions and reductions by EAN in bulk
	//
	// Gets all commissions and possible reductions by EAN, condition and optionally price. No more than 100 EAN`s can be sent in a single request.
	GetCommissions(ctx context.Context, in *GetCommissionsRequest, opts ...grpc.CallOption) (*BulkCommissionResponse, error)
	// Get delivery windows for new inbound shipments
	//
	// Retrieve a list of available delivery windows when creating a new inbound shipment.
	GetDeliveryWindows(ctx context.Context, in *GetDeliveryWindowsRequest, opts ...grpc.CallOption) (*DeliveryWindowsForInboundShipments, error)
	// Get FBB transporters list
	//
	// Get all transporters that carry out FBB shipments.
	GetFbbTransporters(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TransportersResponse, error)
	// Get inbound by inbound id
	//
	// Get inbound details by inbound id.
	GetInbound(ctx context.Context, in *GetInboundRequest, opts ...grpc.CallOption) (*Inbound, error)
	// Get FBB shippinglabel by inbound id
	//
	// Get FBB shippinglabel by inbound id.
	GetInboundShippingLabel(ctx context.Context, in *GetInboundShippingLabelRequest, opts ...grpc.CallOption) (*GetInboundShippingLabelResponse, error)
	// Get inbound shipment list
	//
	// A paginated list of all inbound shipments.
	GetInbounds(ctx context.Context, in *GetInboundsRequest, opts ...grpc.CallOption) (*Inbounds, error)
	// Get LVB/FBB inventory
	//
	// The inventory endpoint is a specific LVB/FBB endpoint. It provides a paginated list containing your fulfilment by bol.com inventory. This endpoint does not provide information about your own stock.
	GetInventory(ctx context.Context, in *GetInventoryRequest, opts ...grpc.CallOption) (*InventoryResponse, error)
	// Get an invoice by invoice id
	//
	// Gets an invoice by invoice id. The available media types differ per invoice and are listed within the response from the ‘GET all invoices’ call. Note: the media types listed in the response must be given in our standard API format.
	GetInvoice(ctx context.Context, in *GetInvoiceRequest, opts ...grpc.CallOption) (*GetInvoiceResponse, error)
	// Get an invoice specification by invoice id
	//
	// Gets an invoice specification for an invoice with a paginated list of its transactions. The available media types differ per invoice specification and are listed within the response from the ‘GET all invoices’ call. Note, the media types listed in the response must be given in our standard API format.
	GetInvoiceSpecification(ctx context.Context, in *GetInvoiceSpecificationRequest, opts ...grpc.CallOption) (*GetInvoiceSpecificationResponse, error)
	// Get all invoices
	//
	// Gets a list of invoices, by default from the past 4 weeks. The optional period-start and period-end parameters can be used together to retrieve invoices from a specific date range in the past, the period can be no longer than 31 days. Invoices and their specifications can be downloaded separately in different media formats with the ‘GET an invoice by id’ and the ‘GET an invoice specification by id’ calls. The available media types differ per invoice and are listed per invoice within the response. Note: the media types listed in the response must be given in our standard API format.
	GetInvoices(ctx context.Context, in *GetInvoicesRequest, opts ...grpc.CallOption) (*GetInvoicesResponse, error)
	// Retrieve an offer by its offer id
	//
	// Retrieve an offer by using the offer id provided to you when creating or listing your offers.
	GetOffer(ctx context.Context, in *GetOfferRequest, opts ...grpc.CallOption) (*RetailerOffer, error)
	// Retrieve an offer export file by offer export id
	//
	// Retrieve an offer export file containing all offers.
	GetOfferExport(ctx context.Context, in *GetOfferExportRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get an order by order id
	//
	// Gets an order by order id.
	GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// Get open orders
	//
	// Gets a paginated list of all open orders sorted by date in descending order.
	GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (*ReducedOrders, error)
	// Get packing list by inbound id
	//
	// Get packing list by inbound id.
	GetPackingList(ctx context.Context, in *GetPackingListRequest, opts ...grpc.CallOption) (*GetPackingListResponse, error)
	// Get performance indicators
	//
	// Gets the measurements for your performance indicators per week.
	GetPerformanceIndicator(ctx context.Context, in *GetPerformanceIndicatorRequest, opts ...grpc.CallOption) (*PerformanceIndicators, error)
	// Gets the status of an asynchronous process by entity id and event type for a retailer
	//
	// Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST/DELETE requests in descending order. You need to supply an entity id and event type.
	GetProcessStatus(ctx context.Context, in *GetProcessStatusRequest, opts ...grpc.CallOption) (*ProcessStatusResponse, error)
	// Gets the status of multiple asynchronous processes by an array of process status id's for a retailer
	//
	// Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST/DELETE requests. No more than 1000 process status id's can be sent in a single request.
	GetProcessStatusBulk(ctx context.Context, in *GetProcessStatusBulkRequest, opts ...grpc.CallOption) (*ProcessStatusResponse, error)
	// Get FBB productlabels by EAN
	//
	// Get FBB productlabels by EAN.
	GetProductLabels(ctx context.Context, in *GetProductLabelsRequest, opts ...grpc.CallOption) (*GetProductLabelsResponse, error)
	// Get reductions list
	//
	// This endpoint will return a list EAN’s that are eligible for reductions on the commission fee.
	GetReductions(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get a return by rma id
	//
	// Disclaimer: We recommend using the most recent version for returns which is version 4. We discourage using version 3 as of January 16th. Retrieve a return based on the rma id.
	GetReturn(ctx context.Context, in *GetReturnRequest, opts ...grpc.CallOption) (*ReturnItem, error)
	// Get returns
	//
	// Disclaimer: We recommend using the most recent version for returns which is version 4. We discourage using version 3 as of January 16th. Get a paginated list of all returns, which are sorted by date in descending order.
	GetReturns(ctx context.Context, in *GetReturnsRequest, opts ...grpc.CallOption) (*ReturnsResponse, error)
	// Get a shipment by shipment id
	//
	// Retrieve a single shipment by its corresponding id.
	GetShipment(ctx context.Context, in *GetShipmentRequest, opts ...grpc.CallOption) (*Shipment, error)
	// Get shipment list
	//
	// A paginated list to retrieve all your shipments up to 3 months old. The shipments will be sorted by date in descending order.
	GetShipments(ctx context.Context, in *GetShipmentsRequest, opts ...grpc.CallOption) (*ShipmentResponse, error)
	// Get shipping label by transport id
	GetShippingLabel(ctx context.Context, in *GetShippingLabelRequest, opts ...grpc.CallOption) (*GetShippingLabelResponse, error)
	// Get purchasable shipping labels by order item id
	//
	// Retrieves all available shipping labels based on the supplied order item.
	GetShippingLabels(ctx context.Context, in *GetShippingLabelsRequest, opts ...grpc.CallOption) (*PurchasableShippingLabelsResponse, error)
	// Handle a return
	//
	// Disclaimer: We recommend using the most recent version for returns which is version 4. We discourage using version 3 as of January 16th. Allows the user to handle a return. This can be to either handle an open return, or change the handlingResult of an already handled return. The latter is only possible in limited scenarios, please check the returns documentation for a complete list.
	HandleReturn(ctx context.Context, in *HandleReturnRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Post inbound shipment
	//
	// Create a new inbound shipment.
	PostInbound(ctx context.Context, in *PostInboundRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Create a new offer
	//
	// Creates a new offer, and adds it to the catalog. After creation, status information can be retrieved to review if the offer is valid and published to the shop.
	PostOffer(ctx context.Context, in *PostOfferRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Request an offer export file
	//
	// Request an offer export file containing all offers.
	PostOfferExport(ctx context.Context, in *PostOfferExportRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update an offer
	//
	// Use this endpoint to send an offer update. This endpoint returns a process status.
	PutOffer(ctx context.Context, in *PutOfferRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Ship order item
	//
	// Ship a single order item within a customer order by providing shipping information. In case you purchased a shipping label you can add the shippingLabelCode to this message. In that case the transport element must be left empty. If you ship the item(s) using your own transporter method you must omit the shippingLabelCode entirely.
	ShipOrderItem(ctx context.Context, in *ShipOrderItemRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update price(s) for offer by id
	//
	// Update price(s) for offer by id.
	UpdateOfferPrice(ctx context.Context, in *UpdateOfferPriceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update stock for offer by id
	//
	// Update stock for offer by id.
	UpdateOfferStock(ctx context.Context, in *UpdateOfferStockRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type v3ServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewV3ServiceClient(cc grpc.ClientConnInterface) V3ServiceClient {
	return &v3ServiceClient{cc}
}

func (c *v3ServiceClient) AddTransportInformationByTransportId(ctx context.Context, in *AddTransportInformationByTransportIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/AddTransportInformationByTransportId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) DeleteOffer(ctx context.Context, in *DeleteOfferRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/DeleteOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetCommission(ctx context.Context, in *GetCommissionRequest, opts ...grpc.CallOption) (*Commission, error) {
	out := new(Commission)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetCommission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetCommissions(ctx context.Context, in *GetCommissionsRequest, opts ...grpc.CallOption) (*BulkCommissionResponse, error) {
	out := new(BulkCommissionResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetCommissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetDeliveryWindows(ctx context.Context, in *GetDeliveryWindowsRequest, opts ...grpc.CallOption) (*DeliveryWindowsForInboundShipments, error) {
	out := new(DeliveryWindowsForInboundShipments)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetDeliveryWindows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetFbbTransporters(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TransportersResponse, error) {
	out := new(TransportersResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetFbbTransporters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInbound(ctx context.Context, in *GetInboundRequest, opts ...grpc.CallOption) (*Inbound, error) {
	out := new(Inbound)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInbound", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInboundShippingLabel(ctx context.Context, in *GetInboundShippingLabelRequest, opts ...grpc.CallOption) (*GetInboundShippingLabelResponse, error) {
	out := new(GetInboundShippingLabelResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInboundShippingLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInbounds(ctx context.Context, in *GetInboundsRequest, opts ...grpc.CallOption) (*Inbounds, error) {
	out := new(Inbounds)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInbounds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInventory(ctx context.Context, in *GetInventoryRequest, opts ...grpc.CallOption) (*InventoryResponse, error) {
	out := new(InventoryResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInvoice(ctx context.Context, in *GetInvoiceRequest, opts ...grpc.CallOption) (*GetInvoiceResponse, error) {
	out := new(GetInvoiceResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInvoiceSpecification(ctx context.Context, in *GetInvoiceSpecificationRequest, opts ...grpc.CallOption) (*GetInvoiceSpecificationResponse, error) {
	out := new(GetInvoiceSpecificationResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInvoiceSpecification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetInvoices(ctx context.Context, in *GetInvoicesRequest, opts ...grpc.CallOption) (*GetInvoicesResponse, error) {
	out := new(GetInvoicesResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetInvoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetOffer(ctx context.Context, in *GetOfferRequest, opts ...grpc.CallOption) (*RetailerOffer, error) {
	out := new(RetailerOffer)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetOfferExport(ctx context.Context, in *GetOfferExportRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetOfferExport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (*ReducedOrders, error) {
	out := new(ReducedOrders)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetPackingList(ctx context.Context, in *GetPackingListRequest, opts ...grpc.CallOption) (*GetPackingListResponse, error) {
	out := new(GetPackingListResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetPackingList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetPerformanceIndicator(ctx context.Context, in *GetPerformanceIndicatorRequest, opts ...grpc.CallOption) (*PerformanceIndicators, error) {
	out := new(PerformanceIndicators)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetPerformanceIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetProcessStatus(ctx context.Context, in *GetProcessStatusRequest, opts ...grpc.CallOption) (*ProcessStatusResponse, error) {
	out := new(ProcessStatusResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetProcessStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetProcessStatusBulk(ctx context.Context, in *GetProcessStatusBulkRequest, opts ...grpc.CallOption) (*ProcessStatusResponse, error) {
	out := new(ProcessStatusResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetProcessStatusBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetProductLabels(ctx context.Context, in *GetProductLabelsRequest, opts ...grpc.CallOption) (*GetProductLabelsResponse, error) {
	out := new(GetProductLabelsResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetProductLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetReductions(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetReductions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetReturn(ctx context.Context, in *GetReturnRequest, opts ...grpc.CallOption) (*ReturnItem, error) {
	out := new(ReturnItem)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetReturn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetReturns(ctx context.Context, in *GetReturnsRequest, opts ...grpc.CallOption) (*ReturnsResponse, error) {
	out := new(ReturnsResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetReturns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetShipment(ctx context.Context, in *GetShipmentRequest, opts ...grpc.CallOption) (*Shipment, error) {
	out := new(Shipment)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetShipments(ctx context.Context, in *GetShipmentsRequest, opts ...grpc.CallOption) (*ShipmentResponse, error) {
	out := new(ShipmentResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetShipments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetShippingLabel(ctx context.Context, in *GetShippingLabelRequest, opts ...grpc.CallOption) (*GetShippingLabelResponse, error) {
	out := new(GetShippingLabelResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetShippingLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) GetShippingLabels(ctx context.Context, in *GetShippingLabelsRequest, opts ...grpc.CallOption) (*PurchasableShippingLabelsResponse, error) {
	out := new(PurchasableShippingLabelsResponse)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/GetShippingLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) HandleReturn(ctx context.Context, in *HandleReturnRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/HandleReturn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) PostInbound(ctx context.Context, in *PostInboundRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/PostInbound", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) PostOffer(ctx context.Context, in *PostOfferRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/PostOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) PostOfferExport(ctx context.Context, in *PostOfferExportRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/PostOfferExport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) PutOffer(ctx context.Context, in *PutOfferRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/PutOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) ShipOrderItem(ctx context.Context, in *ShipOrderItemRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/ShipOrderItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) UpdateOfferPrice(ctx context.Context, in *UpdateOfferPriceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/UpdateOfferPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v3ServiceClient) UpdateOfferStock(ctx context.Context, in *UpdateOfferStockRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bol_api_proto_v1beta1.V3Service/UpdateOfferStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// V3ServiceServer is the server API for V3Service service.
type V3ServiceServer interface {
	// Add transport information by transport id
	//
	// Add information to an existing transport. The transport id is part of the shipment. You can retrieve the transport id through the GET shipment list request.
	AddTransportInformationByTransportId(context.Context, *AddTransportInformationByTransportIdRequest) (*empty.Empty, error)
	// Cancel an order item by order item id
	//
	// This endpoint can be used to either confirm a cancellation request by the customer or to cancel an order you yourself are unable to fulfil.
	CancelOrder(context.Context, *CancelOrderRequest) (*empty.Empty, error)
	// Delete offer by id
	//
	// Delete an offer by id.
	DeleteOffer(context.Context, *DeleteOfferRequest) (*empty.Empty, error)
	// Get all commissions and reductions by EAN per single EAN
	//
	// Commissions can be filtered by condition, which defaults to NEW. If price is provided, the exact commission amount will also be calculated.
	GetCommission(context.Context, *GetCommissionRequest) (*Commission, error)
	// Get all commissions and reductions by EAN in bulk
	//
	// Gets all commissions and possible reductions by EAN, condition and optionally price. No more than 100 EAN`s can be sent in a single request.
	GetCommissions(context.Context, *GetCommissionsRequest) (*BulkCommissionResponse, error)
	// Get delivery windows for new inbound shipments
	//
	// Retrieve a list of available delivery windows when creating a new inbound shipment.
	GetDeliveryWindows(context.Context, *GetDeliveryWindowsRequest) (*DeliveryWindowsForInboundShipments, error)
	// Get FBB transporters list
	//
	// Get all transporters that carry out FBB shipments.
	GetFbbTransporters(context.Context, *empty.Empty) (*TransportersResponse, error)
	// Get inbound by inbound id
	//
	// Get inbound details by inbound id.
	GetInbound(context.Context, *GetInboundRequest) (*Inbound, error)
	// Get FBB shippinglabel by inbound id
	//
	// Get FBB shippinglabel by inbound id.
	GetInboundShippingLabel(context.Context, *GetInboundShippingLabelRequest) (*GetInboundShippingLabelResponse, error)
	// Get inbound shipment list
	//
	// A paginated list of all inbound shipments.
	GetInbounds(context.Context, *GetInboundsRequest) (*Inbounds, error)
	// Get LVB/FBB inventory
	//
	// The inventory endpoint is a specific LVB/FBB endpoint. It provides a paginated list containing your fulfilment by bol.com inventory. This endpoint does not provide information about your own stock.
	GetInventory(context.Context, *GetInventoryRequest) (*InventoryResponse, error)
	// Get an invoice by invoice id
	//
	// Gets an invoice by invoice id. The available media types differ per invoice and are listed within the response from the ‘GET all invoices’ call. Note: the media types listed in the response must be given in our standard API format.
	GetInvoice(context.Context, *GetInvoiceRequest) (*GetInvoiceResponse, error)
	// Get an invoice specification by invoice id
	//
	// Gets an invoice specification for an invoice with a paginated list of its transactions. The available media types differ per invoice specification and are listed within the response from the ‘GET all invoices’ call. Note, the media types listed in the response must be given in our standard API format.
	GetInvoiceSpecification(context.Context, *GetInvoiceSpecificationRequest) (*GetInvoiceSpecificationResponse, error)
	// Get all invoices
	//
	// Gets a list of invoices, by default from the past 4 weeks. The optional period-start and period-end parameters can be used together to retrieve invoices from a specific date range in the past, the period can be no longer than 31 days. Invoices and their specifications can be downloaded separately in different media formats with the ‘GET an invoice by id’ and the ‘GET an invoice specification by id’ calls. The available media types differ per invoice and are listed per invoice within the response. Note: the media types listed in the response must be given in our standard API format.
	GetInvoices(context.Context, *GetInvoicesRequest) (*GetInvoicesResponse, error)
	// Retrieve an offer by its offer id
	//
	// Retrieve an offer by using the offer id provided to you when creating or listing your offers.
	GetOffer(context.Context, *GetOfferRequest) (*RetailerOffer, error)
	// Retrieve an offer export file by offer export id
	//
	// Retrieve an offer export file containing all offers.
	GetOfferExport(context.Context, *GetOfferExportRequest) (*empty.Empty, error)
	// Get an order by order id
	//
	// Gets an order by order id.
	GetOrder(context.Context, *GetOrderRequest) (*Order, error)
	// Get open orders
	//
	// Gets a paginated list of all open orders sorted by date in descending order.
	GetOrders(context.Context, *GetOrdersRequest) (*ReducedOrders, error)
	// Get packing list by inbound id
	//
	// Get packing list by inbound id.
	GetPackingList(context.Context, *GetPackingListRequest) (*GetPackingListResponse, error)
	// Get performance indicators
	//
	// Gets the measurements for your performance indicators per week.
	GetPerformanceIndicator(context.Context, *GetPerformanceIndicatorRequest) (*PerformanceIndicators, error)
	// Gets the status of an asynchronous process by entity id and event type for a retailer
	//
	// Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST/DELETE requests in descending order. You need to supply an entity id and event type.
	GetProcessStatus(context.Context, *GetProcessStatusRequest) (*ProcessStatusResponse, error)
	// Gets the status of multiple asynchronous processes by an array of process status id's for a retailer
	//
	// Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST/DELETE requests. No more than 1000 process status id's can be sent in a single request.
	GetProcessStatusBulk(context.Context, *GetProcessStatusBulkRequest) (*ProcessStatusResponse, error)
	// Get FBB productlabels by EAN
	//
	// Get FBB productlabels by EAN.
	GetProductLabels(context.Context, *GetProductLabelsRequest) (*GetProductLabelsResponse, error)
	// Get reductions list
	//
	// This endpoint will return a list EAN’s that are eligible for reductions on the commission fee.
	GetReductions(context.Context, *empty.Empty) (*empty.Empty, error)
	// Get a return by rma id
	//
	// Disclaimer: We recommend using the most recent version for returns which is version 4. We discourage using version 3 as of January 16th. Retrieve a return based on the rma id.
	GetReturn(context.Context, *GetReturnRequest) (*ReturnItem, error)
	// Get returns
	//
	// Disclaimer: We recommend using the most recent version for returns which is version 4. We discourage using version 3 as of January 16th. Get a paginated list of all returns, which are sorted by date in descending order.
	GetReturns(context.Context, *GetReturnsRequest) (*ReturnsResponse, error)
	// Get a shipment by shipment id
	//
	// Retrieve a single shipment by its corresponding id.
	GetShipment(context.Context, *GetShipmentRequest) (*Shipment, error)
	// Get shipment list
	//
	// A paginated list to retrieve all your shipments up to 3 months old. The shipments will be sorted by date in descending order.
	GetShipments(context.Context, *GetShipmentsRequest) (*ShipmentResponse, error)
	// Get shipping label by transport id
	GetShippingLabel(context.Context, *GetShippingLabelRequest) (*GetShippingLabelResponse, error)
	// Get purchasable shipping labels by order item id
	//
	// Retrieves all available shipping labels based on the supplied order item.
	GetShippingLabels(context.Context, *GetShippingLabelsRequest) (*PurchasableShippingLabelsResponse, error)
	// Handle a return
	//
	// Disclaimer: We recommend using the most recent version for returns which is version 4. We discourage using version 3 as of January 16th. Allows the user to handle a return. This can be to either handle an open return, or change the handlingResult of an already handled return. The latter is only possible in limited scenarios, please check the returns documentation for a complete list.
	HandleReturn(context.Context, *HandleReturnRequest) (*empty.Empty, error)
	// Post inbound shipment
	//
	// Create a new inbound shipment.
	PostInbound(context.Context, *PostInboundRequest) (*empty.Empty, error)
	// Create a new offer
	//
	// Creates a new offer, and adds it to the catalog. After creation, status information can be retrieved to review if the offer is valid and published to the shop.
	PostOffer(context.Context, *PostOfferRequest) (*empty.Empty, error)
	// Request an offer export file
	//
	// Request an offer export file containing all offers.
	PostOfferExport(context.Context, *PostOfferExportRequest) (*empty.Empty, error)
	// Update an offer
	//
	// Use this endpoint to send an offer update. This endpoint returns a process status.
	PutOffer(context.Context, *PutOfferRequest) (*empty.Empty, error)
	// Ship order item
	//
	// Ship a single order item within a customer order by providing shipping information. In case you purchased a shipping label you can add the shippingLabelCode to this message. In that case the transport element must be left empty. If you ship the item(s) using your own transporter method you must omit the shippingLabelCode entirely.
	ShipOrderItem(context.Context, *ShipOrderItemRequest) (*empty.Empty, error)
	// Update price(s) for offer by id
	//
	// Update price(s) for offer by id.
	UpdateOfferPrice(context.Context, *UpdateOfferPriceRequest) (*empty.Empty, error)
	// Update stock for offer by id
	//
	// Update stock for offer by id.
	UpdateOfferStock(context.Context, *UpdateOfferStockRequest) (*empty.Empty, error)
}

// UnimplementedV3ServiceServer can be embedded to have forward compatible implementations.
type UnimplementedV3ServiceServer struct {
}

func (*UnimplementedV3ServiceServer) AddTransportInformationByTransportId(context.Context, *AddTransportInformationByTransportIdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTransportInformationByTransportId not implemented")
}
func (*UnimplementedV3ServiceServer) CancelOrder(context.Context, *CancelOrderRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOrder not implemented")
}
func (*UnimplementedV3ServiceServer) DeleteOffer(context.Context, *DeleteOfferRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOffer not implemented")
}
func (*UnimplementedV3ServiceServer) GetCommission(context.Context, *GetCommissionRequest) (*Commission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommission not implemented")
}
func (*UnimplementedV3ServiceServer) GetCommissions(context.Context, *GetCommissionsRequest) (*BulkCommissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommissions not implemented")
}
func (*UnimplementedV3ServiceServer) GetDeliveryWindows(context.Context, *GetDeliveryWindowsRequest) (*DeliveryWindowsForInboundShipments, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeliveryWindows not implemented")
}
func (*UnimplementedV3ServiceServer) GetFbbTransporters(context.Context, *empty.Empty) (*TransportersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFbbTransporters not implemented")
}
func (*UnimplementedV3ServiceServer) GetInbound(context.Context, *GetInboundRequest) (*Inbound, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInbound not implemented")
}
func (*UnimplementedV3ServiceServer) GetInboundShippingLabel(context.Context, *GetInboundShippingLabelRequest) (*GetInboundShippingLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInboundShippingLabel not implemented")
}
func (*UnimplementedV3ServiceServer) GetInbounds(context.Context, *GetInboundsRequest) (*Inbounds, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInbounds not implemented")
}
func (*UnimplementedV3ServiceServer) GetInventory(context.Context, *GetInventoryRequest) (*InventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInventory not implemented")
}
func (*UnimplementedV3ServiceServer) GetInvoice(context.Context, *GetInvoiceRequest) (*GetInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInvoice not implemented")
}
func (*UnimplementedV3ServiceServer) GetInvoiceSpecification(context.Context, *GetInvoiceSpecificationRequest) (*GetInvoiceSpecificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInvoiceSpecification not implemented")
}
func (*UnimplementedV3ServiceServer) GetInvoices(context.Context, *GetInvoicesRequest) (*GetInvoicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInvoices not implemented")
}
func (*UnimplementedV3ServiceServer) GetOffer(context.Context, *GetOfferRequest) (*RetailerOffer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOffer not implemented")
}
func (*UnimplementedV3ServiceServer) GetOfferExport(context.Context, *GetOfferExportRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOfferExport not implemented")
}
func (*UnimplementedV3ServiceServer) GetOrder(context.Context, *GetOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}
func (*UnimplementedV3ServiceServer) GetOrders(context.Context, *GetOrdersRequest) (*ReducedOrders, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrders not implemented")
}
func (*UnimplementedV3ServiceServer) GetPackingList(context.Context, *GetPackingListRequest) (*GetPackingListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPackingList not implemented")
}
func (*UnimplementedV3ServiceServer) GetPerformanceIndicator(context.Context, *GetPerformanceIndicatorRequest) (*PerformanceIndicators, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerformanceIndicator not implemented")
}
func (*UnimplementedV3ServiceServer) GetProcessStatus(context.Context, *GetProcessStatusRequest) (*ProcessStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProcessStatus not implemented")
}
func (*UnimplementedV3ServiceServer) GetProcessStatusBulk(context.Context, *GetProcessStatusBulkRequest) (*ProcessStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProcessStatusBulk not implemented")
}
func (*UnimplementedV3ServiceServer) GetProductLabels(context.Context, *GetProductLabelsRequest) (*GetProductLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductLabels not implemented")
}
func (*UnimplementedV3ServiceServer) GetReductions(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReductions not implemented")
}
func (*UnimplementedV3ServiceServer) GetReturn(context.Context, *GetReturnRequest) (*ReturnItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReturn not implemented")
}
func (*UnimplementedV3ServiceServer) GetReturns(context.Context, *GetReturnsRequest) (*ReturnsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReturns not implemented")
}
func (*UnimplementedV3ServiceServer) GetShipment(context.Context, *GetShipmentRequest) (*Shipment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShipment not implemented")
}
func (*UnimplementedV3ServiceServer) GetShipments(context.Context, *GetShipmentsRequest) (*ShipmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShipments not implemented")
}
func (*UnimplementedV3ServiceServer) GetShippingLabel(context.Context, *GetShippingLabelRequest) (*GetShippingLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShippingLabel not implemented")
}
func (*UnimplementedV3ServiceServer) GetShippingLabels(context.Context, *GetShippingLabelsRequest) (*PurchasableShippingLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShippingLabels not implemented")
}
func (*UnimplementedV3ServiceServer) HandleReturn(context.Context, *HandleReturnRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleReturn not implemented")
}
func (*UnimplementedV3ServiceServer) PostInbound(context.Context, *PostInboundRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostInbound not implemented")
}
func (*UnimplementedV3ServiceServer) PostOffer(context.Context, *PostOfferRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostOffer not implemented")
}
func (*UnimplementedV3ServiceServer) PostOfferExport(context.Context, *PostOfferExportRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostOfferExport not implemented")
}
func (*UnimplementedV3ServiceServer) PutOffer(context.Context, *PutOfferRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutOffer not implemented")
}
func (*UnimplementedV3ServiceServer) ShipOrderItem(context.Context, *ShipOrderItemRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShipOrderItem not implemented")
}
func (*UnimplementedV3ServiceServer) UpdateOfferPrice(context.Context, *UpdateOfferPriceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOfferPrice not implemented")
}
func (*UnimplementedV3ServiceServer) UpdateOfferStock(context.Context, *UpdateOfferStockRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOfferStock not implemented")
}

func RegisterV3ServiceServer(s *grpc.Server, srv V3ServiceServer) {
	s.RegisterService(&_V3Service_serviceDesc, srv)
}

func _V3Service_AddTransportInformationByTransportId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTransportInformationByTransportIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).AddTransportInformationByTransportId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/AddTransportInformationByTransportId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).AddTransportInformationByTransportId(ctx, req.(*AddTransportInformationByTransportIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).CancelOrder(ctx, req.(*CancelOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_DeleteOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).DeleteOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/DeleteOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).DeleteOffer(ctx, req.(*DeleteOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetCommission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetCommission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetCommission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetCommission(ctx, req.(*GetCommissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetCommissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetCommissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetCommissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetCommissions(ctx, req.(*GetCommissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetDeliveryWindows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeliveryWindowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetDeliveryWindows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetDeliveryWindows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetDeliveryWindows(ctx, req.(*GetDeliveryWindowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetFbbTransporters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetFbbTransporters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetFbbTransporters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetFbbTransporters(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInbound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInboundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInbound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInbound",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInbound(ctx, req.(*GetInboundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInboundShippingLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInboundShippingLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInboundShippingLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInboundShippingLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInboundShippingLabel(ctx, req.(*GetInboundShippingLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInbounds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInboundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInbounds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInbounds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInbounds(ctx, req.(*GetInboundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInventory(ctx, req.(*GetInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInvoice(ctx, req.(*GetInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInvoiceSpecification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvoiceSpecificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInvoiceSpecification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInvoiceSpecification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInvoiceSpecification(ctx, req.(*GetInvoiceSpecificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetInvoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvoicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetInvoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetInvoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetInvoices(ctx, req.(*GetInvoicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetOffer(ctx, req.(*GetOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetOfferExport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOfferExportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetOfferExport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetOfferExport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetOfferExport(ctx, req.(*GetOfferExportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetOrder(ctx, req.(*GetOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetOrders(ctx, req.(*GetOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetPackingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPackingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetPackingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetPackingList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetPackingList(ctx, req.(*GetPackingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetPerformanceIndicator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPerformanceIndicatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetPerformanceIndicator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetPerformanceIndicator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetPerformanceIndicator(ctx, req.(*GetPerformanceIndicatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetProcessStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProcessStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetProcessStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetProcessStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetProcessStatus(ctx, req.(*GetProcessStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetProcessStatusBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProcessStatusBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetProcessStatusBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetProcessStatusBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetProcessStatusBulk(ctx, req.(*GetProcessStatusBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetProductLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetProductLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetProductLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetProductLabels(ctx, req.(*GetProductLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetReductions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetReductions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetReductions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetReductions(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetReturn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetReturn(ctx, req.(*GetReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetReturns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReturnsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetReturns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetReturns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetReturns(ctx, req.(*GetReturnsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetShipment(ctx, req.(*GetShipmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetShipments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetShipments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetShipments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetShipments(ctx, req.(*GetShipmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetShippingLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShippingLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetShippingLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetShippingLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetShippingLabel(ctx, req.(*GetShippingLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_GetShippingLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShippingLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).GetShippingLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/GetShippingLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).GetShippingLabels(ctx, req.(*GetShippingLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_HandleReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).HandleReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/HandleReturn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).HandleReturn(ctx, req.(*HandleReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_PostInbound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostInboundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).PostInbound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/PostInbound",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).PostInbound(ctx, req.(*PostInboundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_PostOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).PostOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/PostOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).PostOffer(ctx, req.(*PostOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_PostOfferExport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostOfferExportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).PostOfferExport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/PostOfferExport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).PostOfferExport(ctx, req.(*PostOfferExportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_PutOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).PutOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/PutOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).PutOffer(ctx, req.(*PutOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_ShipOrderItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipOrderItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).ShipOrderItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/ShipOrderItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).ShipOrderItem(ctx, req.(*ShipOrderItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_UpdateOfferPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOfferPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).UpdateOfferPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/UpdateOfferPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).UpdateOfferPrice(ctx, req.(*UpdateOfferPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V3Service_UpdateOfferStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOfferStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V3ServiceServer).UpdateOfferStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bol_api_proto_v1beta1.V3Service/UpdateOfferStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V3ServiceServer).UpdateOfferStock(ctx, req.(*UpdateOfferStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _V3Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bol_api_proto_v1beta1.V3Service",
	HandlerType: (*V3ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTransportInformationByTransportId",
			Handler:    _V3Service_AddTransportInformationByTransportId_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _V3Service_CancelOrder_Handler,
		},
		{
			MethodName: "DeleteOffer",
			Handler:    _V3Service_DeleteOffer_Handler,
		},
		{
			MethodName: "GetCommission",
			Handler:    _V3Service_GetCommission_Handler,
		},
		{
			MethodName: "GetCommissions",
			Handler:    _V3Service_GetCommissions_Handler,
		},
		{
			MethodName: "GetDeliveryWindows",
			Handler:    _V3Service_GetDeliveryWindows_Handler,
		},
		{
			MethodName: "GetFbbTransporters",
			Handler:    _V3Service_GetFbbTransporters_Handler,
		},
		{
			MethodName: "GetInbound",
			Handler:    _V3Service_GetInbound_Handler,
		},
		{
			MethodName: "GetInboundShippingLabel",
			Handler:    _V3Service_GetInboundShippingLabel_Handler,
		},
		{
			MethodName: "GetInbounds",
			Handler:    _V3Service_GetInbounds_Handler,
		},
		{
			MethodName: "GetInventory",
			Handler:    _V3Service_GetInventory_Handler,
		},
		{
			MethodName: "GetInvoice",
			Handler:    _V3Service_GetInvoice_Handler,
		},
		{
			MethodName: "GetInvoiceSpecification",
			Handler:    _V3Service_GetInvoiceSpecification_Handler,
		},
		{
			MethodName: "GetInvoices",
			Handler:    _V3Service_GetInvoices_Handler,
		},
		{
			MethodName: "GetOffer",
			Handler:    _V3Service_GetOffer_Handler,
		},
		{
			MethodName: "GetOfferExport",
			Handler:    _V3Service_GetOfferExport_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _V3Service_GetOrder_Handler,
		},
		{
			MethodName: "GetOrders",
			Handler:    _V3Service_GetOrders_Handler,
		},
		{
			MethodName: "GetPackingList",
			Handler:    _V3Service_GetPackingList_Handler,
		},
		{
			MethodName: "GetPerformanceIndicator",
			Handler:    _V3Service_GetPerformanceIndicator_Handler,
		},
		{
			MethodName: "GetProcessStatus",
			Handler:    _V3Service_GetProcessStatus_Handler,
		},
		{
			MethodName: "GetProcessStatusBulk",
			Handler:    _V3Service_GetProcessStatusBulk_Handler,
		},
		{
			MethodName: "GetProductLabels",
			Handler:    _V3Service_GetProductLabels_Handler,
		},
		{
			MethodName: "GetReductions",
			Handler:    _V3Service_GetReductions_Handler,
		},
		{
			MethodName: "GetReturn",
			Handler:    _V3Service_GetReturn_Handler,
		},
		{
			MethodName: "GetReturns",
			Handler:    _V3Service_GetReturns_Handler,
		},
		{
			MethodName: "GetShipment",
			Handler:    _V3Service_GetShipment_Handler,
		},
		{
			MethodName: "GetShipments",
			Handler:    _V3Service_GetShipments_Handler,
		},
		{
			MethodName: "GetShippingLabel",
			Handler:    _V3Service_GetShippingLabel_Handler,
		},
		{
			MethodName: "GetShippingLabels",
			Handler:    _V3Service_GetShippingLabels_Handler,
		},
		{
			MethodName: "HandleReturn",
			Handler:    _V3Service_HandleReturn_Handler,
		},
		{
			MethodName: "PostInbound",
			Handler:    _V3Service_PostInbound_Handler,
		},
		{
			MethodName: "PostOffer",
			Handler:    _V3Service_PostOffer_Handler,
		},
		{
			MethodName: "PostOfferExport",
			Handler:    _V3Service_PostOfferExport_Handler,
		},
		{
			MethodName: "PutOffer",
			Handler:    _V3Service_PutOffer_Handler,
		},
		{
			MethodName: "ShipOrderItem",
			Handler:    _V3Service_ShipOrderItem_Handler,
		},
		{
			MethodName: "UpdateOfferPrice",
			Handler:    _V3Service_UpdateOfferPrice_Handler,
		},
		{
			MethodName: "UpdateOfferStock",
			Handler:    _V3Service_UpdateOfferStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bol-api-proto-go/bol_api.proto",
}
